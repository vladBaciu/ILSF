ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_INVERTING_AMP.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	__NVIC_EnableIRQ, %function
  25              	__NVIC_EnableIRQ:
  26              	.LFB104:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @file     core_cm4.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @version  V5.0.5
   5:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @date     08. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined (__clang__)
  28:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
  30:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 2


  31:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include <stdint.h>
  35:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  36:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
  37:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  extern "C" {
  38:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
  39:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  40:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
  41:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  44:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  47:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  50:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  53:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  54:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  55:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
  56:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                 CMSIS definitions
  57:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
  58:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
  59:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup Cortex_M4
  60:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
  61:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  62:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  63:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include "cmsis_version.h"
  64:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  
  65:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  71:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  73:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
  76:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
  80:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
  81:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
  83:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
  84:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
  85:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
  86:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
  87:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 3


  88:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
  92:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
  93:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
  95:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
  96:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
  97:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
  98:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
  99:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 100:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 104:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 105:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 107:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 108:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 109:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 110:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 111:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 112:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __ARMVFP__
 114:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 116:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 117:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 119:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 120:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 121:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 122:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 123:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 128:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 129:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 131:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 132:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 133:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 134:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 135:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 136:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 140:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 141:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 143:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 144:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 4


 145:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 146:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 147:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 148:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 152:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 153:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 155:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 156:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 157:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 158:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 159:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 160:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 161:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 162:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 164:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 165:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 166:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
 167:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 168:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 169:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 171:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 173:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 176:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 177:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  extern "C" {
 178:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 179:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 180:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* check device defines and use defaults */
 181:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __CM4_REV
 183:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 186:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 187:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 191:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 192:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 196:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 197:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 201:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 5


 202:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 206:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 207:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 208:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 210:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 212:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
 216:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 217:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
 219:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 221:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 224:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* following defines should be used for structure members */
 225:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 229:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 231:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 232:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 233:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
 234:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                 Register Abstraction
 235:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   Core Register contain:
 236:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Register
 237:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core NVIC Register
 238:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SCB Register
 239:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SysTick Register
 240:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Debug Register
 241:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core MPU Register
 242:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core FPU Register
 243:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
 244:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 245:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
 248:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 249:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 250:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 254:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 255:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 256:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 257:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 6


 259:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 260:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 261:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 262:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 263:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } APSR_Type;
 274:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 275:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* APSR Register Definitions */
 276:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 279:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 282:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 285:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 288:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 291:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 294:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 295:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 296:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 298:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 299:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 300:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 301:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 302:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } IPSR_Type;
 307:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 308:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* IPSR Register Definitions */
 309:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 312:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 313:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 314:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 7


 316:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 317:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 318:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 319:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 320:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } xPSR_Type;
 335:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 336:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* xPSR Register Definitions */
 337:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 340:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 343:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 346:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 349:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 352:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 355:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 358:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 361:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 364:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 367:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 368:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 369:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 371:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 372:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 8


 373:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 374:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 375:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } CONTROL_Type;
 382:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 383:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 387:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 390:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 393:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 395:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 396:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 397:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 401:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 402:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 403:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 404:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 406:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 407:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 408:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }  NVIC_Type;
 422:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 423:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 427:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 429:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 9


 430:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 431:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 435:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 436:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 437:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 438:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 440:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 441:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 442:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SCB_Type;
 464:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 465:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 469:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 472:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 475:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 478:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 481:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 485:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 10


 487:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 488:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 491:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 494:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 497:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 500:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 503:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 506:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 509:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 512:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 516:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 520:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 523:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 526:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 529:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 532:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 535:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 538:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 542:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 11


 544:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 545:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 548:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 552:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 555:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 558:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 561:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 564:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 567:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 571:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 574:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 577:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 580:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 583:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 586:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 589:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 592:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 595:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 598:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 12


 601:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 604:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 607:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 610:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 614:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 617:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 620:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 624:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 627:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 630:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 633:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 636:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 639:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 643:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 646:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 649:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 652:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 655:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 13


 658:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 661:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 665:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 668:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 671:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 674:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 677:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 680:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 684:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 687:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 690:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 694:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 697:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 700:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 703:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 706:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 708:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 709:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 710:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 714:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 14


 715:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 716:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 717:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 719:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 720:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 721:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SCnSCB_Type;
 725:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 726:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 730:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 734:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 737:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 740:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 743:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 746:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 748:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 749:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 750:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 754:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 755:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 756:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 757:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 759:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 760:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 761:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SysTick_Type;
 766:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 767:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 771:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 15


 772:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 774:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 777:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 780:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 784:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 788:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 792:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 795:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 798:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 800:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 801:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 802:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 806:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 807:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 808:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 809:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 811:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 812:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 813:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  union
 814:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 815:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 16


 829:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } ITM_Type;
 846:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 847:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 851:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 855:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 858:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 861:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 864:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 867:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 870:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 873:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 876:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 879:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 883:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 17


 886:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 887:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 891:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 895:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 898:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 901:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 903:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 904:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 905:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 909:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 910:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 911:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 912:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 914:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 915:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 916:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } DWT_Type;
 940:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 941:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Control Register Definitions */
 942:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 18


 943:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 945:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 948:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 951:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 954:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 957:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 960:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 963:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 966:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 969:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 972:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 975:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 978:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 981:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 984:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 987:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 990:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 993:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 996:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 19


1000:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1004:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1008:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1012:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1016:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1020:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1024:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1027:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1030:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1033:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1036:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1039:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1042:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1045:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1048:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1050:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1051:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1052:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1056:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 20


1057:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1058:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1059:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1061:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1062:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1063:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1075:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } TPI_Type;
1088:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1089:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< @Deprec
1091:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< @Deprec
1092:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1093:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_SWOSCALER_Pos              0U                                         /*!< TPI ACP
1094:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_SWOSCALER_Msk             (0xFFFFUL /*<< TPI_ACPR_SWOSCALER_Pos*/)    /*!< TPI ACP
1095:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1096:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1097:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1098:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1099:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1100:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1101:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1102:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1103:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1104:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1105:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1106:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1107:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1108:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1109:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1110:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1111:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1112:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1113:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 21


1114:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1115:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1116:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1117:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1118:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1119:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1120:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1121:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1122:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1123:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1124:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1125:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1126:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1127:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1128:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1129:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1130:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1131:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1132:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1133:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1134:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1135:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1136:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1137:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1138:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1139:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1140:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1141:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1142:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1143:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1144:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1145:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1146:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1147:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1148:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1149:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1150:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1154:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1157:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1160:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1163:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1166:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1169:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 22


1171:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1172:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1174:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1175:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1176:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1177:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1178:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1179:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1180:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI DEVID Register Definitions */
1181:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1182:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1183:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1184:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1185:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1186:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1187:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1188:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1189:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1190:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1191:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1192:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1193:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1194:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1195:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1196:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1197:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1198:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1199:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1200:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1201:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1202:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1203:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1204:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1206:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1207:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1208:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1209:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1210:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1211:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1212:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1213:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1214:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1215:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1216:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1217:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1218:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1219:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1220:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1221:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1222:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1223:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1224:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1225:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1226:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1227:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 23


1228:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1229:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1230:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1231:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1232:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1233:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } MPU_Type;
1234:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1235:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1236:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1237:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Type Register Definitions */
1238:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1239:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1240:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1241:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1242:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1243:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1244:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1245:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1246:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1247:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Control Register Definitions */
1248:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1249:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1250:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1251:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1252:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1253:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1254:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1255:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1256:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1257:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Number Register Definitions */
1258:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1259:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1260:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1261:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1262:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1263:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1264:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1265:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1266:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1267:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1268:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1269:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1270:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1271:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1272:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1273:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1274:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1275:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1276:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1277:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1278:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1279:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1280:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1281:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1282:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1283:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1284:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 24


1285:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1286:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1287:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1288:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1289:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1290:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1291:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1292:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1293:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1294:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1295:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1296:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1297:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1298:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1299:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1300:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1301:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1302:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1303:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1304:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1305:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1306:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1307:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1308:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1309:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1310:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1311:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1312:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1313:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1314:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1315:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1316:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1317:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1318:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
1319:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1320:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1321:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1322:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1323:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1324:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } FPU_Type;
1325:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1326:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1327:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1328:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1329:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1330:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1331:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1332:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1333:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1334:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1335:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1336:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1337:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1338:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1339:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1340:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1341:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 25


1342:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1343:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1344:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1345:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1346:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1347:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1348:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1349:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1350:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1351:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1352:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1353:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1354:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1355:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1356:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1357:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1358:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1359:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1360:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1361:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1362:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1363:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1364:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1365:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1366:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1367:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1368:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1369:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1370:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1371:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1372:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1373:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1374:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1375:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1376:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1377:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1378:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1379:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1380:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1381:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1382:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1383:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1384:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1385:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1386:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1387:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1388:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1389:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1390:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1391:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1392:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1393:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1394:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1395:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1396:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1397:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1398:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 26


1399:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1400:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1401:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1402:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1403:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1404:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1405:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1406:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1407:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1408:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1409:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1410:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1411:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1412:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1413:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1414:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1415:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1416:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1417:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1418:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1419:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1420:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1421:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1422:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1423:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1424:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1425:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1426:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1427:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1428:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } CoreDebug_Type;
1429:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1430:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1431:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1432:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1433:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1434:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1435:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1436:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1437:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1438:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1439:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1440:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1441:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1442:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1443:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1444:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1445:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1446:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1447:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1448:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1449:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1450:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1451:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1452:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1453:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1454:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1455:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 27


1456:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1457:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1458:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1459:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1460:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1461:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1462:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1463:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1464:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1465:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1466:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1467:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1468:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1469:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1470:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1471:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1472:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1473:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1474:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1475:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1476:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1477:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1478:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1479:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1480:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1481:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1482:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1483:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1484:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1485:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1486:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1487:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1488:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1489:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1490:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1491:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1492:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1493:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1494:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1495:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1496:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1497:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1498:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1499:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1500:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1501:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1502:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1503:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1504:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1505:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1506:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1507:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1508:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1509:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1510:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1511:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1512:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 28


1513:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1514:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1515:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1516:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1517:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1518:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1519:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1520:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1521:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1522:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1523:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1524:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1525:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1526:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1527:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1528:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return           Masked and shifted value.
1529:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1530:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1531:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1532:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1533:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1534:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1535:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1536:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return           Masked and shifted bit field value.
1537:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1538:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1539:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1540:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1541:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1542:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1543:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1544:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1545:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1546:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1547:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1548:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1549:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1550:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Memory mapping of Core Hardware */
1551:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1552:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1553:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1554:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1555:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1556:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1557:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1558:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1559:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1560:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1561:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1562:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1563:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1564:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1565:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1566:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1567:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1568:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1569:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 29


1570:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1571:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1572:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
1573:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1574:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1575:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1576:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1577:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} */
1578:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1579:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1580:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1581:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                Hardware Abstraction Layer
1583:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   Core Function Interface contains:
1584:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core NVIC Functions
1585:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SysTick Functions
1586:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Debug Functions
1587:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Register Access Functions
1588:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
1589:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1590:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1591:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1592:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1593:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1594:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1595:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1596:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1597:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1598:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1599:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1600:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1601:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1602:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1603:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1604:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1605:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1606:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
1607:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
1609:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1610:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1611:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1612:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1613:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1614:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1615:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1616:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1617:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1618:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1619:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1620:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1621:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1622:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1623:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1624:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1625:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1626:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 30


1627:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
1629:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1630:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1631:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1632:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1633:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1634:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1635:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1636:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1637:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1638:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Set Priority Grouping
1639:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1640:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1641:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            Only values from 0..7 are used.
1642:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            In case of a conflict between priority grouping and available
1643:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1644:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1645:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1646:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1647:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1648:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t reg_value;
1649:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1650:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1651:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1652:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1653:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1654:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1655:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1656:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1657:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1658:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1659:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1660:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1661:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Get Priority Grouping
1662:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1663:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1664:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1665:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1666:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1667:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1668:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1669:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1670:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1671:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1672:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Enable Interrupt
1673:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1674:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1675:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1676:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1677:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1678:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
  28              		.loc 1 1678 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 31


  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1679:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  42              		.loc 1 1679 0
  43 000a B7F90630 		ldrsh	r3, [r7, #6]
  44 000e 002B     		cmp	r3, #0
  45 0010 0BDB     		blt	.L3
1680:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1681:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              		.loc 1 1681 0
  47 0012 0949     		ldr	r1, .L4
  48 0014 B7F90630 		ldrsh	r3, [r7, #6]
  49 0018 5B09     		lsrs	r3, r3, #5
  50 001a FA88     		ldrh	r2, [r7, #6]
  51 001c 02F01F02 		and	r2, r2, #31
  52 0020 0120     		movs	r0, #1
  53 0022 00FA02F2 		lsl	r2, r0, r2
  54 0026 41F82320 		str	r2, [r1, r3, lsl #2]
  55              	.L3:
1682:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1683:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
  56              		.loc 1 1683 0
  57 002a 00BF     		nop
  58 002c 0C37     		adds	r7, r7, #12
  59              		.cfi_def_cfa_offset 4
  60 002e BD46     		mov	sp, r7
  61              		.cfi_def_cfa_register 13
  62              		@ sp needed
  63 0030 5DF8047B 		ldr	r7, [sp], #4
  64              		.cfi_restore 7
  65              		.cfi_def_cfa_offset 0
  66 0034 7047     		bx	lr
  67              	.L5:
  68 0036 00BF     		.align	2
  69              	.L4:
  70 0038 00E100E0 		.word	-536813312
  71              		.cfi_endproc
  72              	.LFE104:
  73              		.size	__NVIC_EnableIRQ, .-__NVIC_EnableIRQ
  74              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  75              		.align	2
  76              		.thumb
  77              		.thumb_func
  78              		.type	__NVIC_DisableIRQ, %function
  79              	__NVIC_DisableIRQ:
  80              	.LFB106:
1684:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1685:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1686:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1687:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Get Interrupt Enable status
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 32


1688:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1689:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1690:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1691:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return             1  Interrupt is enabled.
1692:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1693:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1694:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1695:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1696:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1697:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1698:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1699:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1700:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   else
1701:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1702:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     return(0U);
1703:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1704:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1705:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1706:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1707:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1708:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Disable Interrupt
1709:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1710:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1711:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1712:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1713:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1714:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
  81              		.loc 1 1714 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 80B4     		push	{r7}
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  93 0006 0346     		mov	r3, r0
  94 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1715:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  95              		.loc 1 1715 0
  96 000a B7F90630 		ldrsh	r3, [r7, #6]
  97 000e 002B     		cmp	r3, #0
  98 0010 10DB     		blt	.L8
1716:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1717:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  99              		.loc 1 1717 0
 100 0012 0B49     		ldr	r1, .L9
 101 0014 B7F90630 		ldrsh	r3, [r7, #6]
 102 0018 5B09     		lsrs	r3, r3, #5
 103 001a FA88     		ldrh	r2, [r7, #6]
 104 001c 02F01F02 		and	r2, r2, #31
 105 0020 0120     		movs	r0, #1
 106 0022 00FA02F2 		lsl	r2, r0, r2
 107 0026 2033     		adds	r3, r3, #32
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 33


 108 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 109              	.LBB6:
 110              	.LBB7:
 111              		.file 2 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 34


  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 35


 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 133:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 134:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 135:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 142:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 144:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 145:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 146:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 147:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Control Register value
 150:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 151:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 153:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 154:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 155:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 157:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 158:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 159:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 160:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 36


 168:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 170:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 173:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 174:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 175:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 176:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 177:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 181:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 183:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 185:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 186:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 187:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 189:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 193:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 195:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 197:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 198:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 199:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 200:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 201:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 205:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 207:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 208:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 209:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 211:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 212:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 213:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 214:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 215:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               APSR Register value
 218:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 219:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 221:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 222:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 223:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 37


 225:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 226:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 227:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 228:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 229:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 233:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 235:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 236:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 237:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 239:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 240:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 241:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 242:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 243:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
 246:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 247:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 249:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 250:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 251:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 253:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 254:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 255:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 256:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 258:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
 261:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 262:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 264:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 265:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 266:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 268:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 269:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 270:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 271:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 272:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 273:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 277:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 279:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 281:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 38


 282:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 283:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 285:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 289:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 291:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 293:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 294:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 295:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 296:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 297:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 300:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 301:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 303:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 304:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 305:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 307:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 308:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 309:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 310:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 312:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 315:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 316:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 318:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 319:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 320:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 322:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 323:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 324:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 325:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 326:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 327:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 331:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 333:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 335:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 336:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 337:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 39


 339:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 343:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 345:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 347:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 348:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 349:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 350:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 352:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               SP Register value
 355:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 356:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 358:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 359:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 360:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 362:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 363:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 364:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 365:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 372:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 374:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 375:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 376:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 377:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 378:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 382:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 384:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 385:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 386:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 388:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 389:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 390:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 391:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 393:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 40


 396:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 397:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 399:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 400:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 401:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 403:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 404:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 405:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 406:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 407:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 408:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 412:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 414:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 416:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 417:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 418:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 420:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 424:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 426:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 428:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 429:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 430:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 431:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 435:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 439:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 441:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 443:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 444:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 445:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 446:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 450:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 452:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 41


 453:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 454:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 455:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 456:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 457:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 461:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 463:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 464:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 465:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 467:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 468:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 469:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 470:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 472:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 476:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 478:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 479:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 480:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 482:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 483:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 484:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 485:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 486:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 487:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 491:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 493:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 495:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 496:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 497:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 499:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 503:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 505:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 507:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 508:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 509:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 42


 510:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 511:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 516:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 518:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 520:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 521:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 522:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 523:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 527:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 529:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 530:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 531:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 533:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 534:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 535:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 536:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 538:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 542:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 544:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 545:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 546:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 548:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 549:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 550:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 551:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 552:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 553:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 557:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 559:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 561:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 562:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 563:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 565:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 43


 567:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 569:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 571:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 573:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 574:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 575:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 579:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 580:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 583:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 584:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 588:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 589:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 592:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 594:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 598:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 599:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 600:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 602:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 603:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 604:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 605:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 607:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 611:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 614:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 616:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 619:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 620:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 621:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 623:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 44


 624:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 625:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 626:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 627:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 628:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 629:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 633:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 634:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 637:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 639:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 644:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 646:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 647:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 648:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 649:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 651:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 655:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 658:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 660:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 664:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 666:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 667:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 668:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 669:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 670:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 671:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 675:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 676:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 679:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 45


 681:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 685:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 686:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 687:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 689:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 690:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 691:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 692:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 693:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 695:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 699:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 702:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 704:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 707:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 708:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 709:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 711:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 712:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 713:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 714:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 715:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 716:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 717:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 721:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 722:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 725:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 727:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 732:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 734:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 735:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 736:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 737:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 46


 738:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 739:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 743:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 748:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 752:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 754:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 755:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 756:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 757:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 760:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 761:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 762:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 763:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 764:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 765:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get FPSCR
 766:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 767:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 768:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 770:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 771:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 772:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 773:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 774:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 775:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 776:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 777:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 778:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 779:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 780:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 781:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 782:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 783:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(0U);
 784:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 785:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 786:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 787:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 788:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 789:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set FPSCR
 790:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 791:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 792:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 793:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 794:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 47


 795:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 796:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 797:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 798:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 799:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 800:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 801:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 802:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 803:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 804:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)fpscr;
 805:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 806:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 807:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 808:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 809:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 810:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 811:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 812:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 813:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 814:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 815:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 816:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 817:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 818:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Access to dedicated instructions
 819:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 820:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** */
 821:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 822:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 823:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 824:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 825:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 826:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 827:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 828:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 829:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 830:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 831:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 832:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 833:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 834:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 835:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 836:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   No Operation
 837:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 838:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 839:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 840:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 841:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 842:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 843:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 844:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 845:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 846:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 847:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 848:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 849:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Event
 850:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 851:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 48


 852:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 853:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 854:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 855:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 856:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 857:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Send Event
 858:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 859:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 860:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 861:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 862:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 863:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 864:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 865:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 866:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 867:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            after the instruction has been completed.
 868:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 869:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 870:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 872:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 873:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 874:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 875:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 876:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 877:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 878:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 879:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 880:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 881:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 882:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 112              		.loc 2 882 0
 113              		.syntax unified
 114              	@ 882 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 115 002c BFF34F8F 		dsb 0xF
 116              	@ 0 "" 2
 117              		.thumb
 118              		.syntax unified
 119              	.LBE7:
 120              	.LBE6:
 121              	.LBB8:
 122              	.LBB9:
 871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 123              		.loc 2 871 0
 124              		.syntax unified
 125              	@ 871 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 126 0030 BFF36F8F 		isb 0xF
 127              	@ 0 "" 2
 128              		.thumb
 129              		.syntax unified
 130              	.L8:
 131              	.LBE9:
 132              	.LBE8:
1718:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __DSB();
1719:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __ISB();
1720:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1721:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 49


 133              		.loc 1 1721 0
 134 0034 00BF     		nop
 135 0036 0C37     		adds	r7, r7, #12
 136              		.cfi_def_cfa_offset 4
 137 0038 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 003a 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 003e 7047     		bx	lr
 144              	.L10:
 145              		.align	2
 146              	.L9:
 147 0040 00E100E0 		.word	-536813312
 148              		.cfi_endproc
 149              	.LFE106:
 150              		.size	__NVIC_DisableIRQ, .-__NVIC_DisableIRQ
 151              		.section	.text.Cy_SAR_Disable,"ax",%progbits
 152              		.align	2
 153              		.thumb
 154              		.thumb_func
 155              		.type	Cy_SAR_Disable, %function
 156              	Cy_SAR_Disable:
 157              	.LFB166:
 158              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 50


  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 51


  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 52


 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 53


 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 54


 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 55


 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 56


 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 57


 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 58


 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 59


 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 60


 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 61


 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 62


 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 63


 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 64


 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 65


 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 66


 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 67


1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 68


1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 69


1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 70


1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 71


1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 72


1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 73


1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 74


1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 159              		.loc 3 1439 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0000 80B4     		push	{r7}
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 7, -4
 167 0002 83B0     		sub	sp, sp, #12
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 172              		.loc 3 1440 0
 173 0008 7B68     		ldr	r3, [r7, #4]
 174 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 75


 175 000c 23F00042 		bic	r2, r3, #-2147483648
 176 0010 7B68     		ldr	r3, [r7, #4]
 177 0012 1A60     		str	r2, [r3]
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 178              		.loc 3 1441 0
 179 0014 00BF     		nop
 180 0016 0C37     		adds	r7, r7, #12
 181              		.cfi_def_cfa_offset 4
 182 0018 BD46     		mov	sp, r7
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 001a 5DF8047B 		ldr	r7, [sp], #4
 186              		.cfi_restore 7
 187              		.cfi_def_cfa_offset 0
 188 001e 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE166:
 191              		.size	Cy_SAR_Disable, .-Cy_SAR_Disable
 192              		.section	.rodata
 193              		.align	2
 194              	.LC0:
 195 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 195      72617465 
 195      645F536F 
 195      75726365 
 195      5C50536F 
 196 0030 722F6379 		.ascii	"r/cy_sar.h\000"
 196      5F736172 
 196      2E6800
 197              		.section	.text.Cy_SAR_SetChanMask,"ax",%progbits
 198              		.align	2
 199              		.thumb
 200              		.thumb_func
 201              		.type	Cy_SAR_SetChanMask, %function
 202              	Cy_SAR_SetChanMask:
 203              	.LFB168:
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 76


1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 204              		.loc 3 1500 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 217 0008 3960     		str	r1, [r7]
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
 218              		.loc 3 1501 0
 219 000a 3B68     		ldr	r3, [r7]
 220 000c B3F5803F 		cmp	r3, #65536
 221 0010 04D3     		bcc	.L13
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 77


 222              		.loc 3 1501 0 is_stmt 0 discriminator 1
 223 0012 40F2DD51 		movw	r1, #1501
 224 0016 0548     		ldr	r0, .L14
 225 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 226              	.L13:
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
 227              		.loc 3 1503 0 is_stmt 1
 228 001c 7B68     		ldr	r3, [r7, #4]
 229 001e 3A68     		ldr	r2, [r7]
 230 0020 1A62     		str	r2, [r3, #32]
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 231              		.loc 3 1504 0
 232 0022 00BF     		nop
 233 0024 0837     		adds	r7, r7, #8
 234              		.cfi_def_cfa_offset 8
 235 0026 BD46     		mov	sp, r7
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0028 80BD     		pop	{r7, pc}
 239              	.L15:
 240 002a 00BF     		.align	2
 241              	.L14:
 242 002c 00000000 		.word	.LC0
 243              		.cfi_endproc
 244              	.LFE168:
 245              		.size	Cy_SAR_SetChanMask, .-Cy_SAR_SetChanMask
 246              		.section	.text.Cy_SAR_SetInterruptMask,"ax",%progbits
 247              		.align	2
 248              		.thumb
 249              		.thumb_func
 250              		.type	Cy_SAR_SetInterruptMask, %function
 251              	Cy_SAR_SetInterruptMask:
 252              	.LFB173:
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 78


1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 79


1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 80


1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 253              		.loc 3 1646 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 266 0008 3960     		str	r1, [r7]
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 267              		.loc 3 1647 0
 268 000a 3B68     		ldr	r3, [r7]
 269 000c 072B     		cmp	r3, #7
 270 000e 04D9     		bls	.L17
 271              		.loc 3 1647 0 is_stmt 0 discriminator 1
 272 0010 40F26F61 		movw	r1, #1647
 273 0014 0548     		ldr	r0, .L18
 274 0016 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 275              	.L17:
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 276              		.loc 3 1649 0 is_stmt 1
 277 001a 7B68     		ldr	r3, [r7, #4]
 278 001c 3A68     		ldr	r2, [r7]
 279 001e C3F81822 		str	r2, [r3, #536]
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 280              		.loc 3 1650 0
 281 0022 00BF     		nop
 282 0024 0837     		adds	r7, r7, #8
 283              		.cfi_def_cfa_offset 8
 284 0026 BD46     		mov	sp, r7
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 0028 80BD     		pop	{r7, pc}
 288              	.L19:
 289 002a 00BF     		.align	2
 290              	.L18:
 291 002c 00000000 		.word	.LC0
 292              		.cfi_endproc
 293              	.LFE173:
 294              		.size	Cy_SAR_SetInterruptMask, .-Cy_SAR_SetInterruptMask
 295              		.section	.text.Cy_SysClk_PeriphSetDivider,"ax",%progbits
 296              		.align	2
 297              		.thumb
 298              		.thumb_func
 299              		.type	Cy_SysClk_PeriphSetDivider, %function
 300              	Cy_SysClk_PeriphSetDivider:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 81


 301              	.LFB221:
 302              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 82


  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 83


 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 84


 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 85


 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 86


 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 87


 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 88


 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 89


 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 90


 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 91


 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 92


 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 93


 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 94


 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 95


 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 96


 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 97


 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 98


 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 99


1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 100


1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 101


1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 102


1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 103


1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 104


1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 105


1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 106


1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 107


1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 108


1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 109


1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 110


1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 111


1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 112


1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 113


1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 303              		.loc 4 1876 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 114


 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 87B0     		sub	sp, sp, #28
 312              		.cfi_def_cfa_offset 32
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 0006 0346     		mov	r3, r0
 316 0008 B960     		str	r1, [r7, #8]
 317 000a 7A60     		str	r2, [r7, #4]
 318 000c FB73     		strb	r3, [r7, #15]
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 319              		.loc 4 1877 0
 320 000e 324B     		ldr	r3, .L26
 321 0010 7B61     		str	r3, [r7, #20]
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
 322              		.loc 4 1878 0
 323 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 324 0014 002B     		cmp	r3, #0
 325 0016 27D1     		bne	.L21
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
 326              		.loc 4 1880 0
 327 0018 BB68     		ldr	r3, [r7, #8]
 328 001a 072B     		cmp	r3, #7
 329 001c 54D8     		bhi	.L23
 330              		.loc 4 1880 0 is_stmt 0 discriminator 1
 331 001e 7B68     		ldr	r3, [r7, #4]
 332 0020 FF2B     		cmp	r3, #255
 333 0022 51D8     		bhi	.L23
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
 334              		.loc 4 1883 0 is_stmt 1
 335 0024 BB68     		ldr	r3, [r7, #8]
 336 0026 9A00     		lsls	r2, r3, #2
 337 0028 2C4B     		ldr	r3, .L26+4
 338 002a 1B68     		ldr	r3, [r3]
 339 002c 9B68     		ldr	r3, [r3, #8]
 340 002e 2B49     		ldr	r1, .L26+4
 341 0030 0968     		ldr	r1, [r1]
 342 0032 B1F87410 		ldrh	r1, [r1, #116]
 343 0036 0B44     		add	r3, r3, r1
 344 0038 1344     		add	r3, r3, r2
 345 003a 1846     		mov	r0, r3
 346 003c BB68     		ldr	r3, [r7, #8]
 347 003e 9A00     		lsls	r2, r3, #2
 348 0040 264B     		ldr	r3, .L26+4
 349 0042 1B68     		ldr	r3, [r3]
 350 0044 9B68     		ldr	r3, [r3, #8]
 351 0046 2549     		ldr	r1, .L26+4
 352 0048 0968     		ldr	r1, [r1]
 353 004a B1F87410 		ldrh	r1, [r1, #116]
 354 004e 0B44     		add	r3, r3, r1
 355 0050 1344     		add	r3, r3, r2
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 115


 356 0052 1B68     		ldr	r3, [r3]
 357 0054 23F47F42 		bic	r2, r3, #65280
 358 0058 7B68     		ldr	r3, [r7, #4]
 359 005a 1B02     		lsls	r3, r3, #8
 360 005c 9BB2     		uxth	r3, r3
 361 005e 1343     		orrs	r3, r3, r2
 362 0060 0360     		str	r3, [r0]
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 363              		.loc 4 1884 0
 364 0062 0023     		movs	r3, #0
 365 0064 7B61     		str	r3, [r7, #20]
 366 0066 2FE0     		b	.L23
 367              	.L21:
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
 368              		.loc 4 1887 0
 369 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 370 006a 012B     		cmp	r3, #1
 371 006c 2CD1     		bne	.L23
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
 372              		.loc 4 1889 0
 373 006e BB68     		ldr	r3, [r7, #8]
 374 0070 0F2B     		cmp	r3, #15
 375 0072 29D8     		bhi	.L23
 376              		.loc 4 1889 0 is_stmt 0 discriminator 1
 377 0074 7B68     		ldr	r3, [r7, #4]
 378 0076 B3F5803F 		cmp	r3, #65536
 379 007a 25D2     		bcs	.L23
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
 380              		.loc 4 1892 0 is_stmt 1
 381 007c BB68     		ldr	r3, [r7, #8]
 382 007e 9A00     		lsls	r2, r3, #2
 383 0080 164B     		ldr	r3, .L26+4
 384 0082 1B68     		ldr	r3, [r3]
 385 0084 9B68     		ldr	r3, [r3, #8]
 386 0086 1549     		ldr	r1, .L26+4
 387 0088 0968     		ldr	r1, [r1]
 388 008a B1F87610 		ldrh	r1, [r1, #118]
 389 008e 0B44     		add	r3, r3, r1
 390 0090 1344     		add	r3, r3, r2
 391 0092 1846     		mov	r0, r3
 392 0094 BB68     		ldr	r3, [r7, #8]
 393 0096 9A00     		lsls	r2, r3, #2
 394 0098 104B     		ldr	r3, .L26+4
 395 009a 1B68     		ldr	r3, [r3]
 396 009c 9B68     		ldr	r3, [r3, #8]
 397 009e 0F49     		ldr	r1, .L26+4
 398 00a0 0968     		ldr	r1, [r1]
 399 00a2 B1F87610 		ldrh	r1, [r1, #118]
 400 00a6 0B44     		add	r3, r3, r1
 401 00a8 1344     		add	r3, r3, r2
 402 00aa 1B68     		ldr	r3, [r3]
 403 00ac 23F47F02 		bic	r2, r3, #16711680
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 116


 404 00b0 22F47F42 		bic	r2, r2, #65280
 405 00b4 7B68     		ldr	r3, [r7, #4]
 406 00b6 1B02     		lsls	r3, r3, #8
 407 00b8 23F07F43 		bic	r3, r3, #-16777216
 408 00bc 23F0FF03 		bic	r3, r3, #255
 409 00c0 1343     		orrs	r3, r3, r2
 410 00c2 0360     		str	r3, [r0]
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 411              		.loc 4 1893 0
 412 00c4 0023     		movs	r3, #0
 413 00c6 7B61     		str	r3, [r7, #20]
 414              	.L23:
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 415              		.loc 4 1899 0
 416 00c8 7B69     		ldr	r3, [r7, #20]
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 417              		.loc 4 1900 0
 418 00ca 1846     		mov	r0, r3
 419 00cc 1C37     		adds	r7, r7, #28
 420              		.cfi_def_cfa_offset 4
 421 00ce BD46     		mov	sp, r7
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 00d0 5DF8047B 		ldr	r7, [sp], #4
 425              		.cfi_restore 7
 426              		.cfi_def_cfa_offset 0
 427 00d4 7047     		bx	lr
 428              	.L27:
 429 00d6 00BF     		.align	2
 430              	.L26:
 431 00d8 01004A00 		.word	4849665
 432 00dc 00000000 		.word	cy_device
 433              		.cfi_endproc
 434              	.LFE221:
 435              		.size	Cy_SysClk_PeriphSetDivider, .-Cy_SysClk_PeriphSetDivider
 436              		.section	.text.Cy_SysClk_PeriphEnableDivider,"ax",%progbits
 437              		.align	2
 438              		.thumb
 439              		.thumb_func
 440              		.type	Cy_SysClk_PeriphEnableDivider, %function
 441              	Cy_SysClk_PeriphEnableDivider:
 442              	.LFB227:
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 117


1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 118


1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 119


2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 120


2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 443              		.loc 4 2122 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 16
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0000 90B4     		push	{r4, r7}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
 451              		.cfi_offset 7, -4
 452 0002 84B0     		sub	sp, sp, #16
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0006 0346     		mov	r3, r0
 457 0008 3960     		str	r1, [r7]
 458 000a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 121


2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 459              		.loc 4 2123 0
 460 000c 2E4B     		ldr	r3, .L35
 461 000e FB60     		str	r3, [r7, #12]
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 462              		.loc 4 2124 0
 463 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 464 0012 032B     		cmp	r3, #3
 465 0014 52D8     		bhi	.L29
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 466              		.loc 4 2126 0
 467 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 468 0018 002B     		cmp	r3, #0
 469 001a 02D1     		bne	.L30
 470              		.loc 4 2126 0 is_stmt 0 discriminator 1
 471 001c 3B68     		ldr	r3, [r7]
 472 001e 072B     		cmp	r3, #7
 473 0020 11D9     		bls	.L31
 474              	.L30:
 475              		.loc 4 2126 0 discriminator 3
 476 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 477 0024 012B     		cmp	r3, #1
 478 0026 02D1     		bne	.L32
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 479              		.loc 4 2127 0 is_stmt 1
 480 0028 3B68     		ldr	r3, [r7]
 481 002a 0F2B     		cmp	r3, #15
 482 002c 0BD9     		bls	.L31
 483              	.L32:
 484              		.loc 4 2127 0 is_stmt 0 discriminator 1
 485 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 486 0030 022B     		cmp	r3, #2
 487 0032 02D1     		bne	.L33
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 488              		.loc 4 2128 0 is_stmt 1
 489 0034 3B68     		ldr	r3, [r7]
 490 0036 032B     		cmp	r3, #3
 491 0038 05D9     		bls	.L31
 492              	.L33:
 493              		.loc 4 2128 0 is_stmt 0 discriminator 1
 494 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 495 003c 032B     		cmp	r3, #3
 496 003e 3DD1     		bne	.L29
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 497              		.loc 4 2129 0 is_stmt 1
 498 0040 3B68     		ldr	r3, [r7]
 499 0042 002B     		cmp	r3, #0
 500 0044 3AD1     		bne	.L29
 501              	.L31:
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
 502              		.loc 4 2132 0
 503 0046 214B     		ldr	r3, .L35+4
 504 0048 1B68     		ldr	r3, [r3]
 505 004a 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 122


 506 004c 1846     		mov	r0, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 507              		.loc 4 2133 0
 508 004e 1F4B     		ldr	r3, .L35+4
 509 0050 1B68     		ldr	r3, [r3]
 510 0052 93F87330 		ldrb	r3, [r3, #115]	@ zero_extendqisi2
 511 0056 1A46     		mov	r2, r3
 512 0058 0323     		movs	r3, #3
 513 005a 03FA02F2 		lsl	r2, r3, r2
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 514              		.loc 4 2134 0
 515 005e 1B4B     		ldr	r3, .L35+4
 516 0060 1B68     		ldr	r3, [r3]
 517 0062 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 518 0066 1946     		mov	r1, r3
 519 0068 184B     		ldr	r3, .L35+4
 520 006a 1B68     		ldr	r3, [r3]
 521 006c 93F87230 		ldrb	r3, [r3, #114]	@ zero_extendqisi2
 522 0070 01FA03F3 		lsl	r3, r1, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 523              		.loc 4 2133 0
 524 0074 1A43     		orrs	r2, r2, r3
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 525              		.loc 4 2135 0
 526 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 527 0078 1449     		ldr	r1, .L35+4
 528 007a 0968     		ldr	r1, [r1]
 529 007c 91F87110 		ldrb	r1, [r1, #113]	@ zero_extendqisi2
 530 0080 03FA01F1 		lsl	r1, r3, r1
 531 0084 114B     		ldr	r3, .L35+4
 532 0086 1B68     		ldr	r3, [r3]
 533 0088 93F87130 		ldrb	r3, [r3, #113]	@ zero_extendqisi2
 534 008c 1C46     		mov	r4, r3
 535 008e 0323     		movs	r3, #3
 536 0090 A340     		lsls	r3, r3, r4
 537 0092 0B40     		ands	r3, r3, r1
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 538              		.loc 4 2134 0
 539 0094 1A43     		orrs	r2, r2, r3
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 540              		.loc 4 2136 0
 541 0096 0D4B     		ldr	r3, .L35+4
 542 0098 1B68     		ldr	r3, [r3]
 543 009a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 544 009e 1946     		mov	r1, r3
 545 00a0 3B68     		ldr	r3, [r7]
 546 00a2 0B40     		ands	r3, r3, r1
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 547              		.loc 4 2135 0
 548 00a4 1343     		orrs	r3, r3, r2
 549 00a6 43F00043 		orr	r3, r3, #-2147483648
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 550              		.loc 4 2132 0
 551 00aa C0F80034 		str	r3, [r0, #1024]
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
 552              		.loc 4 2137 0
 553 00ae 074B     		ldr	r3, .L35+4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 123


 554 00b0 1B68     		ldr	r3, [r3]
 555 00b2 9B68     		ldr	r3, [r3, #8]
 556 00b4 D3F80034 		ldr	r3, [r3, #1024]
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 557              		.loc 4 2138 0
 558 00b8 0023     		movs	r3, #0
 559 00ba FB60     		str	r3, [r7, #12]
 560              	.L29:
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 561              		.loc 4 2141 0
 562 00bc FB68     		ldr	r3, [r7, #12]
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 563              		.loc 4 2142 0
 564 00be 1846     		mov	r0, r3
 565 00c0 1037     		adds	r7, r7, #16
 566              		.cfi_def_cfa_offset 8
 567 00c2 BD46     		mov	sp, r7
 568              		.cfi_def_cfa_register 13
 569              		@ sp needed
 570 00c4 90BC     		pop	{r4, r7}
 571              		.cfi_restore 7
 572              		.cfi_restore 4
 573              		.cfi_def_cfa_offset 0
 574 00c6 7047     		bx	lr
 575              	.L36:
 576              		.align	2
 577              	.L35:
 578 00c8 01004A00 		.word	4849665
 579 00cc 00000000 		.word	cy_device
 580              		.cfi_endproc
 581              	.LFE227:
 582              		.size	Cy_SysClk_PeriphEnableDivider, .-Cy_SysClk_PeriphEnableDivider
 583              		.section	.text.Cy_SysClk_PeriphDisableDivider,"ax",%progbits
 584              		.align	2
 585              		.thumb
 586              		.thumb_func
 587              		.type	Cy_SysClk_PeriphDisableDivider, %function
 588              	Cy_SysClk_PeriphDisableDivider:
 589              	.LFB228:
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 124


2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 590              		.loc 4 2160 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 16
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 85B0     		sub	sp, sp, #20
 599              		.cfi_def_cfa_offset 24
 600 0004 00AF     		add	r7, sp, #0
 601              		.cfi_def_cfa_register 7
 602 0006 0346     		mov	r3, r0
 603 0008 3960     		str	r1, [r7]
 604 000a FB71     		strb	r3, [r7, #7]
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 605              		.loc 4 2161 0
 606 000c 224B     		ldr	r3, .L44
 607 000e FB60     		str	r3, [r7, #12]
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 608              		.loc 4 2162 0
 609 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 610 0012 032B     		cmp	r3, #3
 611 0014 38D8     		bhi	.L38
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 612              		.loc 4 2164 0
 613 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 614 0018 002B     		cmp	r3, #0
 615 001a 02D1     		bne	.L39
 616              		.loc 4 2164 0 is_stmt 0 discriminator 1
 617 001c 3B68     		ldr	r3, [r7]
 618 001e 072B     		cmp	r3, #7
 619 0020 11D9     		bls	.L40
 620              	.L39:
 621              		.loc 4 2164 0 discriminator 3
 622 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 623 0024 012B     		cmp	r3, #1
 624 0026 02D1     		bne	.L41
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 625              		.loc 4 2165 0 is_stmt 1
 626 0028 3B68     		ldr	r3, [r7]
 627 002a 0F2B     		cmp	r3, #15
 628 002c 0BD9     		bls	.L40
 629              	.L41:
 630              		.loc 4 2165 0 is_stmt 0 discriminator 1
 631 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 632 0030 022B     		cmp	r3, #2
 633 0032 02D1     		bne	.L42
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 634              		.loc 4 2166 0 is_stmt 1
 635 0034 3B68     		ldr	r3, [r7]
 636 0036 032B     		cmp	r3, #3
 637 0038 05D9     		bls	.L40
 638              	.L42:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 125


 639              		.loc 4 2166 0 is_stmt 0 discriminator 1
 640 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 641 003c 032B     		cmp	r3, #3
 642 003e 23D1     		bne	.L38
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 643              		.loc 4 2167 0 is_stmt 1
 644 0040 3B68     		ldr	r3, [r7]
 645 0042 002B     		cmp	r3, #0
 646 0044 20D1     		bne	.L38
 647              	.L40:
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
 648              		.loc 4 2170 0
 649 0046 154B     		ldr	r3, .L44+4
 650 0048 1B68     		ldr	r3, [r3]
 651 004a 9B68     		ldr	r3, [r3, #8]
 652 004c 1946     		mov	r1, r3
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 653              		.loc 4 2171 0
 654 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 655 0050 124A     		ldr	r2, .L44+4
 656 0052 1268     		ldr	r2, [r2]
 657 0054 92F87120 		ldrb	r2, [r2, #113]	@ zero_extendqisi2
 658 0058 03FA02F2 		lsl	r2, r3, r2
 659 005c 0F4B     		ldr	r3, .L44+4
 660 005e 1B68     		ldr	r3, [r3]
 661 0060 93F87130 		ldrb	r3, [r3, #113]	@ zero_extendqisi2
 662 0064 1846     		mov	r0, r3
 663 0066 0323     		movs	r3, #3
 664 0068 8340     		lsls	r3, r3, r0
 665 006a 1A40     		ands	r2, r2, r3
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 666              		.loc 4 2172 0
 667 006c 0B4B     		ldr	r3, .L44+4
 668 006e 1B68     		ldr	r3, [r3]
 669 0070 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 670 0074 1846     		mov	r0, r3
 671 0076 3B68     		ldr	r3, [r7]
 672 0078 0340     		ands	r3, r3, r0
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 673              		.loc 4 2171 0
 674 007a 1343     		orrs	r3, r3, r2
 675 007c 43F08043 		orr	r3, r3, #1073741824
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 676              		.loc 4 2170 0
 677 0080 C1F80034 		str	r3, [r1, #1024]
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 678              		.loc 4 2173 0
 679 0084 0023     		movs	r3, #0
 680 0086 FB60     		str	r3, [r7, #12]
 681              	.L38:
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 682              		.loc 4 2176 0
 683 0088 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 126


2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 684              		.loc 4 2177 0
 685 008a 1846     		mov	r0, r3
 686 008c 1437     		adds	r7, r7, #20
 687              		.cfi_def_cfa_offset 4
 688 008e BD46     		mov	sp, r7
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0090 5DF8047B 		ldr	r7, [sp], #4
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 0094 7047     		bx	lr
 695              	.L45:
 696 0096 00BF     		.align	2
 697              	.L44:
 698 0098 01004A00 		.word	4849665
 699 009c 00000000 		.word	cy_device
 700              		.cfi_endproc
 701              	.LFE228:
 702              		.size	Cy_SysClk_PeriphDisableDivider, .-Cy_SysClk_PeriphDisableDivider
 703              		.section	.text.ADC_INVERTING_AMP_intSarClock_Enable,"ax",%progbits
 704              		.align	2
 705              		.thumb
 706              		.thumb_func
 707              		.type	ADC_INVERTING_AMP_intSarClock_Enable, %function
 708              	ADC_INVERTING_AMP_intSarClock_Enable:
 709              	.LFB249:
 710              		.file 5 "Generated_Source\\PSoC6\\ADC_INVERTING_AMP_intSarClock.h"
   1:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \file     ADC_INVERTING_AMP_intSarClock.h
   3:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \version  1.0
   4:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
   5:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \brief
   6:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Provides the source code to the API for the ADC_INVERTING_AMP_intSarClock Component.
   7:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
   8:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *******************************************************************************/
  15:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  16:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #if !defined(CY_ADC_INVERTING_AMP_intSarClock_NAME_ADC_INVERTING_AMP_intSarClock_H)
  17:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #define CY_ADC_INVERTING_AMP_intSarClock_NAME_ADC_INVERTING_AMP_intSarClock_H
  18:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  19:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /* For _DIV_TYPE and _DIV_NUM #defines */
  20:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #include "cyfitter.h"
  21:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  22:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /* makes uint32_t defined */
  23:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #include <stdint.h>
  24:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  25:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #include "sysclk/cy_sysclk.h"
  26:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  27:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /***************************************
  28:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Preprocessor Macros
  29:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ***************************************/
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 127


  30:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /**
  31:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \addtogroup group_macros
  32:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * @{
  33:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** */
  34:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /** The peripheral clock divider number */
  35:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #define ADC_INVERTING_AMP_intSarClock_DIV_NUM ((uint32_t)ADC_INVERTING_AMP_intSarClock__DIV_NUM)
  36:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /** The peripheral clock divider type */
  37:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** #define ADC_INVERTING_AMP_intSarClock_DIV_TYPE ((cy_en_divider_types_t)ADC_INVERTING_AMP_intSarCloc
  38:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /** @} group_macros */
  39:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  40:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /***************************************
  41:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Function Prototypes
  42:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ***************************************/
  43:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  44:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /**
  45:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \addtogroup group_general
  46:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * @{
  47:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** */
  48:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  49:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /*******************************************************************************
  50:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Function Name: ADC_INVERTING_AMP_intSarClock_Enable
  51:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ****************************************************************************//**
  52:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  53:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Enables the programmable clock divider assigned to this Component.
  54:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  55:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \param None
  56:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  57:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \return None
  58:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  59:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *******************************************************************************/
  60:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** __STATIC_INLINE void ADC_INVERTING_AMP_intSarClock_Enable(void)
  61:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** {
 711              		.loc 5 61 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
  62:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h ****     (void)Cy_SysClk_PeriphEnableDivider(ADC_INVERTING_AMP_intSarClock_DIV_TYPE, ADC_INVERTING_AMP_i
 721              		.loc 5 62 0
 722 0004 0221     		movs	r1, #2
 723 0006 0020     		movs	r0, #0
 724 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphEnableDivider
  63:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** }
 725              		.loc 5 63 0
 726 000c 00BF     		nop
 727 000e 80BD     		pop	{r7, pc}
 728              		.cfi_endproc
 729              	.LFE249:
 730              		.size	ADC_INVERTING_AMP_intSarClock_Enable, .-ADC_INVERTING_AMP_intSarClock_Enable
 731              		.section	.text.ADC_INVERTING_AMP_intSarClock_Disable,"ax",%progbits
 732              		.align	2
 733              		.thumb
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 128


 734              		.thumb_func
 735              		.type	ADC_INVERTING_AMP_intSarClock_Disable, %function
 736              	ADC_INVERTING_AMP_intSarClock_Disable:
 737              	.LFB250:
  64:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  65:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /*******************************************************************************
  66:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Function Name: ADC_INVERTING_AMP_intSarClock_Disable
  67:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ****************************************************************************//**
  68:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  69:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Disables the programmable clock divider assigned to this Component.
  70:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  71:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \param None
  72:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  73:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \return None
  74:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  75:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *******************************************************************************/
  76:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** __STATIC_INLINE void ADC_INVERTING_AMP_intSarClock_Disable(void)
  77:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** {
 738              		.loc 5 77 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h ****     (void)Cy_SysClk_PeriphDisableDivider(ADC_INVERTING_AMP_intSarClock_DIV_TYPE, ADC_INVERTING_AMP_
 748              		.loc 5 78 0
 749 0004 0221     		movs	r1, #2
 750 0006 0020     		movs	r0, #0
 751 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphDisableDivider
  79:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** }
 752              		.loc 5 79 0
 753 000c 00BF     		nop
 754 000e 80BD     		pop	{r7, pc}
 755              		.cfi_endproc
 756              	.LFE250:
 757              		.size	ADC_INVERTING_AMP_intSarClock_Disable, .-ADC_INVERTING_AMP_intSarClock_Disable
 758              		.section	.text.ADC_INVERTING_AMP_intSarClock_SetDivider,"ax",%progbits
 759              		.align	2
 760              		.thumb
 761              		.thumb_func
 762              		.type	ADC_INVERTING_AMP_intSarClock_SetDivider, %function
 763              	ADC_INVERTING_AMP_intSarClock_SetDivider:
 764              	.LFB251:
  80:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** 
  81:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** /*******************************************************************************
  82:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Function Name: ADC_INVERTING_AMP_intSarClock_SetDivider
  83:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** ****************************************************************************//**
  84:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  85:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * Sets the value of a programmable clock divider assigned to this Component.
  86:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * This is only used for integer dividers. Use ADC_INVERTING_AMP_intSarClock_SetFracDivider()
  87:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * for setting factional dividers.
  88:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  89:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \param dividerValue
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 129


  90:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * The divider value. The source of the divider is peri_clk which is a divided
  91:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * version of hf_clk[0]. The divider value causes integer division of
  92:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * (divider value + 1), or division by 1 to 256 (8-bit divider) or
  93:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * 1 to 65536 (16-bit divider).
  94:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  95:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** * \return None
  96:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *
  97:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** *******************************************************************************/
  98:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** __STATIC_INLINE void ADC_INVERTING_AMP_intSarClock_SetDivider(uint32_t dividerValue)
  99:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** {
 765              		.loc 5 99 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 8
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0000 80B5     		push	{r7, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 82B0     		sub	sp, sp, #8
 774              		.cfi_def_cfa_offset 16
 775 0004 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
 100:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h ****     (void)Cy_SysClk_PeriphSetDivider(ADC_INVERTING_AMP_intSarClock_DIV_TYPE, ADC_INVERTING_AMP_intS
 778              		.loc 5 100 0
 779 0008 7A68     		ldr	r2, [r7, #4]
 780 000a 0221     		movs	r1, #2
 781 000c 0020     		movs	r0, #0
 782 000e FFF7FEFF 		bl	Cy_SysClk_PeriphSetDivider
 101:Generated_Source\PSoC6/ADC_INVERTING_AMP_intSarClock.h **** }
 783              		.loc 5 101 0
 784 0012 00BF     		nop
 785 0014 0837     		adds	r7, r7, #8
 786              		.cfi_def_cfa_offset 8
 787 0016 BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 0018 80BD     		pop	{r7, pc}
 791              		.cfi_endproc
 792              	.LFE251:
 793              		.size	ADC_INVERTING_AMP_intSarClock_SetDivider, .-ADC_INVERTING_AMP_intSarClock_SetDivider
 794 001a 00BF     		.section	.text.ADC_INVERTING_AMP_Enable,"ax",%progbits
 795              		.align	2
 796              		.thumb
 797              		.thumb_func
 798              		.type	ADC_INVERTING_AMP_Enable, %function
 799              	ADC_INVERTING_AMP_Enable:
 800              	.LFB255:
 801              		.file 6 "Generated_Source\\PSoC6\\ADC_INVERTING_AMP.h"
   1:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \file     ADC_INVERTING_AMP.h
   3:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
   5:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \brief
   6:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Provides the source code to the API for the ADC_INVERTING_AMP Component.
   7:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
   8:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** ********************************************************************************
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 130


   9:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if !defined(CY_ADC_INVERTING_AMP_H)
  40:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define CY_ADC_INVERTING_AMP_H
  41:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  42:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  45:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if (ADC_INVERTING_AMP_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #include "ADC_INVERTING_AMP_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif
  49:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  50:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #include "ADC_INVERTING_AMP_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  55:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /**
  56:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
  58:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
  59:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** {
  61:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 131


  66:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                             */
  68:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  72:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** } ADC_INVERTING_AMP_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  75:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_InitConfig(const ADC_INVERTING_AMP_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_Init(void);
  81:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Enable(void);
  82:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
  83:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /**
  84:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * @{
  86:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
  87:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_Start(void);
  88:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Stop(void);
  90:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** uint32_t ADC_INVERTING_AMP_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE int16_t ADC_INVERTING_AMP_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE int32_t ADC_INVERTING_AMP_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE cy_en_sar_status_t ADC_INVERTING_AMP_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE cy_en_sar_status_t ADC_INVERTING_AMP_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE float32_t ADC_INVERTING_AMP_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE int16_t ADC_INVERTING_AMP_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE int32_t ADC_INVERTING_AMP_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 107:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 109:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 111:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /**
 112:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * @{
 114:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 115:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Sleep(void);
 116:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 118:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 120:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /**
 121:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * @{
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 132


 123:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 124:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_ISR(void);
 125:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** void ADC_INVERTING_AMP_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 128:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 130:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 135:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 138:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 142:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SAMPLE_RATE             (500)
 143:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_NOMINAL_CLOCK_FREQ      (1724137u)
 147:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 149:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_DIFFERENTIAL_FORMAT     (0uL)
 152:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SAMPLES_AVERAGED        (7uL)
 153:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_APERTURE_TIME0          (1023uL)
 159:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_FREERUNNING             (1u)
 163:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_RANGE_COND              (1uL)
 167:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_VREF_PWR                (6uL)
 169:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_COMP_PWR                (6uL)
 170:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 172:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_INVERTING_A
 175:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* (ADC_INVERTING_AMP_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 177:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 133


 180:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 181:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 185:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 193:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 216:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_INVERTI
 219:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* (ADC_INVERTING_AMP_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 222:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 226:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 230:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_CHANNEL_EN              (u)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 134


 237:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 238:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 261:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_INVERTI
 264:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* (ADC_INVERTING_AMP_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* (ADC_INVERTING_AMP_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 267:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 268:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 272:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 283:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_APERTURE_TIME1          (uL)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 135


 294:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 306:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_INVERTI
 309:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* (ADC_INVERTING_AMP_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* (ADC_INVERTING_AMP_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 312:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 316:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 323:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 326:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 328:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /**
 332:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * @{
 337:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 338:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 339:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** ADC_INVERTING_AMP_initVar
 340:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * The ADC_INVERTING_AMP_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * set to 1 the first time ADC_INVERTING_AMP_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * ADC_INVERTING_AMP_Start() routine.
 345:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 346:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * If reinitialization of the component is required, then the ADC_INVERTING_AMP_Init() function
 347:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * can be called before the ADC_INVERTING_AMP_Start() or ADC_INVERTING_AMP_Enable()
 348:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * functions.
 349:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 350:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** extern uint8_t ADC_INVERTING_AMP_initVar;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 136


 351:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** extern uint8_t ADC_INVERTING_AMP_selected;
 352:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** extern uint32_t ADC_INVERTING_AMP_currentConfig;
 353:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 354:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 356:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** extern const ADC_INVERTING_AMP_CONFIG_STRUCT ADC_INVERTING_AMP_allConfigs[ADC_INVERTING_AMP_TOTAL_C
 357:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 358:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 362:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** extern cy_stc_syspm_callback_t ADC_INVERTING_AMP_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 364:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 366:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if((ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM == 1u) && (ADC_INVERTING_AMP_CFG0_SINGLE_PRESENT == 0
 372:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* ((ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM == 1u) && (ADC_INVERTING_AMP_CFG0_SINGLE_PRESE
 376:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #else
 377:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 380:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         ((ADC_INVERTING_AMP_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | (ADC_INVERTING_AMP_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 389:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         ((ADC_INVERTING_AMP_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | (ADC_INVERTING_AMP_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 395:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 400:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_CFG0_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk
 403:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* End ADC_INVERTING_AMP_CFG0_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 407:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Set SE_NEG_INPUT */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 137


 408:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((uint32)(ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #elif(ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 414:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if((ADC_INVERTING_AMP_CFG0_CHANNEL_COUNT == 1u) && (ADC_INVERTING_AMP_CFG0_SINGLE_PRESENT == 0
 417:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT     (ADC_INVERTING_AMP_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* (ADC_INVERTING_AMP_CFG0_CHANNEL_COUNT == 1u) && (ADC_INVERTING_AMP_CFG0_CHANNELS_MODE
 422:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #elif (ADC_INVERTING_AMP_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT         ADC_INVERTING_AMP_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #else
 425:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CFG0_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 428:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_INVERTING_AMP_SAR
 430:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 436:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #else
 440:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 443:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_POWER_INIT  (ADC_INVERTING_AMP_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 445:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 450:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 454:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 458:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 463:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_UAB_SCAN_MODE_INIT    (0u)
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 138


 465:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 466:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 470:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 474:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 478:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 489:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | ADC_INVERTING_AMP_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** )
 501:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 502:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         | (uint32)((uint32)ADC_INVERTING_AMP_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 507:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_INVERTING_
 508:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 509:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** */
 512:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #define ADC_INVERTING_AMP_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         (ADC_INVERTING_AMP_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 515:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 519:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 139


 522:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 529:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 535:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 540:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG1_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL
 543:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* End ADC_INVERTING_AMP_CFG1_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 547:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG1_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((uint32)(ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif(ADC_INVERTING_AMP_CFG1_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_SE_NEG_INPUT_INIT     (ADC_INVERTING_AMP_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif (ADC_INVERTING_AMP_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_SE_NEG_INPUT_INIT         ADC_INVERTING_AMP_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else
 558:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* ADC_INVERTING_AMP_CFG1_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 561:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_INVERTING_AMP_SAR
 562:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 564:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 567:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_POWER_INIT  (ADC_INVERTING_AMP_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 569:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 574:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 578:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_AVG_SAMPLES_NUM_INIT \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 140


 579:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 582:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 587:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 590:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 594:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 598:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 602:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 613:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     )
 625:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 626:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (uint32)((uint32)ADC_INVERTING_AMP_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 631:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_INVERT
 632:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 633:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 141


 636:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 640:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 644:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 654:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 660:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 665:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG2_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL
 668:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* End ADC_INVERTING_AMP_CFG2_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 672:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG2_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((uint32)(ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif(ADC_INVERTING_AMP_CFG2_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_SE_NEG_INPUT_INIT     (ADC_INVERTING_AMP_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif (ADC_INVERTING_AMP_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_SE_NEG_INPUT_INIT         ADC_INVERTING_AMP_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else
 683:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* ADC_INVERTING_AMP_CFG2_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 686:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****    #define ADC_INVERTING_AMP_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_INVERTING_AMP_SARM
 687:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 688:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 690:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 142


 693:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_POWER_INIT  (ADC_INVERTING_AMP_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 695:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 700:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 704:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 708:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 713:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 716:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 717:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 721:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 725:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 729:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 740:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 741:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 143


 750:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     )
 753:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 754:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (uint32)((uint32)ADC_INVERTING_AMP_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 759:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_INVERT
 760:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 761:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     */
 764:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 768:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 772:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #if(ADC_INVERTING_AMP_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 782:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((ADC_INVERTING_AMP_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (ADC_INVERTING_AMP_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 788:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 793:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG3_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL
 796:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* End ADC_INVERTING_AMP_CFG3_FREERUNNING == ADC_INVERTING_AMP_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 800:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #if(ADC_INVERTING_AMP_CFG3_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             ((uint32)(ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif(ADC_INVERTING_AMP_CFG3_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_SE_NEG_INPUT_INIT     (ADC_INVERTING_AMP_NEG_SEL_VREF \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 144


 807:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #elif (ADC_INVERTING_AMP_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_SE_NEG_INPUT_INIT         ADC_INVERTING_AMP_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #else
 811:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         #define ADC_INVERTING_AMP_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #endif /* ADC_INVERTING_AMP_CFG3_VNEG_INPUT_SEL == ADC_INVERTING_AMP_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 814:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_INVERTING_AMP_SAR
 815:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 816:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 818:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 821:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_POWER_INIT  (ADC_INVERTING_AMP_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 823:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 828:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 832:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 836:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 841:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 844:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 848:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 852:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 856:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_COMP_PWR_INIT \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 145


 864:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 867:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 868:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | ADC_INVERTING_AMP_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     )
 880:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 881:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             | (uint32)((uint32)ADC_INVERTING_AMP_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 886:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_INVERT
 887:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 888:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     */
 891:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     #define ADC_INVERTING_AMP_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****             (ADC_INVERTING_AMP_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 894:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** #endif /* ADC_INVERTING_AMP_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 896:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 900:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Function Name: ADC_INVERTING_AMP_Enable
 902:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 904:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 906:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \param None
 907:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 908:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \return None
 909:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 910:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *  None
 912:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 913:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Enable(void)
 915:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** {
 802              		.loc 6 915 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 146


 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 916:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     Cy_SAR_Enable(ADC_INVERTING_AMP_SAR__HW);
 812              		.loc 6 916 0
 813 0004 0248     		ldr	r0, .L50
 814 0006 FFF7FEFF 		bl	Cy_SAR_Enable
 917:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** }
 815              		.loc 6 917 0
 816 000a 00BF     		nop
 817 000c 80BD     		pop	{r7, pc}
 818              	.L51:
 819 000e 00BF     		.align	2
 820              	.L50:
 821 0010 00001D41 		.word	1092419584
 822              		.cfi_endproc
 823              	.LFE255:
 824              		.size	ADC_INVERTING_AMP_Enable, .-ADC_INVERTING_AMP_Enable
 825              		.section	.text.ADC_INVERTING_AMP_Stop,"ax",%progbits
 826              		.align	2
 827              		.thumb
 828              		.thumb_func
 829              		.type	ADC_INVERTING_AMP_Stop, %function
 830              	ADC_INVERTING_AMP_Stop:
 831              	.LFB256:
 918:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** 
 919:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Function Name: ADC_INVERTING_AMP_Stop
 921:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 923:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * power mode.
 925:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 926:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \param None
 927:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 928:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \return None
 929:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 930:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * Do not use the ADC_INVERTING_AMP_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * ADC_INVERTING_AMP_StopConvert() API. If you use the ADC_INVERTING_AMP_Stop() API
 933:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * to halt conversions then later use the ADC_INVERTING_AMP_Start() and
 934:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * ADC_INVERTING_AMP_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * of the scan may be corrupt. The ADC_INVERTING_AMP_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * the ADC_INVERTING_AMP to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * channel scan is complete, the ADC_INVERTING_AMP will stop all conversions, which
 938:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * can be detected by the use of an ISR or the ADC_INVERTING_AMP_IsEndConversion()
 939:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** * function.
 940:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *
 941:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** __STATIC_INLINE void ADC_INVERTING_AMP_Stop(void)
 943:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** {
 832              		.loc 6 943 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 147


 836 0000 80B5     		push	{r7, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 944:Generated_Source\PSoC6/ADC_INVERTING_AMP.h ****     Cy_SAR_Disable(ADC_INVERTING_AMP_SAR__HW);
 842              		.loc 6 944 0
 843 0004 0248     		ldr	r0, .L53
 844 0006 FFF7FEFF 		bl	Cy_SAR_Disable
 945:Generated_Source\PSoC6/ADC_INVERTING_AMP.h **** }
 845              		.loc 6 945 0
 846 000a 00BF     		nop
 847 000c 80BD     		pop	{r7, pc}
 848              	.L54:
 849 000e 00BF     		.align	2
 850              	.L53:
 851 0010 00001D41 		.word	1092419584
 852              		.cfi_endproc
 853              	.LFE256:
 854              		.size	ADC_INVERTING_AMP_Stop, .-ADC_INVERTING_AMP_Stop
 855              		.global	ADC_INVERTING_AMP_initVar
 856              		.bss
 857              		.type	ADC_INVERTING_AMP_initVar, %object
 858              		.size	ADC_INVERTING_AMP_initVar, 1
 859              	ADC_INVERTING_AMP_initVar:
 860 0000 00       		.space	1
 861              		.global	ADC_INVERTING_AMP_selected
 862              		.type	ADC_INVERTING_AMP_selected, %object
 863              		.size	ADC_INVERTING_AMP_selected, 1
 864              	ADC_INVERTING_AMP_selected:
 865 0001 00       		.space	1
 866              		.global	ADC_INVERTING_AMP_currentConfig
 867 0002 0000     		.align	2
 868              		.type	ADC_INVERTING_AMP_currentConfig, %object
 869              		.size	ADC_INVERTING_AMP_currentConfig, 4
 870              	ADC_INVERTING_AMP_currentConfig:
 871 0004 00000000 		.space	4
 872              		.section	.text.ADC_INVERTING_AMP_Start,"ax",%progbits
 873              		.align	2
 874              		.global	ADC_INVERTING_AMP_Start
 875              		.thumb
 876              		.thumb_func
 877              		.type	ADC_INVERTING_AMP_Start, %function
 878              	ADC_INVERTING_AMP_Start:
 879              	.LFB274:
 880              		.file 7 "Generated_Source\\PSoC6\\ADC_INVERTING_AMP.c"
   1:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \file     ADC_INVERTING_AMP.c
   3:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
   5:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief
   6:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Provides the source code to the API for the ADC_INVERTING_AMP Component.
   7:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
   8:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 148


  11:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** #include "ADC_INVERTING_AMP.h"
  40:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  43:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** uint8_t ADC_INVERTING_AMP_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** uint8_t ADC_INVERTING_AMP_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** uint32_t ADC_INVERTING_AMP_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  47:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_Start
  49:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  51:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  55:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param None
  56:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  57:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
  58:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  59:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  61:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *  \ref ADC_INVERTING_AMP_initVar (RW)
  63:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  64:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_Start(void)
  66:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 881              		.loc 7 66 0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 149


 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0000 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
  67:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if (ADC_INVERTING_AMP_INIT_VAR_INIT_FLAG != (ADC_INVERTING_AMP_INIT_VAR_INIT_FLAG & ADC_INVERTI
 891              		.loc 7 67 0
 892 0004 094B     		ldr	r3, .L58
 893 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0008 03F00103 		and	r3, r3, #1
 895 000c DBB2     		uxtb	r3, r3
 896 000e 002B     		cmp	r3, #0
 897 0010 08D1     		bne	.L56
  68:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
  69:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_Init();
 898              		.loc 7 69 0
 899 0012 FFF7FEFF 		bl	ADC_INVERTING_AMP_Init
  70:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_initVar |= ADC_INVERTING_AMP_INIT_VAR_INIT_FLAG;
 900              		.loc 7 70 0
 901 0016 054B     		ldr	r3, .L58
 902 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903 001a 43F00103 		orr	r3, r3, #1
 904 001e DAB2     		uxtb	r2, r3
 905 0020 024B     		ldr	r3, .L58
 906 0022 1A70     		strb	r2, [r3]
 907              	.L56:
  71:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
  72:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  73:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     ADC_INVERTING_AMP_Enable();
 908              		.loc 7 73 0
 909 0024 FFF7FEFF 		bl	ADC_INVERTING_AMP_Enable
  74:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  75:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     return;
 910              		.loc 7 75 0
 911 0028 00BF     		nop
  76:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 912              		.loc 7 76 0
 913 002a 80BD     		pop	{r7, pc}
 914              	.L59:
 915              		.align	2
 916              	.L58:
 917 002c 00000000 		.word	ADC_INVERTING_AMP_initVar
 918              		.cfi_endproc
 919              	.LFE274:
 920              		.size	ADC_INVERTING_AMP_Start, .-ADC_INVERTING_AMP_Start
 921              		.section	.text.ADC_INVERTING_AMP_StartEx,"ax",%progbits
 922              		.align	2
 923              		.global	ADC_INVERTING_AMP_StartEx
 924              		.thumb
 925              		.thumb_func
 926              		.type	ADC_INVERTING_AMP_StartEx, %function
 927              	ADC_INVERTING_AMP_StartEx:
 928              	.LFB275:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 150


  77:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  78:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_StartEx
  80:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  82:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief This function starts the ADC_INVERTING_AMP and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  87:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param address This is the address of a user defined function for the ISR.
  88:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  89:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
  90:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  91:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
  93:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 929              		.loc 7 95 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933 0000 80B5     		push	{r7, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
  96:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     ADC_INVERTING_AMP_Start();
 942              		.loc 7 96 0
 943 0008 FFF7FEFF 		bl	ADC_INVERTING_AMP_Start
  97:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
  98:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         (void)Cy_SysInt_Init(&ADC_INVERTING_AMP_IRQ_cfg, userIsr);
 944              		.loc 7 101 0
 945 000c 7968     		ldr	r1, [r7, #4]
 946 000e 0648     		ldr	r0, .L61
 947 0010 FFF7FEFF 		bl	Cy_SysInt_Init
 102:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_EnableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
 948              		.loc 7 102 0
 949 0014 044B     		ldr	r3, .L61
 950 0016 B3F90030 		ldrsh	r3, [r3]
 951 001a 1846     		mov	r0, r3
 952 001c FFF7FEFF 		bl	__NVIC_EnableIRQ
 103:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 104:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 105:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 106:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         (void)Cy_SysInt_Init(&ADC_INVERTING_AMP_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_EnableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 151


 110:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 111:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 112:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 113:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 953              		.loc 7 113 0
 954 0020 00BF     		nop
 955 0022 0837     		adds	r7, r7, #8
 956              		.cfi_def_cfa_offset 8
 957 0024 BD46     		mov	sp, r7
 958              		.cfi_def_cfa_register 13
 959              		@ sp needed
 960 0026 80BD     		pop	{r7, pc}
 961              	.L62:
 962              		.align	2
 963              	.L61:
 964 0028 00000000 		.word	ADC_INVERTING_AMP_IRQ_cfg
 965              		.cfi_endproc
 966              	.LFE275:
 967              		.size	ADC_INVERTING_AMP_StartEx, .-ADC_INVERTING_AMP_StartEx
 968              		.section	.text.ADC_INVERTING_AMP_InitConfig,"ax",%progbits
 969              		.align	2
 970              		.global	ADC_INVERTING_AMP_InitConfig
 971              		.thumb
 972              		.thumb_func
 973              		.type	ADC_INVERTING_AMP_InitConfig, %function
 974              	ADC_INVERTING_AMP_InitConfig:
 975              	.LFB276:
 114:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 115:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_InitConfig
 117:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 119:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 121:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param scan Number of scan defined in the ADC_INVERTING_AMP.
 122:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 123:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 124:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 125:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 127:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_InitConfig(const ADC_INVERTING_AMP_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 976              		.loc 7 129 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 16
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 84B0     		sub	sp, sp, #16
 985              		.cfi_def_cfa_offset 24
 986 0004 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 130:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     bool deInitRouting = false;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 152


 989              		.loc 7 130 0
 990 0008 0023     		movs	r3, #0
 991 000a FB73     		strb	r3, [r7, #15]
 131:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 132:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (ADC_INVERTING_AMP_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_intSarClock_Disable();
 992              		.loc 7 134 0
 993 000c FFF7FEFF 		bl	ADC_INVERTING_AMP_intSarClock_Disable
 135:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_intSarClock_SetDivider(config->clkDivider);
 994              		.loc 7 135 0
 995 0010 7B68     		ldr	r3, [r7, #4]
 996 0012 1B69     		ldr	r3, [r3, #16]
 997 0014 1846     		mov	r0, r3
 998 0016 FFF7FEFF 		bl	ADC_INVERTING_AMP_intSarClock_SetDivider
 136:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_intSarClock_Enable();
 999              		.loc 7 136 0
 1000 001a FFF7FEFF 		bl	ADC_INVERTING_AMP_intSarClock_Enable
 137:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif /* ADC_INVERTING_AMP_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 139:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     (void)Cy_SAR_DeInit(ADC_INVERTING_AMP_SAR__HW, deInitRouting);
 1001              		.loc 7 140 0
 1002 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1003 0020 1946     		mov	r1, r3
 1004 0022 0648     		ldr	r0, .L65
 1005 0024 FFF7FEFF 		bl	Cy_SAR_DeInit
 141:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     (void)Cy_SAR_Init(ADC_INVERTING_AMP_SAR__HW, config->hwConfigStc);
 1006              		.loc 7 141 0
 1007 0028 7B68     		ldr	r3, [r7, #4]
 1008 002a 9B68     		ldr	r3, [r3, #8]
 1009 002c 1946     		mov	r1, r3
 1010 002e 0348     		ldr	r0, .L65
 1011 0030 FFF7FEFF 		bl	Cy_SAR_Init
 142:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 143:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if(1uL == ADC_INVERTING_AMP_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 146:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_INVERTING_AMP_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 148:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         {
 151:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_INVERTING_AMP_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         }
 153:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 154:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 155:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     return;
 1012              		.loc 7 155 0
 1013 0034 00BF     		nop
 156:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1014              		.loc 7 156 0
 1015 0036 1037     		adds	r7, r7, #16
 1016              		.cfi_def_cfa_offset 8
 1017 0038 BD46     		mov	sp, r7
 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 153


 1020 003a 80BD     		pop	{r7, pc}
 1021              	.L66:
 1022              		.align	2
 1023              	.L65:
 1024 003c 00001D41 		.word	1092419584
 1025              		.cfi_endproc
 1026              	.LFE276:
 1027              		.size	ADC_INVERTING_AMP_InitConfig, .-ADC_INVERTING_AMP_InitConfig
 1028              		.section	.text.ADC_INVERTING_AMP_SelectConfig,"ax",%progbits
 1029              		.align	2
 1030              		.global	ADC_INVERTING_AMP_SelectConfig
 1031              		.thumb
 1032              		.thumb_func
 1033              		.type	ADC_INVERTING_AMP_SelectConfig, %function
 1034              	ADC_INVERTING_AMP_SelectConfig:
 1035              	.LFB277:
 157:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 158:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_SelectConfig
 160:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 162:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 164:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param config Number of configuration in the ADC_INVERTING_AMP.
 165:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 166:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param restart Set to 1u if the ADC_INVERTING_AMP should be  restarted after
 167:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 169:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1036              		.loc 7 171 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040 0000 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 82B0     		sub	sp, sp, #8
 1045              		.cfi_def_cfa_offset 16
 1046 0004 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 0006 7860     		str	r0, [r7, #4]
 1049 0008 3960     		str	r1, [r7]
 172:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if(ADC_INVERTING_AMP_TOTAL_CONFIGS > config)
 1050              		.loc 7 173 0
 1051 000a 7B68     		ldr	r3, [r7, #4]
 1052 000c 002B     		cmp	r3, #0
 1053 000e 26D1     		bne	.L71
 174:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 175:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_Stop();
 1054              		.loc 7 176 0
 1055 0010 FFF7FEFF 		bl	ADC_INVERTING_AMP_Stop
 177:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_selected = 1u;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 154


 1056              		.loc 7 177 0
 1057 0014 144B     		ldr	r3, .L72
 1058 0016 0122     		movs	r2, #1
 1059 0018 1A70     		strb	r2, [r3]
 178:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 179:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         if(0u == ADC_INVERTING_AMP_initVar)
 1060              		.loc 7 179 0
 1061 001a 144B     		ldr	r3, .L72+4
 1062 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 001e 002B     		cmp	r3, #0
 1064 0020 08D1     		bne	.L69
 180:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         {
 181:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_Init();
 1065              		.loc 7 181 0
 1066 0022 FFF7FEFF 		bl	ADC_INVERTING_AMP_Init
 182:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_initVar |= ADC_INVERTING_AMP_INIT_VAR_INIT_FLAG;
 1067              		.loc 7 182 0
 1068 0026 114B     		ldr	r3, .L72+4
 1069 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1070 002a 43F00103 		orr	r3, r3, #1
 1071 002e DAB2     		uxtb	r2, r3
 1072 0030 0E4B     		ldr	r3, .L72+4
 1073 0032 1A70     		strb	r2, [r3]
 1074              	.L69:
 183:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         }
 184:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #if (ADC_INVERTING_AMP_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
 187:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 188:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_InitConfig(&ADC_INVERTING_AMP_allConfigs[config]);
 1075              		.loc 7 188 0
 1076 0034 7A68     		ldr	r2, [r7, #4]
 1077 0036 1346     		mov	r3, r2
 1078 0038 9B00     		lsls	r3, r3, #2
 1079 003a 1344     		add	r3, r3, r2
 1080 003c 9B00     		lsls	r3, r3, #2
 1081 003e 0C4A     		ldr	r2, .L72+8
 1082 0040 1344     		add	r3, r3, r2
 1083 0042 1846     		mov	r0, r3
 1084 0044 FFF7FEFF 		bl	ADC_INVERTING_AMP_InitConfig
 189:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 190:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #if (ADC_INVERTING_AMP_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
 193:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 194:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_currentConfig = config;
 1085              		.loc 7 194 0
 1086 0048 0A4A     		ldr	r2, .L72+12
 1087 004a 7B68     		ldr	r3, [r7, #4]
 1088 004c 1360     		str	r3, [r2]
 195:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 196:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         if(1u == restart)
 1089              		.loc 7 196 0
 1090 004e 3B68     		ldr	r3, [r7]
 1091 0050 012B     		cmp	r3, #1
 1092 0052 04D1     		bne	.L71
 197:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         {
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 155


 198:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_Start();
 1093              		.loc 7 199 0
 1094 0054 FFF7FEFF 		bl	ADC_INVERTING_AMP_Start
 200:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 201:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_StartConvert();
 1095              		.loc 7 202 0
 1096 0058 FFF7FEFF 		bl	ADC_INVERTING_AMP_StartConvert
 203:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         }
 204:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 205:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     return;
 1097              		.loc 7 205 0
 1098 005c 00BF     		nop
 1099              	.L71:
 1100 005e 00BF     		nop
 206:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1101              		.loc 7 206 0
 1102 0060 0837     		adds	r7, r7, #8
 1103              		.cfi_def_cfa_offset 8
 1104 0062 BD46     		mov	sp, r7
 1105              		.cfi_def_cfa_register 13
 1106              		@ sp needed
 1107 0064 80BD     		pop	{r7, pc}
 1108              	.L73:
 1109 0066 00BF     		.align	2
 1110              	.L72:
 1111 0068 00000000 		.word	ADC_INVERTING_AMP_selected
 1112 006c 00000000 		.word	ADC_INVERTING_AMP_initVar
 1113 0070 00000000 		.word	ADC_INVERTING_AMP_allConfigs
 1114 0074 00000000 		.word	ADC_INVERTING_AMP_currentConfig
 1115              		.cfi_endproc
 1116              	.LFE277:
 1117              		.size	ADC_INVERTING_AMP_SelectConfig, .-ADC_INVERTING_AMP_SelectConfig
 1118              		.section	.text.ADC_INVERTING_AMP_StartConvert,"ax",%progbits
 1119              		.align	2
 1120              		.global	ADC_INVERTING_AMP_StartConvert
 1121              		.thumb
 1122              		.thumb_func
 1123              		.type	ADC_INVERTING_AMP_StartConvert, %function
 1124              	ADC_INVERTING_AMP_StartConvert:
 1125              	.LFB278:
 207:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 208:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_StartConvert
 210:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 212:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 215:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * overridden at run time with the ADC_INVERTING_AMP_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 220:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param None
 221:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 156


 222:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 223:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 224:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 226:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1126              		.loc 7 228 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 80B5     		push	{r7, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 00AF     		add	r7, sp, #0
 1135              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_INVERTING_AMP_SAR__HW->SAMPLE_CTRL & SAR_SAMP
 1136              		.loc 7 229 0
 1137 0004 084B     		ldr	r3, .L78
 1138 0006 5B68     		ldr	r3, [r3, #4]
 1139 0008 03F48023 		and	r3, r3, #262144
 1140 000c 002B     		cmp	r3, #0
 1141 000e 04D0     		beq	.L75
 230:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 231:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         Cy_SAR_StartConvert(ADC_INVERTING_AMP_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 1142              		.loc 7 231 0
 1143 0010 0121     		movs	r1, #1
 1144 0012 0548     		ldr	r0, .L78
 1145 0014 FFF7FEFF 		bl	Cy_SAR_StartConvert
 232:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 233:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     else
 234:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 235:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         Cy_SAR_StartConvert(ADC_INVERTING_AMP_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 236:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 237:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1146              		.loc 7 237 0
 1147 0018 03E0     		b	.L77
 1148              	.L75:
 235:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 1149              		.loc 7 235 0
 1150 001a 0021     		movs	r1, #0
 1151 001c 0248     		ldr	r0, .L78
 1152 001e FFF7FEFF 		bl	Cy_SAR_StartConvert
 1153              	.L77:
 1154              		.loc 7 237 0
 1155 0022 00BF     		nop
 1156 0024 80BD     		pop	{r7, pc}
 1157              	.L79:
 1158 0026 00BF     		.align	2
 1159              	.L78:
 1160 0028 00001D41 		.word	1092419584
 1161              		.cfi_endproc
 1162              	.LFE278:
 1163              		.size	ADC_INVERTING_AMP_StartConvert, .-ADC_INVERTING_AMP_StartConvert
 1164              		.section	.text.ADC_INVERTING_AMP_SetConvertMode,"ax",%progbits
 1165              		.align	2
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 157


 1166              		.global	ADC_INVERTING_AMP_SetConvertMode
 1167              		.thumb
 1168              		.thumb_func
 1169              		.type	ADC_INVERTING_AMP_SetConvertMode, %function
 1170              	ADC_INVERTING_AMP_SetConvertMode:
 1171              	.LFB279:
 238:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 239:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_SetConvertMode
 241:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 243:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 247:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 249:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 250:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 251:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 253:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1172              		.loc 7 255 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 8
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 0000 80B4     		push	{r7}
 1178              		.cfi_def_cfa_offset 4
 1179              		.cfi_offset 7, -4
 1180 0002 83B0     		sub	sp, sp, #12
 1181              		.cfi_def_cfa_offset 16
 1182 0004 00AF     		add	r7, sp, #0
 1183              		.cfi_def_cfa_register 7
 1184 0006 0346     		mov	r3, r0
 1185 0008 FB71     		strb	r3, [r7, #7]
 256:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     switch(mode)
 1186              		.loc 7 256 0
 1187 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1188 000c 012B     		cmp	r3, #1
 1189 000e 06D1     		bne	.L84
 257:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 258:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1190              		.loc 7 259 0
 1191 0010 094A     		ldr	r2, .L85
 1192 0012 094B     		ldr	r3, .L85
 1193 0014 5B68     		ldr	r3, [r3, #4]
 1194 0016 43F48023 		orr	r3, r3, #262144
 1195 001a 5360     		str	r3, [r2, #4]
 260:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         break;
 1196              		.loc 7 260 0
 1197 001c 06E0     		b	.L83
 1198              	.L84:
 261:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 158


 262:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     default:
 263:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         ADC_INVERTING_AMP_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1199              		.loc 7 263 0
 1200 001e 064A     		ldr	r2, .L85
 1201 0020 054B     		ldr	r3, .L85
 1202 0022 5B68     		ldr	r3, [r3, #4]
 1203 0024 23F48023 		bic	r3, r3, #262144
 1204 0028 5360     		str	r3, [r2, #4]
 264:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         break;
 1205              		.loc 7 264 0
 1206 002a 00BF     		nop
 1207              	.L83:
 265:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 266:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1208              		.loc 7 266 0
 1209 002c 00BF     		nop
 1210 002e 0C37     		adds	r7, r7, #12
 1211              		.cfi_def_cfa_offset 4
 1212 0030 BD46     		mov	sp, r7
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 0032 5DF8047B 		ldr	r7, [sp], #4
 1216              		.cfi_restore 7
 1217              		.cfi_def_cfa_offset 0
 1218 0036 7047     		bx	lr
 1219              	.L86:
 1220              		.align	2
 1221              	.L85:
 1222 0038 00001D41 		.word	1092419584
 1223              		.cfi_endproc
 1224              	.LFE279:
 1225              		.size	ADC_INVERTING_AMP_SetConvertMode, .-ADC_INVERTING_AMP_SetConvertMode
 1226              		.section	.text.ADC_INVERTING_AMP_IRQ_Enable,"ax",%progbits
 1227              		.align	2
 1228              		.global	ADC_INVERTING_AMP_IRQ_Enable
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	ADC_INVERTING_AMP_IRQ_Enable, %function
 1232              	ADC_INVERTING_AMP_IRQ_Enable:
 1233              	.LFB280:
 267:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 268:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_IRQ_Enable
 270:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 272:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * interrupts must also be enabled for the ADC_INVERTING_AMP interrupts to occur.
 274:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 275:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param None
 276:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 277:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 278:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 279:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 281:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_IRQ_Enable(void){
 1234              		.loc 7 282 0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 159


 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 283:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_EnableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
 1244              		.loc 7 286 0
 1245 0004 034B     		ldr	r3, .L88
 1246 0006 B3F90030 		ldrsh	r3, [r3]
 1247 000a 1846     		mov	r0, r3
 1248 000c FFF7FEFF 		bl	__NVIC_EnableIRQ
 287:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 288:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 289:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 290:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_EnableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 294:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 295:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1249              		.loc 7 295 0
 1250 0010 00BF     		nop
 1251 0012 80BD     		pop	{r7, pc}
 1252              	.L89:
 1253              		.align	2
 1254              	.L88:
 1255 0014 00000000 		.word	ADC_INVERTING_AMP_IRQ_cfg
 1256              		.cfi_endproc
 1257              	.LFE280:
 1258              		.size	ADC_INVERTING_AMP_IRQ_Enable, .-ADC_INVERTING_AMP_IRQ_Enable
 1259              		.section	.text.ADC_INVERTING_AMP_IRQ_Disable,"ax",%progbits
 1260              		.align	2
 1261              		.global	ADC_INVERTING_AMP_IRQ_Disable
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	ADC_INVERTING_AMP_IRQ_Disable, %function
 1265              	ADC_INVERTING_AMP_IRQ_Disable:
 1266              	.LFB281:
 296:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 297:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 301:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 303:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param None
 304:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 305:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 306:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 307:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 160


 308:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 309:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_IRQ_Disable(void){
 1267              		.loc 7 310 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 80B5     		push	{r7, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 311:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_DisableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
 1277              		.loc 7 314 0
 1278 0004 034B     		ldr	r3, .L91
 1279 0006 B3F90030 		ldrsh	r3, [r3]
 1280 000a 1846     		mov	r0, r3
 1281 000c FFF7FEFF 		bl	__NVIC_DisableIRQ
 315:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 316:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 317:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 318:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         NVIC_DisableIRQ(ADC_INVERTING_AMP_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 322:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     #endif
 323:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1282              		.loc 7 323 0
 1283 0010 00BF     		nop
 1284 0012 80BD     		pop	{r7, pc}
 1285              	.L92:
 1286              		.align	2
 1287              	.L91:
 1288 0014 00000000 		.word	ADC_INVERTING_AMP_IRQ_cfg
 1289              		.cfi_endproc
 1290              	.LFE281:
 1291              		.size	ADC_INVERTING_AMP_IRQ_Disable, .-ADC_INVERTING_AMP_IRQ_Disable
 1292              		.section	.text.ADC_INVERTING_AMP_SetEosMask,"ax",%progbits
 1293              		.align	2
 1294              		.global	ADC_INVERTING_AMP_SetEosMask
 1295              		.thumb
 1296              		.thumb_func
 1297              		.type	ADC_INVERTING_AMP_SetEosMask, %function
 1298              	ADC_INVERTING_AMP_SetEosMask:
 1299              	.LFB282:
 324:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 325:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_SetEosMask
 327:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 329:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 331:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param mask 1 to set the mask, 0 to clear the mask.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 161


 332:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 333:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 334:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 335:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 337:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1300              		.loc 7 339 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 16
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
 1307              		.cfi_offset 14, -4
 1308 0002 84B0     		sub	sp, sp, #16
 1309              		.cfi_def_cfa_offset 24
 1310 0004 00AF     		add	r7, sp, #0
 1311              		.cfi_def_cfa_register 7
 1312 0006 7860     		str	r0, [r7, #4]
 340:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 342:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 1313              		.loc 7 342 0
 1314 0008 7B68     		ldr	r3, [r7, #4]
 1315 000a 002B     		cmp	r3, #0
 1316 000c 14BF     		ite	ne
 1317 000e 0123     		movne	r3, #1
 1318 0010 0023     		moveq	r3, #0
 1319 0012 DBB2     		uxtb	r3, r3
 1320 0014 FB60     		str	r3, [r7, #12]
 343:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 344:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     Cy_SAR_SetInterruptMask(ADC_INVERTING_AMP_SAR__HW, intrMaskReg);
 1321              		.loc 7 344 0
 1322 0016 F968     		ldr	r1, [r7, #12]
 1323 0018 0348     		ldr	r0, .L94
 1324 001a FFF7FEFF 		bl	Cy_SAR_SetInterruptMask
 345:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1325              		.loc 7 345 0
 1326 001e 00BF     		nop
 1327 0020 1037     		adds	r7, r7, #16
 1328              		.cfi_def_cfa_offset 8
 1329 0022 BD46     		mov	sp, r7
 1330              		.cfi_def_cfa_register 13
 1331              		@ sp needed
 1332 0024 80BD     		pop	{r7, pc}
 1333              	.L95:
 1334 0026 00BF     		.align	2
 1335              	.L94:
 1336 0028 00001D41 		.word	1092419584
 1337              		.cfi_endproc
 1338              	.LFE282:
 1339              		.size	ADC_INVERTING_AMP_SetEosMask, .-ADC_INVERTING_AMP_SetEosMask
 1340              		.section	.text.ADC_INVERTING_AMP_SetChanMask,"ax",%progbits
 1341              		.align	2
 1342              		.global	ADC_INVERTING_AMP_SetChanMask
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 162


 1343              		.thumb
 1344              		.thumb_func
 1345              		.type	ADC_INVERTING_AMP_SetChanMask, %function
 1346              	ADC_INVERTING_AMP_SetChanMask:
 1347              	.LFB283:
 346:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 347:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_SetChanMask
 349:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 351:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 353:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 354:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 357:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *  None.
 359:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 360:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1348              		.loc 7 362 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 16
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352 0000 80B5     		push	{r7, lr}
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 7, -8
 1355              		.cfi_offset 14, -4
 1356 0002 84B0     		sub	sp, sp, #16
 1357              		.cfi_def_cfa_offset 24
 1358 0004 00AF     		add	r7, sp, #0
 1359              		.cfi_def_cfa_register 7
 1360 0006 7860     		str	r0, [r7, #4]
 363:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     uint32 chanCount = ADC_INVERTING_AMP_allConfigs[ADC_INVERTING_AMP_currentConfig].numChannels;
 1361              		.loc 7 363 0
 1362 0008 0D4B     		ldr	r3, .L97
 1363 000a 1A68     		ldr	r2, [r3]
 1364 000c 0D49     		ldr	r1, .L97+4
 1365 000e 1346     		mov	r3, r2
 1366 0010 9B00     		lsls	r3, r3, #2
 1367 0012 1344     		add	r3, r3, r2
 1368 0014 9B00     		lsls	r3, r3, #2
 1369 0016 0B44     		add	r3, r3, r1
 1370 0018 0433     		adds	r3, r3, #4
 1371 001a 1B68     		ldr	r3, [r3]
 1372 001c FB60     		str	r3, [r7, #12]
 364:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 1373              		.loc 7 364 0
 1374 001e 0122     		movs	r2, #1
 1375 0020 FB68     		ldr	r3, [r7, #12]
 1376 0022 02FA03F3 		lsl	r3, r2, r3
 1377 0026 013B     		subs	r3, r3, #1
 1378 0028 7A68     		ldr	r2, [r7, #4]
 1379 002a 1340     		ands	r3, r3, r2
 1380 002c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 163


 365:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 366:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     Cy_SAR_SetChanMask(ADC_INVERTING_AMP_SAR__HW, enableMask);
 1381              		.loc 7 366 0
 1382 002e 7968     		ldr	r1, [r7, #4]
 1383 0030 0548     		ldr	r0, .L97+8
 1384 0032 FFF7FEFF 		bl	Cy_SAR_SetChanMask
 367:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1385              		.loc 7 367 0
 1386 0036 00BF     		nop
 1387 0038 1037     		adds	r7, r7, #16
 1388              		.cfi_def_cfa_offset 8
 1389 003a BD46     		mov	sp, r7
 1390              		.cfi_def_cfa_register 13
 1391              		@ sp needed
 1392 003c 80BD     		pop	{r7, pc}
 1393              	.L98:
 1394 003e 00BF     		.align	2
 1395              	.L97:
 1396 0040 00000000 		.word	ADC_INVERTING_AMP_currentConfig
 1397 0044 00000000 		.word	ADC_INVERTING_AMP_allConfigs
 1398 0048 00001D41 		.word	1092419584
 1399              		.cfi_endproc
 1400              	.LFE283:
 1401              		.size	ADC_INVERTING_AMP_SetChanMask, .-ADC_INVERTING_AMP_SetChanMask
 1402              		.section	.text.ADC_INVERTING_AMP_IsEndConversion,"ax",%progbits
 1403              		.align	2
 1404              		.global	ADC_INVERTING_AMP_IsEndConversion
 1405              		.thumb
 1406              		.thumb_func
 1407              		.type	ADC_INVERTING_AMP_IsEndConversion, %function
 1408              	ADC_INVERTING_AMP_IsEndConversion:
 1409              	.LFB284:
 368:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 369:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_IsEndConversion
 371:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 373:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 378:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 380:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * If the returned value is zero, the ADC_INVERTING_AMP is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 383:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 385:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** uint32_t ADC_INVERTING_AMP_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1410              		.loc 7 387 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 16
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 164


 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 84B0     		sub	sp, sp, #16
 1419              		.cfi_def_cfa_offset 24
 1420 0004 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 1422 0006 0346     		mov	r3, r0
 1423 0008 FB71     		strb	r3, [r7, #7]
 388:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     uint32 endOfConversion = 0u;
 1424              		.loc 7 388 0
 1425 000a 0023     		movs	r3, #0
 1426 000c FB60     		str	r3, [r7, #12]
 389:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 391:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     result = Cy_SAR_IsEndConversion(ADC_INVERTING_AMP_SAR__HW, retMode);
 1427              		.loc 7 391 0
 1428 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1429 0010 1946     		mov	r1, r3
 1430 0012 0748     		ldr	r0, .L102
 1431 0014 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 1432 0018 B860     		str	r0, [r7, #8]
 392:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 393:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if (result == CY_SAR_SUCCESS)
 1433              		.loc 7 393 0
 1434 001a BB68     		ldr	r3, [r7, #8]
 1435 001c 002B     		cmp	r3, #0
 1436 001e 01D1     		bne	.L100
 394:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 395:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         endOfConversion = 1u;
 1437              		.loc 7 395 0
 1438 0020 0123     		movs	r3, #1
 1439 0022 FB60     		str	r3, [r7, #12]
 1440              	.L100:
 396:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 397:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 398:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     return endOfConversion;
 1441              		.loc 7 398 0
 1442 0024 FB68     		ldr	r3, [r7, #12]
 399:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1443              		.loc 7 399 0
 1444 0026 1846     		mov	r0, r3
 1445 0028 1037     		adds	r7, r7, #16
 1446              		.cfi_def_cfa_offset 8
 1447 002a BD46     		mov	sp, r7
 1448              		.cfi_def_cfa_register 13
 1449              		@ sp needed
 1450 002c 80BD     		pop	{r7, pc}
 1451              	.L103:
 1452 002e 00BF     		.align	2
 1453              	.L102:
 1454 0030 00001D41 		.word	1092419584
 1455              		.cfi_endproc
 1456              	.LFE284:
 1457              		.size	ADC_INVERTING_AMP_IsEndConversion, .-ADC_INVERTING_AMP_IsEndConversion
 1458              		.section	.text.ADC_INVERTING_AMP_Init,"ax",%progbits
 1459              		.align	2
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 165


 1460              		.global	ADC_INVERTING_AMP_Init
 1461              		.thumb
 1462              		.thumb_func
 1463              		.type	ADC_INVERTING_AMP_Init, %function
 1464              	ADC_INVERTING_AMP_Init:
 1465              	.LFB285:
 400:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 401:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * Function Name: ADC_INVERTING_AMP_Init
 403:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 405:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 408:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \param None
 409:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 410:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \return None
 411:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 412:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *
 414:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** void ADC_INVERTING_AMP_Init(void)
 416:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** {
 1466              		.loc 7 416 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 8
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470 0000 80B5     		push	{r7, lr}
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 7, -8
 1473              		.cfi_offset 14, -4
 1474 0002 82B0     		sub	sp, sp, #8
 1475              		.cfi_def_cfa_offset 16
 1476 0004 00AF     		add	r7, sp, #0
 1477              		.cfi_def_cfa_register 7
 417:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     uint32_t configNum = 0u;
 1478              		.loc 7 417 0
 1479 0006 0023     		movs	r3, #0
 1480 0008 7B60     		str	r3, [r7, #4]
 418:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 419:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     if(0u == ADC_INVERTING_AMP_initVar)
 1481              		.loc 7 419 0
 1482 000a 0F4B     		ldr	r3, .L107
 1483 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 000e 002B     		cmp	r3, #0
 1485 0010 16D1     		bne	.L106
 420:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     {
 421:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             (void)Cy_SysInt_Init(&ADC_INVERTING_AMP_IRQ_cfg, &ADC_INVERTING_AMP_ISR);
 1486              		.loc 7 424 0
 1487 0012 0E49     		ldr	r1, .L107+4
 1488 0014 0E48     		ldr	r0, .L107+8
 1489 0016 FFF7FEFF 		bl	Cy_SysInt_Init
 425:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
 426:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 166


 427:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 428:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #ifdef ADC_INVERTING_AMP_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             (void)Cy_SysInt_Init(&ADC_INVERTING_AMP_IRQ_cfg, &ADC_INVERTING_AMP_ISR);
 431:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
 432:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         #endif
 433:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 434:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         if(0u == ADC_INVERTING_AMP_selected)
 1490              		.loc 7 435 0
 1491 001a 0E4B     		ldr	r3, .L107+12
 1492 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1493 001e 002B     		cmp	r3, #0
 1494 0020 0ED1     		bne	.L106
 436:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         {
 437:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_selected = 1u;
 1495              		.loc 7 437 0
 1496 0022 0C4B     		ldr	r3, .L107+12
 1497 0024 0122     		movs	r2, #1
 1498 0026 1A70     		strb	r2, [r3]
 438:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             configNum = 0uL;
 1499              		.loc 7 438 0
 1500 0028 0023     		movs	r3, #0
 1501 002a 7B60     		str	r3, [r7, #4]
 439:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 440:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             #if (ADC_INVERTING_AMP_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****                 ADC_INVERTING_AMP_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             #endif
 444:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 445:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             ADC_INVERTING_AMP_InitConfig(&ADC_INVERTING_AMP_allConfigs[configNum]);
 1502              		.loc 7 445 0
 1503 002c 7A68     		ldr	r2, [r7, #4]
 1504 002e 1346     		mov	r3, r2
 1505 0030 9B00     		lsls	r3, r3, #2
 1506 0032 1344     		add	r3, r3, r2
 1507 0034 9B00     		lsls	r3, r3, #2
 1508 0036 084A     		ldr	r2, .L107+16
 1509 0038 1344     		add	r3, r3, r2
 1510 003a 1846     		mov	r0, r3
 1511 003c FFF7FEFF 		bl	ADC_INVERTING_AMP_InitConfig
 1512              	.L106:
 446:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** 
 447:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             #if (ADC_INVERTING_AMP_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****                 ADC_INVERTING_AMP_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****             #endif
 451:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****         }
 452:Generated_Source\PSoC6/ADC_INVERTING_AMP.c ****     }
 453:Generated_Source\PSoC6/ADC_INVERTING_AMP.c **** }
 1513              		.loc 7 453 0
 1514 0040 00BF     		nop
 1515 0042 0837     		adds	r7, r7, #8
 1516              		.cfi_def_cfa_offset 8
 1517 0044 BD46     		mov	sp, r7
 1518              		.cfi_def_cfa_register 13
 1519              		@ sp needed
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 167


 1520 0046 80BD     		pop	{r7, pc}
 1521              	.L108:
 1522              		.align	2
 1523              	.L107:
 1524 0048 00000000 		.word	ADC_INVERTING_AMP_initVar
 1525 004c 00000000 		.word	ADC_INVERTING_AMP_ISR
 1526 0050 00000000 		.word	ADC_INVERTING_AMP_IRQ_cfg
 1527 0054 00000000 		.word	ADC_INVERTING_AMP_selected
 1528 0058 00000000 		.word	ADC_INVERTING_AMP_allConfigs
 1529              		.cfi_endproc
 1530              	.LFE285:
 1531              		.size	ADC_INVERTING_AMP_Init, .-ADC_INVERTING_AMP_Init
 1532              		.text
 1533              	.Letext0:
 1534              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/cyble_416045_02.h"
 1535              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1536              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1537              		.file 11 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 1538              		.file 12 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1539              		.file 13 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1540              		.file 14 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1541              		.file 15 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1542              		.file 16 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysint/cy_sysint.h"
 1543              		.file 17 "Generated_Source\\PSoC6/cyfitter_sysint_cfg.h"
 1544              		.section	.debug_info,"",%progbits
 1545              	.Ldebug_info0:
 1546 0000 19190000 		.4byte	0x1919
 1547 0004 0400     		.2byte	0x4
 1548 0006 00000000 		.4byte	.Ldebug_abbrev0
 1549 000a 04       		.byte	0x4
 1550 000b 01       		.uleb128 0x1
 1551 000c CF210000 		.4byte	.LASF468
 1552 0010 0C       		.byte	0xc
 1553 0011 1C230000 		.4byte	.LASF469
 1554 0015 3A100000 		.4byte	.LASF470
 1555 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1556 001d 00000000 		.4byte	0
 1557 0021 00000000 		.4byte	.Ldebug_line0
 1558 0025 02       		.uleb128 0x2
 1559 0026 02       		.byte	0x2
 1560 0027 E6030000 		.4byte	0x3e6
 1561 002b 08       		.byte	0x8
 1562 002c 24       		.byte	0x24
 1563 002d E6030000 		.4byte	0x3e6
 1564 0031 03       		.uleb128 0x3
 1565 0032 2E1F0000 		.4byte	.LASF0
 1566 0036 71       		.sleb128 -15
 1567 0037 03       		.uleb128 0x3
 1568 0038 9A180000 		.4byte	.LASF1
 1569 003c 72       		.sleb128 -14
 1570 003d 03       		.uleb128 0x3
 1571 003e 931F0000 		.4byte	.LASF2
 1572 0042 73       		.sleb128 -13
 1573 0043 03       		.uleb128 0x3
 1574 0044 72060000 		.4byte	.LASF3
 1575 0048 74       		.sleb128 -12
 1576 0049 03       		.uleb128 0x3
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 168


 1577 004a E6120000 		.4byte	.LASF4
 1578 004e 75       		.sleb128 -11
 1579 004f 03       		.uleb128 0x3
 1580 0050 5A0A0000 		.4byte	.LASF5
 1581 0054 76       		.sleb128 -10
 1582 0055 03       		.uleb128 0x3
 1583 0056 6D090000 		.4byte	.LASF6
 1584 005a 7B       		.sleb128 -5
 1585 005b 03       		.uleb128 0x3
 1586 005c C91C0000 		.4byte	.LASF7
 1587 0060 7C       		.sleb128 -4
 1588 0061 03       		.uleb128 0x3
 1589 0062 80130000 		.4byte	.LASF8
 1590 0066 7E       		.sleb128 -2
 1591 0067 03       		.uleb128 0x3
 1592 0068 581B0000 		.4byte	.LASF9
 1593 006c 7F       		.sleb128 -1
 1594 006d 04       		.uleb128 0x4
 1595 006e F4120000 		.4byte	.LASF10
 1596 0072 00       		.byte	0
 1597 0073 04       		.uleb128 0x4
 1598 0074 A5140000 		.4byte	.LASF11
 1599 0078 01       		.byte	0x1
 1600 0079 04       		.uleb128 0x4
 1601 007a 9E030000 		.4byte	.LASF12
 1602 007e 02       		.byte	0x2
 1603 007f 04       		.uleb128 0x4
 1604 0080 5D1A0000 		.4byte	.LASF13
 1605 0084 03       		.byte	0x3
 1606 0085 04       		.uleb128 0x4
 1607 0086 93160000 		.4byte	.LASF14
 1608 008a 04       		.byte	0x4
 1609 008b 04       		.uleb128 0x4
 1610 008c 3C200000 		.4byte	.LASF15
 1611 0090 05       		.byte	0x5
 1612 0091 04       		.uleb128 0x4
 1613 0092 02140000 		.4byte	.LASF16
 1614 0096 06       		.byte	0x6
 1615 0097 04       		.uleb128 0x4
 1616 0098 28070000 		.4byte	.LASF17
 1617 009c 07       		.byte	0x7
 1618 009d 04       		.uleb128 0x4
 1619 009e EE190000 		.4byte	.LASF18
 1620 00a2 08       		.byte	0x8
 1621 00a3 04       		.uleb128 0x4
 1622 00a4 4B0D0000 		.4byte	.LASF19
 1623 00a8 09       		.byte	0x9
 1624 00a9 04       		.uleb128 0x4
 1625 00aa F10D0000 		.4byte	.LASF20
 1626 00ae 0A       		.byte	0xa
 1627 00af 04       		.uleb128 0x4
 1628 00b0 110A0000 		.4byte	.LASF21
 1629 00b4 0B       		.byte	0xb
 1630 00b5 04       		.uleb128 0x4
 1631 00b6 12090000 		.4byte	.LASF22
 1632 00ba 0C       		.byte	0xc
 1633 00bb 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 169


 1634 00bc 44070000 		.4byte	.LASF23
 1635 00c0 0D       		.byte	0xd
 1636 00c1 04       		.uleb128 0x4
 1637 00c2 E3140000 		.4byte	.LASF24
 1638 00c6 0E       		.byte	0xe
 1639 00c7 04       		.uleb128 0x4
 1640 00c8 37000000 		.4byte	.LASF25
 1641 00cc 0F       		.byte	0xf
 1642 00cd 04       		.uleb128 0x4
 1643 00ce CD1E0000 		.4byte	.LASF26
 1644 00d2 10       		.byte	0x10
 1645 00d3 04       		.uleb128 0x4
 1646 00d4 69040000 		.4byte	.LASF27
 1647 00d8 11       		.byte	0x11
 1648 00d9 04       		.uleb128 0x4
 1649 00da 5D060000 		.4byte	.LASF28
 1650 00de 12       		.byte	0x12
 1651 00df 04       		.uleb128 0x4
 1652 00e0 AE100000 		.4byte	.LASF29
 1653 00e4 13       		.byte	0x13
 1654 00e5 04       		.uleb128 0x4
 1655 00e6 5E030000 		.4byte	.LASF30
 1656 00ea 14       		.byte	0x14
 1657 00eb 04       		.uleb128 0x4
 1658 00ec F7080000 		.4byte	.LASF31
 1659 00f0 15       		.byte	0x15
 1660 00f1 04       		.uleb128 0x4
 1661 00f2 2B0E0000 		.4byte	.LASF32
 1662 00f6 16       		.byte	0x16
 1663 00f7 04       		.uleb128 0x4
 1664 00f8 E90F0000 		.4byte	.LASF33
 1665 00fc 17       		.byte	0x17
 1666 00fd 04       		.uleb128 0x4
 1667 00fe 04180000 		.4byte	.LASF34
 1668 0102 18       		.byte	0x18
 1669 0103 04       		.uleb128 0x4
 1670 0104 A9110000 		.4byte	.LASF35
 1671 0108 19       		.byte	0x19
 1672 0109 04       		.uleb128 0x4
 1673 010a 5D080000 		.4byte	.LASF36
 1674 010e 1A       		.byte	0x1a
 1675 010f 04       		.uleb128 0x4
 1676 0110 200B0000 		.4byte	.LASF37
 1677 0114 1B       		.byte	0x1b
 1678 0115 04       		.uleb128 0x4
 1679 0116 F7220000 		.4byte	.LASF38
 1680 011a 1C       		.byte	0x1c
 1681 011b 04       		.uleb128 0x4
 1682 011c 951D0000 		.4byte	.LASF39
 1683 0120 1D       		.byte	0x1d
 1684 0121 04       		.uleb128 0x4
 1685 0122 16110000 		.4byte	.LASF40
 1686 0126 1E       		.byte	0x1e
 1687 0127 04       		.uleb128 0x4
 1688 0128 96190000 		.4byte	.LASF41
 1689 012c 1F       		.byte	0x1f
 1690 012d 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 170


 1691 012e F9160000 		.4byte	.LASF42
 1692 0132 20       		.byte	0x20
 1693 0133 04       		.uleb128 0x4
 1694 0134 2E0A0000 		.4byte	.LASF43
 1695 0138 21       		.byte	0x21
 1696 0139 04       		.uleb128 0x4
 1697 013a 58200000 		.4byte	.LASF44
 1698 013e 22       		.byte	0x22
 1699 013f 04       		.uleb128 0x4
 1700 0140 D4050000 		.4byte	.LASF45
 1701 0144 23       		.byte	0x23
 1702 0145 04       		.uleb128 0x4
 1703 0146 15020000 		.4byte	.LASF46
 1704 014a 24       		.byte	0x24
 1705 014b 04       		.uleb128 0x4
 1706 014c 6F190000 		.4byte	.LASF47
 1707 0150 25       		.byte	0x25
 1708 0151 04       		.uleb128 0x4
 1709 0152 CD080000 		.4byte	.LASF48
 1710 0156 26       		.byte	0x26
 1711 0157 04       		.uleb128 0x4
 1712 0158 111F0000 		.4byte	.LASF49
 1713 015c 27       		.byte	0x27
 1714 015d 04       		.uleb128 0x4
 1715 015e 5E120000 		.4byte	.LASF50
 1716 0162 28       		.byte	0x28
 1717 0163 04       		.uleb128 0x4
 1718 0164 801D0000 		.4byte	.LASF51
 1719 0168 29       		.byte	0x29
 1720 0169 04       		.uleb128 0x4
 1721 016a D2130000 		.4byte	.LASF52
 1722 016e 2A       		.byte	0x2a
 1723 016f 04       		.uleb128 0x4
 1724 0170 331A0000 		.4byte	.LASF53
 1725 0174 2B       		.byte	0x2b
 1726 0175 04       		.uleb128 0x4
 1727 0176 44010000 		.4byte	.LASF54
 1728 017a 2C       		.byte	0x2c
 1729 017b 04       		.uleb128 0x4
 1730 017c D7070000 		.4byte	.LASF55
 1731 0180 2D       		.byte	0x2d
 1732 0181 04       		.uleb128 0x4
 1733 0182 27120000 		.4byte	.LASF56
 1734 0186 2E       		.byte	0x2e
 1735 0187 04       		.uleb128 0x4
 1736 0188 F2180000 		.4byte	.LASF57
 1737 018c 2F       		.byte	0x2f
 1738 018d 04       		.uleb128 0x4
 1739 018e 47230000 		.4byte	.LASF58
 1740 0192 30       		.byte	0x30
 1741 0193 04       		.uleb128 0x4
 1742 0194 C9090000 		.4byte	.LASF59
 1743 0198 31       		.byte	0x31
 1744 0199 04       		.uleb128 0x4
 1745 019a E91A0000 		.4byte	.LASF60
 1746 019e 32       		.byte	0x32
 1747 019f 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 171


 1748 01a0 900E0000 		.4byte	.LASF61
 1749 01a4 33       		.byte	0x33
 1750 01a5 04       		.uleb128 0x4
 1751 01a6 B7010000 		.4byte	.LASF62
 1752 01aa 34       		.byte	0x34
 1753 01ab 04       		.uleb128 0x4
 1754 01ac 7B140000 		.4byte	.LASF63
 1755 01b0 35       		.byte	0x35
 1756 01b1 04       		.uleb128 0x4
 1757 01b2 DB1B0000 		.4byte	.LASF64
 1758 01b6 36       		.byte	0x36
 1759 01b7 04       		.uleb128 0x4
 1760 01b8 111E0000 		.4byte	.LASF65
 1761 01bc 37       		.byte	0x37
 1762 01bd 04       		.uleb128 0x4
 1763 01be BE0D0000 		.4byte	.LASF66
 1764 01c2 38       		.byte	0x38
 1765 01c3 04       		.uleb128 0x4
 1766 01c4 19010000 		.4byte	.LASF67
 1767 01c8 39       		.byte	0x39
 1768 01c9 04       		.uleb128 0x4
 1769 01ca 140D0000 		.4byte	.LASF68
 1770 01ce 3A       		.byte	0x3a
 1771 01cf 04       		.uleb128 0x4
 1772 01d0 59140000 		.4byte	.LASF69
 1773 01d4 3B       		.byte	0x3b
 1774 01d5 04       		.uleb128 0x4
 1775 01d6 761F0000 		.4byte	.LASF70
 1776 01da 3C       		.byte	0x3c
 1777 01db 04       		.uleb128 0x4
 1778 01dc 10210000 		.4byte	.LASF71
 1779 01e0 3D       		.byte	0x3d
 1780 01e1 04       		.uleb128 0x4
 1781 01e2 C6140000 		.4byte	.LASF72
 1782 01e6 3E       		.byte	0x3e
 1783 01e7 04       		.uleb128 0x4
 1784 01e8 CF030000 		.4byte	.LASF73
 1785 01ec 3F       		.byte	0x3f
 1786 01ed 04       		.uleb128 0x4
 1787 01ee 791A0000 		.4byte	.LASF74
 1788 01f2 40       		.byte	0x40
 1789 01f3 04       		.uleb128 0x4
 1790 01f4 0E0E0000 		.4byte	.LASF75
 1791 01f8 41       		.byte	0x41
 1792 01f9 04       		.uleb128 0x4
 1793 01fa 1B050000 		.4byte	.LASF76
 1794 01fe 42       		.byte	0x42
 1795 01ff 04       		.uleb128 0x4
 1796 0200 721B0000 		.4byte	.LASF77
 1797 0204 43       		.byte	0x43
 1798 0205 04       		.uleb128 0x4
 1799 0206 010F0000 		.4byte	.LASF78
 1800 020a 44       		.byte	0x44
 1801 020b 04       		.uleb128 0x4
 1802 020c 58210000 		.4byte	.LASF79
 1803 0210 45       		.byte	0x45
 1804 0211 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 172


 1805 0212 21150000 		.4byte	.LASF80
 1806 0216 46       		.byte	0x46
 1807 0217 04       		.uleb128 0x4
 1808 0218 0A080000 		.4byte	.LASF81
 1809 021c 47       		.byte	0x47
 1810 021d 04       		.uleb128 0x4
 1811 021e A61A0000 		.4byte	.LASF82
 1812 0222 48       		.byte	0x48
 1813 0223 04       		.uleb128 0x4
 1814 0224 1C170000 		.4byte	.LASF83
 1815 0228 49       		.byte	0x49
 1816 0229 04       		.uleb128 0x4
 1817 022a 75010000 		.4byte	.LASF84
 1818 022e 4A       		.byte	0x4a
 1819 022f 04       		.uleb128 0x4
 1820 0230 AC0E0000 		.4byte	.LASF85
 1821 0234 4B       		.byte	0x4b
 1822 0235 04       		.uleb128 0x4
 1823 0236 3D150000 		.4byte	.LASF86
 1824 023a 4C       		.byte	0x4c
 1825 023b 04       		.uleb128 0x4
 1826 023c 39080000 		.4byte	.LASF87
 1827 0240 4D       		.byte	0x4d
 1828 0241 04       		.uleb128 0x4
 1829 0242 D1190000 		.4byte	.LASF88
 1830 0246 4E       		.byte	0x4e
 1831 0247 04       		.uleb128 0x4
 1832 0248 730E0000 		.4byte	.LASF89
 1833 024c 4F       		.byte	0x4f
 1834 024d 04       		.uleb128 0x4
 1835 024e 91010000 		.4byte	.LASF90
 1836 0252 50       		.byte	0x50
 1837 0253 04       		.uleb128 0x4
 1838 0254 57180000 		.4byte	.LASF91
 1839 0258 51       		.byte	0x51
 1840 0259 04       		.uleb128 0x4
 1841 025a 6A0A0000 		.4byte	.LASF92
 1842 025e 52       		.byte	0x52
 1843 025f 04       		.uleb128 0x4
 1844 0260 9E200000 		.4byte	.LASF93
 1845 0264 53       		.byte	0x53
 1846 0265 04       		.uleb128 0x4
 1847 0266 B6220000 		.4byte	.LASF94
 1848 026a 54       		.byte	0x54
 1849 026b 04       		.uleb128 0x4
 1850 026c 590F0000 		.4byte	.LASF95
 1851 0270 55       		.byte	0x55
 1852 0271 04       		.uleb128 0x4
 1853 0272 880A0000 		.4byte	.LASF96
 1854 0276 56       		.byte	0x56
 1855 0277 04       		.uleb128 0x4
 1856 0278 91070000 		.4byte	.LASF97
 1857 027c 57       		.byte	0x57
 1858 027d 04       		.uleb128 0x4
 1859 027e 61230000 		.4byte	.LASF98
 1860 0282 58       		.byte	0x58
 1861 0283 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 173


 1862 0284 10160000 		.4byte	.LASF99
 1863 0288 59       		.byte	0x59
 1864 0289 04       		.uleb128 0x4
 1865 028a D2220000 		.4byte	.LASF100
 1866 028e 5A       		.byte	0x5a
 1867 028f 04       		.uleb128 0x4
 1868 0290 F6110000 		.4byte	.LASF101
 1869 0294 5B       		.byte	0x5b
 1870 0295 04       		.uleb128 0x4
 1871 0296 4E050000 		.4byte	.LASF102
 1872 029a 5C       		.byte	0x5c
 1873 029b 04       		.uleb128 0x4
 1874 029c B51B0000 		.4byte	.LASF103
 1875 02a0 5D       		.byte	0x5d
 1876 02a1 04       		.uleb128 0x4
 1877 02a2 830B0000 		.4byte	.LASF104
 1878 02a6 5E       		.byte	0x5e
 1879 02a7 04       		.uleb128 0x4
 1880 02a8 85120000 		.4byte	.LASF105
 1881 02ac 5F       		.byte	0x5f
 1882 02ad 04       		.uleb128 0x4
 1883 02ae 5A150000 		.4byte	.LASF106
 1884 02b2 60       		.byte	0x60
 1885 02b3 04       		.uleb128 0x4
 1886 02b4 8D040000 		.4byte	.LASF107
 1887 02b8 61       		.byte	0x61
 1888 02b9 04       		.uleb128 0x4
 1889 02ba F21C0000 		.4byte	.LASF108
 1890 02be 62       		.byte	0x62
 1891 02bf 04       		.uleb128 0x4
 1892 02c0 680C0000 		.4byte	.LASF109
 1893 02c4 63       		.byte	0x63
 1894 02c5 04       		.uleb128 0x4
 1895 02c6 81230000 		.4byte	.LASF110
 1896 02ca 64       		.byte	0x64
 1897 02cb 04       		.uleb128 0x4
 1898 02cc 48160000 		.4byte	.LASF111
 1899 02d0 65       		.byte	0x65
 1900 02d1 04       		.uleb128 0x4
 1901 02d2 9B090000 		.4byte	.LASF112
 1902 02d6 66       		.byte	0x66
 1903 02d7 04       		.uleb128 0x4
 1904 02d8 391C0000 		.4byte	.LASF113
 1905 02dc 67       		.byte	0x67
 1906 02dd 04       		.uleb128 0x4
 1907 02de C2000000 		.4byte	.LASF114
 1908 02e2 68       		.byte	0x68
 1909 02e3 04       		.uleb128 0x4
 1910 02e4 8E020000 		.4byte	.LASF115
 1911 02e8 69       		.byte	0x69
 1912 02e9 04       		.uleb128 0x4
 1913 02ea AD150000 		.4byte	.LASF116
 1914 02ee 6A       		.byte	0x6a
 1915 02ef 04       		.uleb128 0x4
 1916 02f0 2F090000 		.4byte	.LASF117
 1917 02f4 6B       		.byte	0x6b
 1918 02f5 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 174


 1919 02f6 EB200000 		.4byte	.LASF118
 1920 02fa 6C       		.byte	0x6c
 1921 02fb 04       		.uleb128 0x4
 1922 02fc E7130000 		.4byte	.LASF119
 1923 0300 6D       		.byte	0x6d
 1924 0301 04       		.uleb128 0x4
 1925 0302 0D070000 		.4byte	.LASF120
 1926 0306 6E       		.byte	0x6e
 1927 0307 04       		.uleb128 0x4
 1928 0308 651D0000 		.4byte	.LASF121
 1929 030c 6F       		.byte	0x6f
 1930 030d 04       		.uleb128 0x4
 1931 030e 300D0000 		.4byte	.LASF122
 1932 0312 70       		.byte	0x70
 1933 0313 04       		.uleb128 0x4
 1934 0314 62000000 		.4byte	.LASF123
 1935 0318 71       		.byte	0x71
 1936 0319 04       		.uleb128 0x4
 1937 031a CE160000 		.4byte	.LASF124
 1938 031e 72       		.byte	0x72
 1939 031f 04       		.uleb128 0x4
 1940 0320 A2060000 		.4byte	.LASF125
 1941 0324 73       		.byte	0x73
 1942 0325 04       		.uleb128 0x4
 1943 0326 AE1C0000 		.4byte	.LASF126
 1944 032a 74       		.byte	0x74
 1945 032b 04       		.uleb128 0x4
 1946 032c 1F100000 		.4byte	.LASF127
 1947 0330 75       		.byte	0x75
 1948 0331 04       		.uleb128 0x4
 1949 0332 AE180000 		.4byte	.LASF128
 1950 0336 76       		.byte	0x76
 1951 0337 04       		.uleb128 0x4
 1952 0338 4E040000 		.4byte	.LASF129
 1953 033c 77       		.byte	0x77
 1954 033d 04       		.uleb128 0x4
 1955 033e C21A0000 		.4byte	.LASF130
 1956 0342 78       		.byte	0x78
 1957 0343 04       		.uleb128 0x4
 1958 0344 25040000 		.4byte	.LASF131
 1959 0348 79       		.byte	0x79
 1960 0349 04       		.uleb128 0x4
 1961 034a C61F0000 		.4byte	.LASF132
 1962 034e 7A       		.byte	0x7a
 1963 034f 04       		.uleb128 0x4
 1964 0350 54130000 		.4byte	.LASF133
 1965 0354 7B       		.byte	0x7b
 1966 0355 04       		.uleb128 0x4
 1967 0356 BD060000 		.4byte	.LASF134
 1968 035a 7C       		.byte	0x7c
 1969 035b 04       		.uleb128 0x4
 1970 035c 0C1D0000 		.4byte	.LASF135
 1971 0360 7D       		.byte	0x7d
 1972 0361 04       		.uleb128 0x4
 1973 0362 990C0000 		.4byte	.LASF136
 1974 0366 7E       		.byte	0x7e
 1975 0367 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 175


 1976 0368 3C0B0000 		.4byte	.LASF137
 1977 036c 7F       		.byte	0x7f
 1978 036d 04       		.uleb128 0x4
 1979 036e 62160000 		.4byte	.LASF138
 1980 0372 80       		.byte	0x80
 1981 0373 04       		.uleb128 0x4
 1982 0374 47060000 		.4byte	.LASF139
 1983 0378 81       		.byte	0x81
 1984 0379 04       		.uleb128 0x4
 1985 037a 531C0000 		.4byte	.LASF140
 1986 037e 82       		.byte	0x82
 1987 037f 04       		.uleb128 0x4
 1988 0380 9E0F0000 		.4byte	.LASF141
 1989 0384 83       		.byte	0x83
 1990 0385 04       		.uleb128 0x4
 1991 0386 E6000000 		.4byte	.LASF142
 1992 038a 84       		.byte	0x84
 1993 038b 04       		.uleb128 0x4
 1994 038c 090B0000 		.4byte	.LASF143
 1995 0390 85       		.byte	0x85
 1996 0391 04       		.uleb128 0x4
 1997 0392 411B0000 		.4byte	.LASF144
 1998 0396 86       		.byte	0x86
 1999 0397 04       		.uleb128 0x4
 2000 0398 820C0000 		.4byte	.LASF145
 2001 039c 87       		.byte	0x87
 2002 039d 04       		.uleb128 0x4
 2003 039e 37050000 		.4byte	.LASF146
 2004 03a2 88       		.byte	0x88
 2005 03a3 04       		.uleb128 0x4
 2006 03a4 61070000 		.4byte	.LASF147
 2007 03a8 89       		.byte	0x89
 2008 03a9 04       		.uleb128 0x4
 2009 03aa AE1F0000 		.4byte	.LASF148
 2010 03ae 8A       		.byte	0x8a
 2011 03af 04       		.uleb128 0x4
 2012 03b0 160C0000 		.4byte	.LASF149
 2013 03b4 8B       		.byte	0x8b
 2014 03b5 04       		.uleb128 0x4
 2015 03b6 EE0C0000 		.4byte	.LASF150
 2016 03ba 8C       		.byte	0x8c
 2017 03bb 04       		.uleb128 0x4
 2018 03bc DC090000 		.4byte	.LASF151
 2019 03c0 8D       		.byte	0x8d
 2020 03c1 04       		.uleb128 0x4
 2021 03c2 1F1A0000 		.4byte	.LASF152
 2022 03c6 8E       		.byte	0x8e
 2023 03c7 04       		.uleb128 0x4
 2024 03c8 8C130000 		.4byte	.LASF153
 2025 03cc 8F       		.byte	0x8f
 2026 03cd 04       		.uleb128 0x4
 2027 03ce 10120000 		.4byte	.LASF154
 2028 03d2 90       		.byte	0x90
 2029 03d3 04       		.uleb128 0x4
 2030 03d4 2E0F0000 		.4byte	.LASF155
 2031 03d8 91       		.byte	0x91
 2032 03d9 04       		.uleb128 0x4
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 176


 2033 03da 4F0C0000 		.4byte	.LASF156
 2034 03de 92       		.byte	0x92
 2035 03df 04       		.uleb128 0x4
 2036 03e0 E40E0000 		.4byte	.LASF157
 2037 03e4 F0       		.byte	0xf0
 2038 03e5 00       		.byte	0
 2039 03e6 05       		.uleb128 0x5
 2040 03e7 02       		.byte	0x2
 2041 03e8 05       		.byte	0x5
 2042 03e9 D9100000 		.4byte	.LASF158
 2043 03ed 06       		.uleb128 0x6
 2044 03ee 02100000 		.4byte	.LASF160
 2045 03f2 08       		.byte	0x8
 2046 03f3 F4       		.byte	0xf4
 2047 03f4 25000000 		.4byte	0x25
 2048 03f8 05       		.uleb128 0x5
 2049 03f9 01       		.byte	0x1
 2050 03fa 06       		.byte	0x6
 2051 03fb A21F0000 		.4byte	.LASF159
 2052 03ff 06       		.uleb128 0x6
 2053 0400 071F0000 		.4byte	.LASF161
 2054 0404 09       		.byte	0x9
 2055 0405 1D       		.byte	0x1d
 2056 0406 0A040000 		.4byte	0x40a
 2057 040a 05       		.uleb128 0x5
 2058 040b 01       		.byte	0x1
 2059 040c 08       		.byte	0x8
 2060 040d E3100000 		.4byte	.LASF162
 2061 0411 06       		.uleb128 0x6
 2062 0412 7B120000 		.4byte	.LASF163
 2063 0416 09       		.byte	0x9
 2064 0417 29       		.byte	0x29
 2065 0418 E6030000 		.4byte	0x3e6
 2066 041c 06       		.uleb128 0x6
 2067 041d 62090000 		.4byte	.LASF164
 2068 0421 09       		.byte	0x9
 2069 0422 2B       		.byte	0x2b
 2070 0423 27040000 		.4byte	0x427
 2071 0427 05       		.uleb128 0x5
 2072 0428 02       		.byte	0x2
 2073 0429 07       		.byte	0x7
 2074 042a D1150000 		.4byte	.LASF165
 2075 042e 06       		.uleb128 0x6
 2076 042f A8020000 		.4byte	.LASF166
 2077 0433 09       		.byte	0x9
 2078 0434 3F       		.byte	0x3f
 2079 0435 39040000 		.4byte	0x439
 2080 0439 05       		.uleb128 0x5
 2081 043a 04       		.byte	0x4
 2082 043b 05       		.byte	0x5
 2083 043c 4E180000 		.4byte	.LASF167
 2084 0440 06       		.uleb128 0x6
 2085 0441 4C1D0000 		.4byte	.LASF168
 2086 0445 09       		.byte	0x9
 2087 0446 41       		.byte	0x41
 2088 0447 4B040000 		.4byte	0x44b
 2089 044b 05       		.uleb128 0x5
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 177


 2090 044c 04       		.byte	0x4
 2091 044d 07       		.byte	0x7
 2092 044e 9C1B0000 		.4byte	.LASF169
 2093 0452 05       		.uleb128 0x5
 2094 0453 08       		.byte	0x8
 2095 0454 05       		.byte	0x5
 2096 0455 4A110000 		.4byte	.LASF170
 2097 0459 05       		.uleb128 0x5
 2098 045a 08       		.byte	0x8
 2099 045b 07       		.byte	0x7
 2100 045c 83080000 		.4byte	.LASF171
 2101 0460 07       		.uleb128 0x7
 2102 0461 04       		.byte	0x4
 2103 0462 05       		.byte	0x5
 2104 0463 696E7400 		.ascii	"int\000"
 2105 0467 05       		.uleb128 0x5
 2106 0468 04       		.byte	0x4
 2107 0469 07       		.byte	0x7
 2108 046a 08020000 		.4byte	.LASF172
 2109 046e 06       		.uleb128 0x6
 2110 046f E10F0000 		.4byte	.LASF173
 2111 0473 0A       		.byte	0xa
 2112 0474 18       		.byte	0x18
 2113 0475 FF030000 		.4byte	0x3ff
 2114 0479 06       		.uleb128 0x6
 2115 047a F1050000 		.4byte	.LASF174
 2116 047e 0A       		.byte	0xa
 2117 047f 20       		.byte	0x20
 2118 0480 11040000 		.4byte	0x411
 2119 0484 06       		.uleb128 0x6
 2120 0485 F0150000 		.4byte	.LASF175
 2121 0489 0A       		.byte	0xa
 2122 048a 24       		.byte	0x24
 2123 048b 1C040000 		.4byte	0x41c
 2124 048f 06       		.uleb128 0x6
 2125 0490 011C0000 		.4byte	.LASF176
 2126 0494 0A       		.byte	0xa
 2127 0495 2C       		.byte	0x2c
 2128 0496 2E040000 		.4byte	0x42e
 2129 049a 06       		.uleb128 0x6
 2130 049b E7060000 		.4byte	.LASF177
 2131 049f 0A       		.byte	0xa
 2132 04a0 30       		.byte	0x30
 2133 04a1 40040000 		.4byte	0x440
 2134 04a5 08       		.uleb128 0x8
 2135 04a6 040E     		.2byte	0xe04
 2136 04a8 01       		.byte	0x1
 2137 04a9 9601     		.2byte	0x196
 2138 04ab 61050000 		.4byte	0x561
 2139 04af 09       		.uleb128 0x9
 2140 04b0 8C070000 		.4byte	.LASF178
 2141 04b4 01       		.byte	0x1
 2142 04b5 9801     		.2byte	0x198
 2143 04b7 7D050000 		.4byte	0x57d
 2144 04bb 00       		.byte	0
 2145 04bc 09       		.uleb128 0x9
 2146 04bd 88170000 		.4byte	.LASF179
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 178


 2147 04c1 01       		.byte	0x1
 2148 04c2 9901     		.2byte	0x199
 2149 04c4 82050000 		.4byte	0x582
 2150 04c8 20       		.byte	0x20
 2151 04c9 09       		.uleb128 0x9
 2152 04ca 711E0000 		.4byte	.LASF180
 2153 04ce 01       		.byte	0x1
 2154 04cf 9A01     		.2byte	0x19a
 2155 04d1 92050000 		.4byte	0x592
 2156 04d5 80       		.byte	0x80
 2157 04d6 09       		.uleb128 0x9
 2158 04d7 79090000 		.4byte	.LASF181
 2159 04db 01       		.byte	0x1
 2160 04dc 9B01     		.2byte	0x19b
 2161 04de 82050000 		.4byte	0x582
 2162 04e2 A0       		.byte	0xa0
 2163 04e3 0A       		.uleb128 0xa
 2164 04e4 561E0000 		.4byte	.LASF182
 2165 04e8 01       		.byte	0x1
 2166 04e9 9C01     		.2byte	0x19c
 2167 04eb 97050000 		.4byte	0x597
 2168 04ef 0001     		.2byte	0x100
 2169 04f1 0A       		.uleb128 0xa
 2170 04f2 A4170000 		.4byte	.LASF183
 2171 04f6 01       		.byte	0x1
 2172 04f7 9D01     		.2byte	0x19d
 2173 04f9 82050000 		.4byte	0x582
 2174 04fd 2001     		.2byte	0x120
 2175 04ff 0A       		.uleb128 0xa
 2176 0500 C1140000 		.4byte	.LASF184
 2177 0504 01       		.byte	0x1
 2178 0505 9E01     		.2byte	0x19e
 2179 0507 9C050000 		.4byte	0x59c
 2180 050b 8001     		.2byte	0x180
 2181 050d 0A       		.uleb128 0xa
 2182 050e AE170000 		.4byte	.LASF185
 2183 0512 01       		.byte	0x1
 2184 0513 9F01     		.2byte	0x19f
 2185 0515 82050000 		.4byte	0x582
 2186 0519 A001     		.2byte	0x1a0
 2187 051b 0A       		.uleb128 0xa
 2188 051c A41E0000 		.4byte	.LASF186
 2189 0520 01       		.byte	0x1
 2190 0521 A001     		.2byte	0x1a0
 2191 0523 A1050000 		.4byte	0x5a1
 2192 0527 0002     		.2byte	0x200
 2193 0529 0A       		.uleb128 0xa
 2194 052a 79080000 		.4byte	.LASF187
 2195 052e 01       		.byte	0x1
 2196 052f A101     		.2byte	0x1a1
 2197 0531 A6050000 		.4byte	0x5a6
 2198 0535 2002     		.2byte	0x220
 2199 0537 0B       		.uleb128 0xb
 2200 0538 495000   		.ascii	"IP\000"
 2201 053b 01       		.byte	0x1
 2202 053c A201     		.2byte	0x1a2
 2203 053e CB050000 		.4byte	0x5cb
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 179


 2204 0542 0003     		.2byte	0x300
 2205 0544 0A       		.uleb128 0xa
 2206 0545 D7170000 		.4byte	.LASF188
 2207 0549 01       		.byte	0x1
 2208 054a A301     		.2byte	0x1a3
 2209 054c D0050000 		.4byte	0x5d0
 2210 0550 F003     		.2byte	0x3f0
 2211 0552 0A       		.uleb128 0xa
 2212 0553 F1010000 		.4byte	.LASF189
 2213 0557 01       		.byte	0x1
 2214 0558 A401     		.2byte	0x1a4
 2215 055a 78050000 		.4byte	0x578
 2216 055e 000E     		.2byte	0xe00
 2217 0560 00       		.byte	0
 2218 0561 0C       		.uleb128 0xc
 2219 0562 78050000 		.4byte	0x578
 2220 0566 71050000 		.4byte	0x571
 2221 056a 0D       		.uleb128 0xd
 2222 056b 71050000 		.4byte	0x571
 2223 056f 07       		.byte	0x7
 2224 0570 00       		.byte	0
 2225 0571 05       		.uleb128 0x5
 2226 0572 04       		.byte	0x4
 2227 0573 07       		.byte	0x7
 2228 0574 56170000 		.4byte	.LASF190
 2229 0578 0E       		.uleb128 0xe
 2230 0579 9A040000 		.4byte	0x49a
 2231 057d 0E       		.uleb128 0xe
 2232 057e 61050000 		.4byte	0x561
 2233 0582 0C       		.uleb128 0xc
 2234 0583 9A040000 		.4byte	0x49a
 2235 0587 92050000 		.4byte	0x592
 2236 058b 0D       		.uleb128 0xd
 2237 058c 71050000 		.4byte	0x571
 2238 0590 17       		.byte	0x17
 2239 0591 00       		.byte	0
 2240 0592 0E       		.uleb128 0xe
 2241 0593 61050000 		.4byte	0x561
 2242 0597 0E       		.uleb128 0xe
 2243 0598 61050000 		.4byte	0x561
 2244 059c 0E       		.uleb128 0xe
 2245 059d 61050000 		.4byte	0x561
 2246 05a1 0E       		.uleb128 0xe
 2247 05a2 61050000 		.4byte	0x561
 2248 05a6 0C       		.uleb128 0xc
 2249 05a7 9A040000 		.4byte	0x49a
 2250 05ab B6050000 		.4byte	0x5b6
 2251 05af 0D       		.uleb128 0xd
 2252 05b0 71050000 		.4byte	0x571
 2253 05b4 37       		.byte	0x37
 2254 05b5 00       		.byte	0
 2255 05b6 0C       		.uleb128 0xc
 2256 05b7 C6050000 		.4byte	0x5c6
 2257 05bb C6050000 		.4byte	0x5c6
 2258 05bf 0D       		.uleb128 0xd
 2259 05c0 71050000 		.4byte	0x571
 2260 05c4 EF       		.byte	0xef
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 180


 2261 05c5 00       		.byte	0
 2262 05c6 0E       		.uleb128 0xe
 2263 05c7 6E040000 		.4byte	0x46e
 2264 05cb 0E       		.uleb128 0xe
 2265 05cc B6050000 		.4byte	0x5b6
 2266 05d0 0C       		.uleb128 0xc
 2267 05d1 9A040000 		.4byte	0x49a
 2268 05d5 E1050000 		.4byte	0x5e1
 2269 05d9 0F       		.uleb128 0xf
 2270 05da 71050000 		.4byte	0x571
 2271 05de 8302     		.2byte	0x283
 2272 05e0 00       		.byte	0
 2273 05e1 10       		.uleb128 0x10
 2274 05e2 481A0000 		.4byte	.LASF191
 2275 05e6 01       		.byte	0x1
 2276 05e7 A501     		.2byte	0x1a5
 2277 05e9 A5040000 		.4byte	0x4a5
 2278 05ed 11       		.uleb128 0x11
 2279 05ee 78050000 		.4byte	0x578
 2280 05f2 0C       		.uleb128 0xc
 2281 05f3 ED050000 		.4byte	0x5ed
 2282 05f7 02060000 		.4byte	0x602
 2283 05fb 0D       		.uleb128 0xd
 2284 05fc 71050000 		.4byte	0x571
 2285 0600 01       		.byte	0x1
 2286 0601 00       		.byte	0
 2287 0602 0C       		.uleb128 0xc
 2288 0603 78050000 		.4byte	0x578
 2289 0607 12060000 		.4byte	0x612
 2290 060b 0D       		.uleb128 0xd
 2291 060c 71050000 		.4byte	0x571
 2292 0610 7F       		.byte	0x7f
 2293 0611 00       		.byte	0
 2294 0612 0C       		.uleb128 0xc
 2295 0613 78050000 		.4byte	0x578
 2296 0617 22060000 		.4byte	0x622
 2297 061b 0D       		.uleb128 0xd
 2298 061c 71050000 		.4byte	0x571
 2299 0620 0F       		.byte	0xf
 2300 0621 00       		.byte	0
 2301 0622 0C       		.uleb128 0xc
 2302 0623 ED050000 		.4byte	0x5ed
 2303 0627 32060000 		.4byte	0x632
 2304 062b 0D       		.uleb128 0xd
 2305 062c 71050000 		.4byte	0x571
 2306 0630 06       		.byte	0x6
 2307 0631 00       		.byte	0
 2308 0632 12       		.uleb128 0x12
 2309 0633 40       		.byte	0x40
 2310 0634 0B       		.byte	0xb
 2311 0635 27       		.byte	0x27
 2312 0636 77060000 		.4byte	0x677
 2313 063a 13       		.uleb128 0x13
 2314 063b F71B0000 		.4byte	.LASF192
 2315 063f 0B       		.byte	0xb
 2316 0640 28       		.byte	0x28
 2317 0641 78050000 		.4byte	0x578
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 181


 2318 0645 00       		.byte	0
 2319 0646 13       		.uleb128 0x13
 2320 0647 CB050000 		.4byte	.LASF193
 2321 064b 0B       		.byte	0xb
 2322 064c 29       		.byte	0x29
 2323 064d 7C060000 		.4byte	0x67c
 2324 0651 04       		.byte	0x4
 2325 0652 13       		.uleb128 0x13
 2326 0653 F8070000 		.4byte	.LASF194
 2327 0657 0B       		.byte	0xb
 2328 0658 2A       		.byte	0x2a
 2329 0659 78050000 		.4byte	0x578
 2330 065d 20       		.byte	0x20
 2331 065e 13       		.uleb128 0x13
 2332 065f 8A220000 		.4byte	.LASF195
 2333 0663 0B       		.byte	0xb
 2334 0664 2B       		.byte	0x2b
 2335 0665 78050000 		.4byte	0x578
 2336 0669 24       		.byte	0x24
 2337 066a 13       		.uleb128 0x13
 2338 066b 06210000 		.4byte	.LASF196
 2339 066f 0B       		.byte	0xb
 2340 0670 2C       		.byte	0x2c
 2341 0671 96060000 		.4byte	0x696
 2342 0675 28       		.byte	0x28
 2343 0676 00       		.byte	0
 2344 0677 0E       		.uleb128 0xe
 2345 0678 22060000 		.4byte	0x622
 2346 067c 11       		.uleb128 0x11
 2347 067d 77060000 		.4byte	0x677
 2348 0681 0C       		.uleb128 0xc
 2349 0682 ED050000 		.4byte	0x5ed
 2350 0686 91060000 		.4byte	0x691
 2351 068a 0D       		.uleb128 0xd
 2352 068b 71050000 		.4byte	0x571
 2353 068f 05       		.byte	0x5
 2354 0690 00       		.byte	0
 2355 0691 0E       		.uleb128 0xe
 2356 0692 81060000 		.4byte	0x681
 2357 0696 11       		.uleb128 0x11
 2358 0697 91060000 		.4byte	0x691
 2359 069b 06       		.uleb128 0x6
 2360 069c 34210000 		.4byte	.LASF197
 2361 06a0 0B       		.byte	0xb
 2362 06a1 2D       		.byte	0x2d
 2363 06a2 32060000 		.4byte	0x632
 2364 06a6 14       		.uleb128 0x14
 2365 06a7 0002     		.2byte	0x200
 2366 06a9 0B       		.byte	0xb
 2367 06aa 32       		.byte	0x32
 2368 06ab BC060000 		.4byte	0x6bc
 2369 06af 13       		.uleb128 0x13
 2370 06b0 500E0000 		.4byte	.LASF198
 2371 06b4 0B       		.byte	0xb
 2372 06b5 33       		.byte	0x33
 2373 06b6 BC060000 		.4byte	0x6bc
 2374 06ba 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 182


 2375 06bb 00       		.byte	0
 2376 06bc 0E       		.uleb128 0xe
 2377 06bd 02060000 		.4byte	0x602
 2378 06c1 06       		.uleb128 0x6
 2379 06c2 14000000 		.4byte	.LASF199
 2380 06c6 0B       		.byte	0xb
 2381 06c7 34       		.byte	0x34
 2382 06c8 A6060000 		.4byte	0x6a6
 2383 06cc 12       		.uleb128 0x12
 2384 06cd 40       		.byte	0x40
 2385 06ce 0B       		.byte	0xb
 2386 06cf 39       		.byte	0x39
 2387 06d0 1D070000 		.4byte	0x71d
 2388 06d4 13       		.uleb128 0x13
 2389 06d5 86200000 		.4byte	.LASF200
 2390 06d9 0B       		.byte	0xb
 2391 06da 3A       		.byte	0x3a
 2392 06db 78050000 		.4byte	0x578
 2393 06df 00       		.byte	0
 2394 06e0 13       		.uleb128 0x13
 2395 06e1 E1200000 		.4byte	.LASF201
 2396 06e5 0B       		.byte	0xb
 2397 06e6 3B       		.byte	0x3b
 2398 06e7 78050000 		.4byte	0x578
 2399 06eb 04       		.byte	0x4
 2400 06ec 13       		.uleb128 0x13
 2401 06ed CB050000 		.4byte	.LASF193
 2402 06f1 0B       		.byte	0xb
 2403 06f2 3C       		.byte	0x3c
 2404 06f3 22070000 		.4byte	0x722
 2405 06f7 08       		.byte	0x8
 2406 06f8 13       		.uleb128 0x13
 2407 06f9 8C200000 		.4byte	.LASF202
 2408 06fd 0B       		.byte	0xb
 2409 06fe 3D       		.byte	0x3d
 2410 06ff ED050000 		.4byte	0x5ed
 2411 0703 20       		.byte	0x20
 2412 0704 13       		.uleb128 0x13
 2413 0705 E6200000 		.4byte	.LASF203
 2414 0709 0B       		.byte	0xb
 2415 070a 3E       		.byte	0x3e
 2416 070b 78050000 		.4byte	0x578
 2417 070f 24       		.byte	0x24
 2418 0710 13       		.uleb128 0x13
 2419 0711 06210000 		.4byte	.LASF196
 2420 0715 0B       		.byte	0xb
 2421 0716 3F       		.byte	0x3f
 2422 0717 2C070000 		.4byte	0x72c
 2423 071b 28       		.byte	0x28
 2424 071c 00       		.byte	0
 2425 071d 0E       		.uleb128 0xe
 2426 071e 81060000 		.4byte	0x681
 2427 0722 11       		.uleb128 0x11
 2428 0723 1D070000 		.4byte	0x71d
 2429 0727 0E       		.uleb128 0xe
 2430 0728 81060000 		.4byte	0x681
 2431 072c 11       		.uleb128 0x11
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 183


 2432 072d 27070000 		.4byte	0x727
 2433 0731 06       		.uleb128 0x6
 2434 0732 D3060000 		.4byte	.LASF204
 2435 0736 0B       		.byte	0xb
 2436 0737 40       		.byte	0x40
 2437 0738 CC060000 		.4byte	0x6cc
 2438 073c 12       		.uleb128 0x12
 2439 073d 40       		.byte	0x40
 2440 073e 0B       		.byte	0xb
 2441 073f 45       		.byte	0x45
 2442 0740 8D070000 		.4byte	0x78d
 2443 0744 13       		.uleb128 0x13
 2444 0745 86200000 		.4byte	.LASF200
 2445 0749 0B       		.byte	0xb
 2446 074a 46       		.byte	0x46
 2447 074b ED050000 		.4byte	0x5ed
 2448 074f 00       		.byte	0
 2449 0750 13       		.uleb128 0x13
 2450 0751 E1200000 		.4byte	.LASF201
 2451 0755 0B       		.byte	0xb
 2452 0756 47       		.byte	0x47
 2453 0757 78050000 		.4byte	0x578
 2454 075b 04       		.byte	0x4
 2455 075c 13       		.uleb128 0x13
 2456 075d CB050000 		.4byte	.LASF193
 2457 0761 0B       		.byte	0xb
 2458 0762 48       		.byte	0x48
 2459 0763 92070000 		.4byte	0x792
 2460 0767 08       		.byte	0x8
 2461 0768 13       		.uleb128 0x13
 2462 0769 8C200000 		.4byte	.LASF202
 2463 076d 0B       		.byte	0xb
 2464 076e 49       		.byte	0x49
 2465 076f ED050000 		.4byte	0x5ed
 2466 0773 20       		.byte	0x20
 2467 0774 13       		.uleb128 0x13
 2468 0775 E6200000 		.4byte	.LASF203
 2469 0779 0B       		.byte	0xb
 2470 077a 4A       		.byte	0x4a
 2471 077b 78050000 		.4byte	0x578
 2472 077f 24       		.byte	0x24
 2473 0780 13       		.uleb128 0x13
 2474 0781 06210000 		.4byte	.LASF196
 2475 0785 0B       		.byte	0xb
 2476 0786 4B       		.byte	0x4b
 2477 0787 9C070000 		.4byte	0x79c
 2478 078b 28       		.byte	0x28
 2479 078c 00       		.byte	0
 2480 078d 0E       		.uleb128 0xe
 2481 078e 81060000 		.4byte	0x681
 2482 0792 11       		.uleb128 0x11
 2483 0793 8D070000 		.4byte	0x78d
 2484 0797 0E       		.uleb128 0xe
 2485 0798 81060000 		.4byte	0x681
 2486 079c 11       		.uleb128 0x11
 2487 079d 97070000 		.4byte	0x797
 2488 07a1 06       		.uleb128 0x6
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 184


 2489 07a2 DC1F0000 		.4byte	.LASF205
 2490 07a6 0B       		.byte	0xb
 2491 07a7 4C       		.byte	0x4c
 2492 07a8 3C070000 		.4byte	0x73c
 2493 07ac 14       		.uleb128 0x14
 2494 07ad 0054     		.2byte	0x5400
 2495 07af 0B       		.byte	0xb
 2496 07b0 69       		.byte	0x69
 2497 07b1 84080000 		.4byte	0x884
 2498 07b5 15       		.uleb128 0x15
 2499 07b6 475200   		.ascii	"GR\000"
 2500 07b9 0B       		.byte	0xb
 2501 07ba 6A       		.byte	0x6a
 2502 07bb 84080000 		.4byte	0x884
 2503 07bf 00       		.byte	0
 2504 07c0 16       		.uleb128 0x16
 2505 07c1 82220000 		.4byte	.LASF206
 2506 07c5 0B       		.byte	0xb
 2507 07c6 6B       		.byte	0x6b
 2508 07c7 78050000 		.4byte	0x578
 2509 07cb 0004     		.2byte	0x400
 2510 07cd 16       		.uleb128 0x16
 2511 07ce CB050000 		.4byte	.LASF193
 2512 07d2 0B       		.byte	0xb
 2513 07d3 6C       		.byte	0x6c
 2514 07d4 A9080000 		.4byte	0x8a9
 2515 07d8 0404     		.2byte	0x404
 2516 07da 16       		.uleb128 0x16
 2517 07db 3A010000 		.4byte	.LASF207
 2518 07df 0B       		.byte	0xb
 2519 07e0 6D       		.byte	0x6d
 2520 07e1 BE080000 		.4byte	0x8be
 2521 07e5 0008     		.2byte	0x800
 2522 07e7 16       		.uleb128 0x16
 2523 07e8 C60C0000 		.4byte	.LASF208
 2524 07ec 0B       		.byte	0xb
 2525 07ed 6E       		.byte	0x6e
 2526 07ee C3080000 		.4byte	0x8c3
 2527 07f2 0009     		.2byte	0x900
 2528 07f4 16       		.uleb128 0x16
 2529 07f5 0E030000 		.4byte	.LASF209
 2530 07f9 0B       		.byte	0xb
 2531 07fa 6F       		.byte	0x6f
 2532 07fb C8080000 		.4byte	0x8c8
 2533 07ff 000A     		.2byte	0xa00
 2534 0801 16       		.uleb128 0x16
 2535 0802 F80B0000 		.4byte	.LASF210
 2536 0806 0B       		.byte	0xb
 2537 0807 70       		.byte	0x70
 2538 0808 DD080000 		.4byte	0x8dd
 2539 080c 000B     		.2byte	0xb00
 2540 080e 16       		.uleb128 0x16
 2541 080f 06210000 		.4byte	.LASF196
 2542 0813 0B       		.byte	0xb
 2543 0814 71       		.byte	0x71
 2544 0815 ED050000 		.4byte	0x5ed
 2545 0819 FC0B     		.2byte	0xbfc
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 185


 2546 081b 16       		.uleb128 0x16
 2547 081c F71B0000 		.4byte	.LASF192
 2548 0820 0B       		.byte	0xb
 2549 0821 72       		.byte	0x72
 2550 0822 E2080000 		.4byte	0x8e2
 2551 0826 000C     		.2byte	0xc00
 2552 0828 16       		.uleb128 0x16
 2553 0829 A4170000 		.4byte	.LASF183
 2554 082d 0B       		.byte	0xb
 2555 082e 73       		.byte	0x73
 2556 082f FC080000 		.4byte	0x8fc
 2557 0833 000E     		.2byte	0xe00
 2558 0835 16       		.uleb128 0x16
 2559 0836 020B0000 		.4byte	.LASF211
 2560 083a 0B       		.byte	0xb
 2561 083b 74       		.byte	0x74
 2562 083c 78050000 		.4byte	0x578
 2563 0840 0010     		.2byte	0x1000
 2564 0842 16       		.uleb128 0x16
 2565 0843 AE170000 		.4byte	.LASF185
 2566 0847 0B       		.byte	0xb
 2567 0848 75       		.byte	0x75
 2568 0849 17090000 		.4byte	0x917
 2569 084d 0410     		.2byte	0x1004
 2570 084f 16       		.uleb128 0x16
 2571 0850 6D0E0000 		.4byte	.LASF212
 2572 0854 0B       		.byte	0xb
 2573 0855 76       		.byte	0x76
 2574 0856 1C090000 		.4byte	0x91c
 2575 085a 0020     		.2byte	0x2000
 2576 085c 16       		.uleb128 0x16
 2577 085d 27030000 		.4byte	.LASF213
 2578 0861 0B       		.byte	0xb
 2579 0862 77       		.byte	0x77
 2580 0863 2C090000 		.4byte	0x92c
 2581 0867 0040     		.2byte	0x4000
 2582 0869 16       		.uleb128 0x16
 2583 086a 79080000 		.4byte	.LASF187
 2584 086e 0B       		.byte	0xb
 2585 086f 78       		.byte	0x78
 2586 0870 52090000 		.4byte	0x952
 2587 0874 0048     		.2byte	0x4800
 2588 0876 16       		.uleb128 0x16
 2589 0877 3C120000 		.4byte	.LASF214
 2590 087b 0B       		.byte	0xb
 2591 087c 79       		.byte	0x79
 2592 087d 57090000 		.4byte	0x957
 2593 0881 0050     		.2byte	0x5000
 2594 0883 00       		.byte	0
 2595 0884 0C       		.uleb128 0xc
 2596 0885 9B060000 		.4byte	0x69b
 2597 0889 94080000 		.4byte	0x894
 2598 088d 0D       		.uleb128 0xd
 2599 088e 71050000 		.4byte	0x571
 2600 0892 0F       		.byte	0xf
 2601 0893 00       		.byte	0
 2602 0894 0C       		.uleb128 0xc
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 186


 2603 0895 ED050000 		.4byte	0x5ed
 2604 0899 A4080000 		.4byte	0x8a4
 2605 089d 0D       		.uleb128 0xd
 2606 089e 71050000 		.4byte	0x571
 2607 08a2 FE       		.byte	0xfe
 2608 08a3 00       		.byte	0
 2609 08a4 0E       		.uleb128 0xe
 2610 08a5 94080000 		.4byte	0x894
 2611 08a9 11       		.uleb128 0x11
 2612 08aa A4080000 		.4byte	0x8a4
 2613 08ae 0C       		.uleb128 0xc
 2614 08af 78050000 		.4byte	0x578
 2615 08b3 BE080000 		.4byte	0x8be
 2616 08b7 0D       		.uleb128 0xd
 2617 08b8 71050000 		.4byte	0x571
 2618 08bc 3F       		.byte	0x3f
 2619 08bd 00       		.byte	0
 2620 08be 0E       		.uleb128 0xe
 2621 08bf AE080000 		.4byte	0x8ae
 2622 08c3 0E       		.uleb128 0xe
 2623 08c4 AE080000 		.4byte	0x8ae
 2624 08c8 0E       		.uleb128 0xe
 2625 08c9 AE080000 		.4byte	0x8ae
 2626 08cd 0C       		.uleb128 0xc
 2627 08ce 78050000 		.4byte	0x578
 2628 08d2 DD080000 		.4byte	0x8dd
 2629 08d6 0D       		.uleb128 0xd
 2630 08d7 71050000 		.4byte	0x571
 2631 08db 3E       		.byte	0x3e
 2632 08dc 00       		.byte	0
 2633 08dd 0E       		.uleb128 0xe
 2634 08de CD080000 		.4byte	0x8cd
 2635 08e2 0E       		.uleb128 0xe
 2636 08e3 02060000 		.4byte	0x602
 2637 08e7 0C       		.uleb128 0xc
 2638 08e8 ED050000 		.4byte	0x5ed
 2639 08ec F7080000 		.4byte	0x8f7
 2640 08f0 0D       		.uleb128 0xd
 2641 08f1 71050000 		.4byte	0x571
 2642 08f5 7F       		.byte	0x7f
 2643 08f6 00       		.byte	0
 2644 08f7 0E       		.uleb128 0xe
 2645 08f8 E7080000 		.4byte	0x8e7
 2646 08fc 11       		.uleb128 0x11
 2647 08fd F7080000 		.4byte	0x8f7
 2648 0901 0C       		.uleb128 0xc
 2649 0902 ED050000 		.4byte	0x5ed
 2650 0906 12090000 		.4byte	0x912
 2651 090a 0F       		.uleb128 0xf
 2652 090b 71050000 		.4byte	0x571
 2653 090f FE03     		.2byte	0x3fe
 2654 0911 00       		.byte	0
 2655 0912 0E       		.uleb128 0xe
 2656 0913 01090000 		.4byte	0x901
 2657 0917 11       		.uleb128 0x11
 2658 0918 12090000 		.4byte	0x912
 2659 091c 0C       		.uleb128 0xc
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 187


 2660 091d C1060000 		.4byte	0x6c1
 2661 0921 2C090000 		.4byte	0x92c
 2662 0925 0D       		.uleb128 0xd
 2663 0926 71050000 		.4byte	0x571
 2664 092a 0F       		.byte	0xf
 2665 092b 00       		.byte	0
 2666 092c 0C       		.uleb128 0xc
 2667 092d 31070000 		.4byte	0x731
 2668 0931 3C090000 		.4byte	0x93c
 2669 0935 0D       		.uleb128 0xd
 2670 0936 71050000 		.4byte	0x571
 2671 093a 1F       		.byte	0x1f
 2672 093b 00       		.byte	0
 2673 093c 0C       		.uleb128 0xc
 2674 093d ED050000 		.4byte	0x5ed
 2675 0941 4D090000 		.4byte	0x94d
 2676 0945 0F       		.uleb128 0xf
 2677 0946 71050000 		.4byte	0x571
 2678 094a FF01     		.2byte	0x1ff
 2679 094c 00       		.byte	0
 2680 094d 0E       		.uleb128 0xe
 2681 094e 3C090000 		.4byte	0x93c
 2682 0952 11       		.uleb128 0x11
 2683 0953 4D090000 		.4byte	0x94d
 2684 0957 0C       		.uleb128 0xc
 2685 0958 A1070000 		.4byte	0x7a1
 2686 095c 67090000 		.4byte	0x967
 2687 0960 0D       		.uleb128 0xd
 2688 0961 71050000 		.4byte	0x571
 2689 0965 0F       		.byte	0xf
 2690 0966 00       		.byte	0
 2691 0967 06       		.uleb128 0x6
 2692 0968 19180000 		.4byte	.LASF215
 2693 096c 0B       		.byte	0xb
 2694 096d 7B       		.byte	0x7b
 2695 096e AC070000 		.4byte	0x7ac
 2696 0972 0C       		.uleb128 0xc
 2697 0973 ED050000 		.4byte	0x5ed
 2698 0977 82090000 		.4byte	0x982
 2699 097b 0D       		.uleb128 0xd
 2700 097c 71050000 		.4byte	0x571
 2701 0980 0F       		.byte	0xf
 2702 0981 00       		.byte	0
 2703 0982 0C       		.uleb128 0xc
 2704 0983 ED050000 		.4byte	0x5ed
 2705 0987 92090000 		.4byte	0x992
 2706 098b 0D       		.uleb128 0xd
 2707 098c 71050000 		.4byte	0x571
 2708 0990 02       		.byte	0x2
 2709 0991 00       		.byte	0
 2710 0992 0C       		.uleb128 0xc
 2711 0993 ED050000 		.4byte	0x5ed
 2712 0997 A2090000 		.4byte	0x9a2
 2713 099b 0D       		.uleb128 0xd
 2714 099c 71050000 		.4byte	0x571
 2715 09a0 0E       		.byte	0xe
 2716 09a1 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 188


 2717 09a2 14       		.uleb128 0x14
 2718 09a3 080F     		.2byte	0xf08
 2719 09a5 0C       		.byte	0xc
 2720 09a6 21       		.byte	0x21
 2721 09a7 2A0C0000 		.4byte	0xc2a
 2722 09ab 13       		.uleb128 0x13
 2723 09ac 5C230000 		.4byte	.LASF216
 2724 09b0 0C       		.byte	0xc
 2725 09b1 22       		.byte	0x22
 2726 09b2 78050000 		.4byte	0x578
 2727 09b6 00       		.byte	0
 2728 09b7 13       		.uleb128 0x13
 2729 09b8 281B0000 		.4byte	.LASF217
 2730 09bc 0C       		.byte	0xc
 2731 09bd 23       		.byte	0x23
 2732 09be 78050000 		.4byte	0x578
 2733 09c2 04       		.byte	0x4
 2734 09c3 13       		.uleb128 0x13
 2735 09c4 CB050000 		.4byte	.LASF193
 2736 09c8 0C       		.byte	0xc
 2737 09c9 24       		.byte	0x24
 2738 09ca 2F0C0000 		.4byte	0xc2f
 2739 09ce 08       		.byte	0x8
 2740 09cf 13       		.uleb128 0x13
 2741 09d0 7F040000 		.4byte	.LASF218
 2742 09d4 0C       		.byte	0xc
 2743 09d5 25       		.byte	0x25
 2744 09d6 78050000 		.4byte	0x578
 2745 09da 10       		.byte	0x10
 2746 09db 13       		.uleb128 0x13
 2747 09dc 49090000 		.4byte	.LASF219
 2748 09e0 0C       		.byte	0xc
 2749 09e1 26       		.byte	0x26
 2750 09e2 78050000 		.4byte	0x578
 2751 09e6 14       		.byte	0x14
 2752 09e7 13       		.uleb128 0x13
 2753 09e8 3D190000 		.4byte	.LASF220
 2754 09ec 0C       		.byte	0xc
 2755 09ed 27       		.byte	0x27
 2756 09ee 78050000 		.4byte	0x578
 2757 09f2 18       		.byte	0x18
 2758 09f3 13       		.uleb128 0x13
 2759 09f4 D90B0000 		.4byte	.LASF221
 2760 09f8 0C       		.byte	0xc
 2761 09f9 28       		.byte	0x28
 2762 09fa 78050000 		.4byte	0x578
 2763 09fe 1C       		.byte	0x1c
 2764 09ff 13       		.uleb128 0x13
 2765 0a00 6D010000 		.4byte	.LASF222
 2766 0a04 0C       		.byte	0xc
 2767 0a05 29       		.byte	0x29
 2768 0a06 78050000 		.4byte	0x578
 2769 0a0a 20       		.byte	0x20
 2770 0a0b 13       		.uleb128 0x13
 2771 0a0c B30D0000 		.4byte	.LASF223
 2772 0a10 0C       		.byte	0xc
 2773 0a11 2A       		.byte	0x2a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 189


 2774 0a12 78050000 		.4byte	0x578
 2775 0a16 24       		.byte	0x24
 2776 0a17 13       		.uleb128 0x13
 2777 0a18 06210000 		.4byte	.LASF196
 2778 0a1c 0C       		.byte	0xc
 2779 0a1d 2B       		.byte	0x2b
 2780 0a1e 490C0000 		.4byte	0xc49
 2781 0a22 28       		.byte	0x28
 2782 0a23 13       		.uleb128 0x13
 2783 0a24 711C0000 		.4byte	.LASF224
 2784 0a28 0C       		.byte	0xc
 2785 0a29 2C       		.byte	0x2c
 2786 0a2a 4E0C0000 		.4byte	0xc4e
 2787 0a2e 80       		.byte	0x80
 2788 0a2f 13       		.uleb128 0x13
 2789 0a30 A4170000 		.4byte	.LASF183
 2790 0a34 0C       		.byte	0xc
 2791 0a35 2D       		.byte	0x2d
 2792 0a36 580C0000 		.4byte	0xc58
 2793 0a3a C0       		.byte	0xc0
 2794 0a3b 16       		.uleb128 0x16
 2795 0a3c 8C190000 		.4byte	.LASF225
 2796 0a40 0C       		.byte	0xc
 2797 0a41 2E       		.byte	0x2e
 2798 0a42 620C0000 		.4byte	0xc62
 2799 0a46 0001     		.2byte	0x100
 2800 0a48 16       		.uleb128 0x16
 2801 0a49 AE170000 		.4byte	.LASF185
 2802 0a4d 0C       		.byte	0xc
 2803 0a4e 2F       		.byte	0x2f
 2804 0a4f 6C0C0000 		.4byte	0xc6c
 2805 0a53 4001     		.2byte	0x140
 2806 0a55 16       		.uleb128 0x16
 2807 0a56 DA120000 		.4byte	.LASF226
 2808 0a5a 0C       		.byte	0xc
 2809 0a5b 30       		.byte	0x30
 2810 0a5c 760C0000 		.4byte	0xc76
 2811 0a60 8001     		.2byte	0x180
 2812 0a62 16       		.uleb128 0x16
 2813 0a63 79080000 		.4byte	.LASF187
 2814 0a67 0C       		.byte	0xc
 2815 0a68 31       		.byte	0x31
 2816 0a69 800C0000 		.4byte	0xc80
 2817 0a6d C001     		.2byte	0x1c0
 2818 0a6f 16       		.uleb128 0x16
 2819 0a70 7D000000 		.4byte	.LASF227
 2820 0a74 0C       		.byte	0xc
 2821 0a75 32       		.byte	0x32
 2822 0a76 ED050000 		.4byte	0x5ed
 2823 0a7a 0002     		.2byte	0x200
 2824 0a7c 16       		.uleb128 0x16
 2825 0a7d 251C0000 		.4byte	.LASF228
 2826 0a81 0C       		.byte	0xc
 2827 0a82 33       		.byte	0x33
 2828 0a83 ED050000 		.4byte	0x5ed
 2829 0a87 0402     		.2byte	0x204
 2830 0a89 16       		.uleb128 0x16
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 190


 2831 0a8a E1020000 		.4byte	.LASF229
 2832 0a8e 0C       		.byte	0xc
 2833 0a8f 34       		.byte	0x34
 2834 0a90 ED050000 		.4byte	0x5ed
 2835 0a94 0802     		.2byte	0x208
 2836 0a96 16       		.uleb128 0x16
 2837 0a97 440F0000 		.4byte	.LASF230
 2838 0a9b 0C       		.byte	0xc
 2839 0a9c 35       		.byte	0x35
 2840 0a9d ED050000 		.4byte	0x5ed
 2841 0aa1 0C02     		.2byte	0x20c
 2842 0aa3 16       		.uleb128 0x16
 2843 0aa4 44130000 		.4byte	.LASF231
 2844 0aa8 0C       		.byte	0xc
 2845 0aa9 36       		.byte	0x36
 2846 0aaa 78050000 		.4byte	0x578
 2847 0aae 1002     		.2byte	0x210
 2848 0ab0 16       		.uleb128 0x16
 2849 0ab1 C8040000 		.4byte	.LASF232
 2850 0ab5 0C       		.byte	0xc
 2851 0ab6 37       		.byte	0x37
 2852 0ab7 78050000 		.4byte	0x578
 2853 0abb 1402     		.2byte	0x214
 2854 0abd 16       		.uleb128 0x16
 2855 0abe 76130000 		.4byte	.LASF233
 2856 0ac2 0C       		.byte	0xc
 2857 0ac3 38       		.byte	0x38
 2858 0ac4 78050000 		.4byte	0x578
 2859 0ac8 1802     		.2byte	0x218
 2860 0aca 16       		.uleb128 0x16
 2861 0acb DD1A0000 		.4byte	.LASF234
 2862 0acf 0C       		.byte	0xc
 2863 0ad0 39       		.byte	0x39
 2864 0ad1 ED050000 		.4byte	0x5ed
 2865 0ad5 1C02     		.2byte	0x21c
 2866 0ad7 16       		.uleb128 0x16
 2867 0ad8 40040000 		.4byte	.LASF235
 2868 0adc 0C       		.byte	0xc
 2869 0add 3A       		.byte	0x3a
 2870 0ade 78050000 		.4byte	0x578
 2871 0ae2 2002     		.2byte	0x220
 2872 0ae4 16       		.uleb128 0x16
 2873 0ae5 5B0E0000 		.4byte	.LASF236
 2874 0ae9 0C       		.byte	0xc
 2875 0aea 3B       		.byte	0x3b
 2876 0aeb 78050000 		.4byte	0x578
 2877 0aef 2402     		.2byte	0x224
 2878 0af1 16       		.uleb128 0x16
 2879 0af2 DB1D0000 		.4byte	.LASF237
 2880 0af6 0C       		.byte	0xc
 2881 0af7 3C       		.byte	0x3c
 2882 0af8 78050000 		.4byte	0x578
 2883 0afc 2802     		.2byte	0x228
 2884 0afe 16       		.uleb128 0x16
 2885 0aff 26180000 		.4byte	.LASF238
 2886 0b03 0C       		.byte	0xc
 2887 0b04 3D       		.byte	0x3d
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 191


 2888 0b05 ED050000 		.4byte	0x5ed
 2889 0b09 2C02     		.2byte	0x22c
 2890 0b0b 16       		.uleb128 0x16
 2891 0b0c 49130000 		.4byte	.LASF239
 2892 0b10 0C       		.byte	0xc
 2893 0b11 3E       		.byte	0x3e
 2894 0b12 78050000 		.4byte	0x578
 2895 0b16 3002     		.2byte	0x230
 2896 0b18 16       		.uleb128 0x16
 2897 0b19 391F0000 		.4byte	.LASF240
 2898 0b1d 0C       		.byte	0xc
 2899 0b1e 3F       		.byte	0x3f
 2900 0b1f 78050000 		.4byte	0x578
 2901 0b23 3402     		.2byte	0x234
 2902 0b25 16       		.uleb128 0x16
 2903 0b26 AF0B0000 		.4byte	.LASF241
 2904 0b2a 0C       		.byte	0xc
 2905 0b2b 40       		.byte	0x40
 2906 0b2c 78050000 		.4byte	0x578
 2907 0b30 3802     		.2byte	0x238
 2908 0b32 16       		.uleb128 0x16
 2909 0b33 50000000 		.4byte	.LASF242
 2910 0b37 0C       		.byte	0xc
 2911 0b38 41       		.byte	0x41
 2912 0b39 ED050000 		.4byte	0x5ed
 2913 0b3d 3C02     		.2byte	0x23c
 2914 0b3f 16       		.uleb128 0x16
 2915 0b40 3A020000 		.4byte	.LASF243
 2916 0b44 0C       		.byte	0xc
 2917 0b45 42       		.byte	0x42
 2918 0b46 ED050000 		.4byte	0x5ed
 2919 0b4a 4002     		.2byte	0x240
 2920 0b4c 16       		.uleb128 0x16
 2921 0b4d D7170000 		.4byte	.LASF188
 2922 0b51 0C       		.byte	0xc
 2923 0b52 43       		.byte	0x43
 2924 0b53 8A0C0000 		.4byte	0xc8a
 2925 0b57 4402     		.2byte	0x244
 2926 0b59 16       		.uleb128 0x16
 2927 0b5a 4A0A0000 		.4byte	.LASF244
 2928 0b5e 0C       		.byte	0xc
 2929 0b5f 44       		.byte	0x44
 2930 0b60 78050000 		.4byte	0x578
 2931 0b64 8002     		.2byte	0x280
 2932 0b66 16       		.uleb128 0x16
 2933 0b67 E1170000 		.4byte	.LASF245
 2934 0b6b 0C       		.byte	0xc
 2935 0b6c 45       		.byte	0x45
 2936 0b6d 940C0000 		.4byte	0xc94
 2937 0b71 8402     		.2byte	0x284
 2938 0b73 16       		.uleb128 0x16
 2939 0b74 A7040000 		.4byte	.LASF246
 2940 0b78 0C       		.byte	0xc
 2941 0b79 46       		.byte	0x46
 2942 0b7a ED050000 		.4byte	0x5ed
 2943 0b7e 9002     		.2byte	0x290
 2944 0b80 16       		.uleb128 0x16
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 192


 2945 0b81 C3080000 		.4byte	.LASF247
 2946 0b85 0C       		.byte	0xc
 2947 0b86 47       		.byte	0x47
 2948 0b87 9E0C0000 		.4byte	0xc9e
 2949 0b8b 9402     		.2byte	0x294
 2950 0b8d 16       		.uleb128 0x16
 2951 0b8e 2D210000 		.4byte	.LASF248
 2952 0b92 0C       		.byte	0xc
 2953 0b93 48       		.byte	0x48
 2954 0b94 ED050000 		.4byte	0x5ed
 2955 0b98 A002     		.2byte	0x2a0
 2956 0b9a 16       		.uleb128 0x16
 2957 0b9b B40F0000 		.4byte	.LASF249
 2958 0b9f 0C       		.byte	0xc
 2959 0ba0 49       		.byte	0x49
 2960 0ba1 ED050000 		.4byte	0x5ed
 2961 0ba5 A402     		.2byte	0x2a4
 2962 0ba7 16       		.uleb128 0x16
 2963 0ba8 FA170000 		.4byte	.LASF250
 2964 0bac 0C       		.byte	0xc
 2965 0bad 4A       		.byte	0x4a
 2966 0bae A80C0000 		.4byte	0xca8
 2967 0bb2 A802     		.2byte	0x2a8
 2968 0bb4 16       		.uleb128 0x16
 2969 0bb5 191C0000 		.4byte	.LASF251
 2970 0bb9 0C       		.byte	0xc
 2971 0bba 4B       		.byte	0x4b
 2972 0bbb 78050000 		.4byte	0x578
 2973 0bbf 0003     		.2byte	0x300
 2974 0bc1 16       		.uleb128 0x16
 2975 0bc2 30140000 		.4byte	.LASF252
 2976 0bc6 0C       		.byte	0xc
 2977 0bc7 4C       		.byte	0x4c
 2978 0bc8 78050000 		.4byte	0x578
 2979 0bcc 0403     		.2byte	0x304
 2980 0bce 16       		.uleb128 0x16
 2981 0bcf C5210000 		.4byte	.LASF253
 2982 0bd3 0C       		.byte	0xc
 2983 0bd4 4D       		.byte	0x4d
 2984 0bd5 C20C0000 		.4byte	0xcc2
 2985 0bd9 0803     		.2byte	0x308
 2986 0bdb 16       		.uleb128 0x16
 2987 0bdc 14200000 		.4byte	.LASF254
 2988 0be0 0C       		.byte	0xc
 2989 0be1 4E       		.byte	0x4e
 2990 0be2 78050000 		.4byte	0x578
 2991 0be6 4003     		.2byte	0x340
 2992 0be8 16       		.uleb128 0x16
 2993 0be9 3B180000 		.4byte	.LASF255
 2994 0bed 0C       		.byte	0xc
 2995 0bee 4F       		.byte	0x4f
 2996 0bef 78050000 		.4byte	0x578
 2997 0bf3 4403     		.2byte	0x344
 2998 0bf5 16       		.uleb128 0x16
 2999 0bf6 74200000 		.4byte	.LASF256
 3000 0bfa 0C       		.byte	0xc
 3001 0bfb 50       		.byte	0x50
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 193


 3002 0bfc ED050000 		.4byte	0x5ed
 3003 0c00 4803     		.2byte	0x348
 3004 0c02 16       		.uleb128 0x16
 3005 0c03 F61D0000 		.4byte	.LASF257
 3006 0c07 0C       		.byte	0xc
 3007 0c08 51       		.byte	0x51
 3008 0c09 DD0C0000 		.4byte	0xcdd
 3009 0c0d 4C03     		.2byte	0x34c
 3010 0c0f 16       		.uleb128 0x16
 3011 0c10 381D0000 		.4byte	.LASF258
 3012 0c14 0C       		.byte	0xc
 3013 0c15 52       		.byte	0x52
 3014 0c16 78050000 		.4byte	0x578
 3015 0c1a 000F     		.2byte	0xf00
 3016 0c1c 16       		.uleb128 0x16
 3017 0c1d 421D0000 		.4byte	.LASF259
 3018 0c21 0C       		.byte	0xc
 3019 0c22 53       		.byte	0x53
 3020 0c23 78050000 		.4byte	0x578
 3021 0c27 040F     		.2byte	0xf04
 3022 0c29 00       		.byte	0
 3023 0c2a 0E       		.uleb128 0xe
 3024 0c2b F2050000 		.4byte	0x5f2
 3025 0c2f 11       		.uleb128 0x11
 3026 0c30 2A0C0000 		.4byte	0xc2a
 3027 0c34 0C       		.uleb128 0xc
 3028 0c35 ED050000 		.4byte	0x5ed
 3029 0c39 440C0000 		.4byte	0xc44
 3030 0c3d 0D       		.uleb128 0xd
 3031 0c3e 71050000 		.4byte	0x571
 3032 0c42 15       		.byte	0x15
 3033 0c43 00       		.byte	0
 3034 0c44 0E       		.uleb128 0xe
 3035 0c45 340C0000 		.4byte	0xc34
 3036 0c49 11       		.uleb128 0x11
 3037 0c4a 440C0000 		.4byte	0xc44
 3038 0c4e 0E       		.uleb128 0xe
 3039 0c4f 12060000 		.4byte	0x612
 3040 0c53 0E       		.uleb128 0xe
 3041 0c54 72090000 		.4byte	0x972
 3042 0c58 11       		.uleb128 0x11
 3043 0c59 530C0000 		.4byte	0xc53
 3044 0c5d 0E       		.uleb128 0xe
 3045 0c5e 72090000 		.4byte	0x972
 3046 0c62 11       		.uleb128 0x11
 3047 0c63 5D0C0000 		.4byte	0xc5d
 3048 0c67 0E       		.uleb128 0xe
 3049 0c68 72090000 		.4byte	0x972
 3050 0c6c 11       		.uleb128 0x11
 3051 0c6d 670C0000 		.4byte	0xc67
 3052 0c71 0E       		.uleb128 0xe
 3053 0c72 72090000 		.4byte	0x972
 3054 0c76 11       		.uleb128 0x11
 3055 0c77 710C0000 		.4byte	0xc71
 3056 0c7b 0E       		.uleb128 0xe
 3057 0c7c 72090000 		.4byte	0x972
 3058 0c80 11       		.uleb128 0x11
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 194


 3059 0c81 7B0C0000 		.4byte	0xc7b
 3060 0c85 0E       		.uleb128 0xe
 3061 0c86 92090000 		.4byte	0x992
 3062 0c8a 11       		.uleb128 0x11
 3063 0c8b 850C0000 		.4byte	0xc85
 3064 0c8f 0E       		.uleb128 0xe
 3065 0c90 82090000 		.4byte	0x982
 3066 0c94 11       		.uleb128 0x11
 3067 0c95 8F0C0000 		.4byte	0xc8f
 3068 0c99 0E       		.uleb128 0xe
 3069 0c9a 82090000 		.4byte	0x982
 3070 0c9e 11       		.uleb128 0x11
 3071 0c9f 990C0000 		.4byte	0xc99
 3072 0ca3 0E       		.uleb128 0xe
 3073 0ca4 340C0000 		.4byte	0xc34
 3074 0ca8 11       		.uleb128 0x11
 3075 0ca9 A30C0000 		.4byte	0xca3
 3076 0cad 0C       		.uleb128 0xc
 3077 0cae ED050000 		.4byte	0x5ed
 3078 0cb2 BD0C0000 		.4byte	0xcbd
 3079 0cb6 0D       		.uleb128 0xd
 3080 0cb7 71050000 		.4byte	0x571
 3081 0cbb 0D       		.byte	0xd
 3082 0cbc 00       		.byte	0
 3083 0cbd 0E       		.uleb128 0xe
 3084 0cbe AD0C0000 		.4byte	0xcad
 3085 0cc2 11       		.uleb128 0x11
 3086 0cc3 BD0C0000 		.4byte	0xcbd
 3087 0cc7 0C       		.uleb128 0xc
 3088 0cc8 ED050000 		.4byte	0x5ed
 3089 0ccc D80C0000 		.4byte	0xcd8
 3090 0cd0 0F       		.uleb128 0xf
 3091 0cd1 71050000 		.4byte	0x571
 3092 0cd5 EC02     		.2byte	0x2ec
 3093 0cd7 00       		.byte	0
 3094 0cd8 0E       		.uleb128 0xe
 3095 0cd9 C70C0000 		.4byte	0xcc7
 3096 0cdd 11       		.uleb128 0x11
 3097 0cde D80C0000 		.4byte	0xcd8
 3098 0ce2 06       		.uleb128 0x6
 3099 0ce3 A70D0000 		.4byte	.LASF260
 3100 0ce7 0C       		.byte	0xc
 3101 0ce8 54       		.byte	0x54
 3102 0ce9 A2090000 		.4byte	0x9a2
 3103 0ced 10       		.uleb128 0x10
 3104 0cee F9050000 		.4byte	.LASF261
 3105 0cf2 0D       		.byte	0xd
 3106 0cf3 5206     		.2byte	0x652
 3107 0cf5 E20C0000 		.4byte	0xce2
 3108 0cf9 05       		.uleb128 0x5
 3109 0cfa 08       		.byte	0x8
 3110 0cfb 04       		.byte	0x4
 3111 0cfc E4150000 		.4byte	.LASF262
 3112 0d00 12       		.uleb128 0x12
 3113 0d01 B8       		.byte	0xb8
 3114 0d02 0E       		.byte	0xe
 3115 0d03 34       		.byte	0x34
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 195


 3116 0d04 11110000 		.4byte	0x1111
 3117 0d08 13       		.uleb128 0x13
 3118 0d09 F4020000 		.4byte	.LASF263
 3119 0d0d 0E       		.byte	0xe
 3120 0d0e 37       		.byte	0x37
 3121 0d0f 9A040000 		.4byte	0x49a
 3122 0d13 00       		.byte	0
 3123 0d14 13       		.uleb128 0x13
 3124 0d15 FF070000 		.4byte	.LASF264
 3125 0d19 0E       		.byte	0xe
 3126 0d1a 38       		.byte	0x38
 3127 0d1b 9A040000 		.4byte	0x49a
 3128 0d1f 04       		.byte	0x4
 3129 0d20 13       		.uleb128 0x13
 3130 0d21 AE010000 		.4byte	.LASF265
 3131 0d25 0E       		.byte	0xe
 3132 0d26 39       		.byte	0x39
 3133 0d27 9A040000 		.4byte	0x49a
 3134 0d2b 08       		.byte	0x8
 3135 0d2c 13       		.uleb128 0x13
 3136 0d2d 691C0000 		.4byte	.LASF266
 3137 0d31 0E       		.byte	0xe
 3138 0d32 3A       		.byte	0x3a
 3139 0d33 9A040000 		.4byte	0x49a
 3140 0d37 0C       		.byte	0xc
 3141 0d38 13       		.uleb128 0x13
 3142 0d39 E9180000 		.4byte	.LASF267
 3143 0d3d 0E       		.byte	0xe
 3144 0d3e 3B       		.byte	0x3b
 3145 0d3f 9A040000 		.4byte	0x49a
 3146 0d43 10       		.byte	0x10
 3147 0d44 13       		.uleb128 0x13
 3148 0d45 BF120000 		.4byte	.LASF268
 3149 0d49 0E       		.byte	0xe
 3150 0d4a 3C       		.byte	0x3c
 3151 0d4b 9A040000 		.4byte	0x49a
 3152 0d4f 14       		.byte	0x14
 3153 0d50 13       		.uleb128 0x13
 3154 0d51 460C0000 		.4byte	.LASF269
 3155 0d55 0E       		.byte	0xe
 3156 0d56 3D       		.byte	0x3d
 3157 0d57 9A040000 		.4byte	0x49a
 3158 0d5b 18       		.byte	0x18
 3159 0d5c 13       		.uleb128 0x13
 3160 0d5d D8200000 		.4byte	.LASF270
 3161 0d61 0E       		.byte	0xe
 3162 0d62 3E       		.byte	0x3e
 3163 0d63 9A040000 		.4byte	0x49a
 3164 0d67 1C       		.byte	0x1c
 3165 0d68 13       		.uleb128 0x13
 3166 0d69 58110000 		.4byte	.LASF271
 3167 0d6d 0E       		.byte	0xe
 3168 0d6e 3F       		.byte	0x3f
 3169 0d6f 9A040000 		.4byte	0x49a
 3170 0d73 20       		.byte	0x20
 3171 0d74 13       		.uleb128 0x13
 3172 0d75 E60D0000 		.4byte	.LASF272
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 196


 3173 0d79 0E       		.byte	0xe
 3174 0d7a 40       		.byte	0x40
 3175 0d7b 9A040000 		.4byte	0x49a
 3176 0d7f 24       		.byte	0x24
 3177 0d80 13       		.uleb128 0x13
 3178 0d81 74180000 		.4byte	.LASF273
 3179 0d85 0E       		.byte	0xe
 3180 0d86 43       		.byte	0x43
 3181 0d87 6E040000 		.4byte	0x46e
 3182 0d8b 28       		.byte	0x28
 3183 0d8c 13       		.uleb128 0x13
 3184 0d8d B7070000 		.4byte	.LASF274
 3185 0d91 0E       		.byte	0xe
 3186 0d92 44       		.byte	0x44
 3187 0d93 6E040000 		.4byte	0x46e
 3188 0d97 29       		.byte	0x29
 3189 0d98 13       		.uleb128 0x13
 3190 0d99 C4160000 		.4byte	.LASF275
 3191 0d9d 0E       		.byte	0xe
 3192 0d9e 45       		.byte	0x45
 3193 0d9f 6E040000 		.4byte	0x46e
 3194 0da3 2A       		.byte	0x2a
 3195 0da4 13       		.uleb128 0x13
 3196 0da5 C9180000 		.4byte	.LASF276
 3197 0da9 0E       		.byte	0xe
 3198 0daa 46       		.byte	0x46
 3199 0dab 6E040000 		.4byte	0x46e
 3200 0daf 2B       		.byte	0x2b
 3201 0db0 13       		.uleb128 0x13
 3202 0db1 8E180000 		.4byte	.LASF277
 3203 0db5 0E       		.byte	0xe
 3204 0db6 47       		.byte	0x47
 3205 0db7 6E040000 		.4byte	0x46e
 3206 0dbb 2C       		.byte	0x2c
 3207 0dbc 13       		.uleb128 0x13
 3208 0dbd 651B0000 		.4byte	.LASF278
 3209 0dc1 0E       		.byte	0xe
 3210 0dc2 48       		.byte	0x48
 3211 0dc3 6E040000 		.4byte	0x46e
 3212 0dc7 2D       		.byte	0x2d
 3213 0dc8 13       		.uleb128 0x13
 3214 0dc9 EC220000 		.4byte	.LASF279
 3215 0dcd 0E       		.byte	0xe
 3216 0dce 49       		.byte	0x49
 3217 0dcf 6E040000 		.4byte	0x46e
 3218 0dd3 2E       		.byte	0x2e
 3219 0dd4 13       		.uleb128 0x13
 3220 0dd5 92200000 		.4byte	.LASF280
 3221 0dd9 0E       		.byte	0xe
 3222 0dda 4A       		.byte	0x4a
 3223 0ddb 6E040000 		.4byte	0x46e
 3224 0ddf 2F       		.byte	0x2f
 3225 0de0 13       		.uleb128 0x13
 3226 0de1 86050000 		.4byte	.LASF281
 3227 0de5 0E       		.byte	0xe
 3228 0de6 4B       		.byte	0x4b
 3229 0de7 6E040000 		.4byte	0x46e
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 197


 3230 0deb 30       		.byte	0x30
 3231 0dec 13       		.uleb128 0x13
 3232 0ded 25140000 		.4byte	.LASF282
 3233 0df1 0E       		.byte	0xe
 3234 0df2 4E       		.byte	0x4e
 3235 0df3 6E040000 		.4byte	0x46e
 3236 0df7 31       		.byte	0x31
 3237 0df8 13       		.uleb128 0x13
 3238 0df9 F01F0000 		.4byte	.LASF283
 3239 0dfd 0E       		.byte	0xe
 3240 0dfe 4F       		.byte	0x4f
 3241 0dff 6E040000 		.4byte	0x46e
 3242 0e03 32       		.byte	0x32
 3243 0e04 13       		.uleb128 0x13
 3244 0e05 6A130000 		.4byte	.LASF284
 3245 0e09 0E       		.byte	0xe
 3246 0e0a 50       		.byte	0x50
 3247 0e0b 6E040000 		.4byte	0x46e
 3248 0e0f 33       		.byte	0x33
 3249 0e10 13       		.uleb128 0x13
 3250 0e11 3F0E0000 		.4byte	.LASF285
 3251 0e15 0E       		.byte	0xe
 3252 0e16 51       		.byte	0x51
 3253 0e17 6E040000 		.4byte	0x46e
 3254 0e1b 34       		.byte	0x34
 3255 0e1c 13       		.uleb128 0x13
 3256 0e1d EA080000 		.4byte	.LASF286
 3257 0e21 0E       		.byte	0xe
 3258 0e22 52       		.byte	0x52
 3259 0e23 79040000 		.4byte	0x479
 3260 0e27 36       		.byte	0x36
 3261 0e28 13       		.uleb128 0x13
 3262 0e29 53030000 		.4byte	.LASF287
 3263 0e2d 0E       		.byte	0xe
 3264 0e2e 53       		.byte	0x53
 3265 0e2f 79040000 		.4byte	0x479
 3266 0e33 38       		.byte	0x38
 3267 0e34 13       		.uleb128 0x13
 3268 0e35 BA030000 		.4byte	.LASF288
 3269 0e39 0E       		.byte	0xe
 3270 0e3a 54       		.byte	0x54
 3271 0e3b 79040000 		.4byte	0x479
 3272 0e3f 3A       		.byte	0x3a
 3273 0e40 13       		.uleb128 0x13
 3274 0e41 D2020000 		.4byte	.LASF289
 3275 0e45 0E       		.byte	0xe
 3276 0e46 55       		.byte	0x55
 3277 0e47 6E040000 		.4byte	0x46e
 3278 0e4b 3C       		.byte	0x3c
 3279 0e4c 13       		.uleb128 0x13
 3280 0e4d E20A0000 		.4byte	.LASF290
 3281 0e51 0E       		.byte	0xe
 3282 0e52 56       		.byte	0x56
 3283 0e53 6E040000 		.4byte	0x46e
 3284 0e57 3D       		.byte	0x3d
 3285 0e58 13       		.uleb128 0x13
 3286 0e59 85160000 		.4byte	.LASF291
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 198


 3287 0e5d 0E       		.byte	0xe
 3288 0e5e 57       		.byte	0x57
 3289 0e5f 6E040000 		.4byte	0x46e
 3290 0e63 3E       		.byte	0x3e
 3291 0e64 13       		.uleb128 0x13
 3292 0e65 9F120000 		.4byte	.LASF292
 3293 0e69 0E       		.byte	0xe
 3294 0e6a 58       		.byte	0x58
 3295 0e6b 6E040000 		.4byte	0x46e
 3296 0e6f 3F       		.byte	0x3f
 3297 0e70 13       		.uleb128 0x13
 3298 0e71 45020000 		.4byte	.LASF293
 3299 0e75 0E       		.byte	0xe
 3300 0e76 59       		.byte	0x59
 3301 0e77 6E040000 		.4byte	0x46e
 3302 0e7b 40       		.byte	0x40
 3303 0e7c 13       		.uleb128 0x13
 3304 0e7d 961A0000 		.4byte	.LASF294
 3305 0e81 0E       		.byte	0xe
 3306 0e82 5A       		.byte	0x5a
 3307 0e83 6E040000 		.4byte	0x46e
 3308 0e87 41       		.byte	0x41
 3309 0e88 13       		.uleb128 0x13
 3310 0e89 6A1F0000 		.4byte	.LASF295
 3311 0e8d 0E       		.byte	0xe
 3312 0e8e 5B       		.byte	0x5b
 3313 0e8f 6E040000 		.4byte	0x46e
 3314 0e93 42       		.byte	0x42
 3315 0e94 13       		.uleb128 0x13
 3316 0e95 77100000 		.4byte	.LASF296
 3317 0e99 0E       		.byte	0xe
 3318 0e9a 5C       		.byte	0x5c
 3319 0e9b 6E040000 		.4byte	0x46e
 3320 0e9f 43       		.byte	0x43
 3321 0ea0 13       		.uleb128 0x13
 3322 0ea1 1D0F0000 		.4byte	.LASF297
 3323 0ea5 0E       		.byte	0xe
 3324 0ea6 5D       		.byte	0x5d
 3325 0ea7 6E040000 		.4byte	0x46e
 3326 0eab 44       		.byte	0x44
 3327 0eac 13       		.uleb128 0x13
 3328 0ead D7180000 		.4byte	.LASF298
 3329 0eb1 0E       		.byte	0xe
 3330 0eb2 5E       		.byte	0x5e
 3331 0eb3 9A040000 		.4byte	0x49a
 3332 0eb7 48       		.byte	0x48
 3333 0eb8 13       		.uleb128 0x13
 3334 0eb9 D1040000 		.4byte	.LASF299
 3335 0ebd 0E       		.byte	0xe
 3336 0ebe 5F       		.byte	0x5f
 3337 0ebf 9A040000 		.4byte	0x49a
 3338 0ec3 4C       		.byte	0x4c
 3339 0ec4 13       		.uleb128 0x13
 3340 0ec5 481F0000 		.4byte	.LASF300
 3341 0ec9 0E       		.byte	0xe
 3342 0eca 60       		.byte	0x60
 3343 0ecb 6E040000 		.4byte	0x46e
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 199


 3344 0ecf 50       		.byte	0x50
 3345 0ed0 13       		.uleb128 0x13
 3346 0ed1 9D0B0000 		.4byte	.LASF301
 3347 0ed5 0E       		.byte	0xe
 3348 0ed6 61       		.byte	0x61
 3349 0ed7 6E040000 		.4byte	0x46e
 3350 0edb 51       		.byte	0x51
 3351 0edc 13       		.uleb128 0x13
 3352 0edd FE020000 		.4byte	.LASF302
 3353 0ee1 0E       		.byte	0xe
 3354 0ee2 62       		.byte	0x62
 3355 0ee3 6E040000 		.4byte	0x46e
 3356 0ee7 52       		.byte	0x52
 3357 0ee8 13       		.uleb128 0x13
 3358 0ee9 C5070000 		.4byte	.LASF303
 3359 0eed 0E       		.byte	0xe
 3360 0eee 63       		.byte	0x63
 3361 0eef 6E040000 		.4byte	0x46e
 3362 0ef3 53       		.byte	0x53
 3363 0ef4 13       		.uleb128 0x13
 3364 0ef5 011E0000 		.4byte	.LASF304
 3365 0ef9 0E       		.byte	0xe
 3366 0efa 64       		.byte	0x64
 3367 0efb 6E040000 		.4byte	0x46e
 3368 0eff 54       		.byte	0x54
 3369 0f00 13       		.uleb128 0x13
 3370 0f01 E40B0000 		.4byte	.LASF305
 3371 0f05 0E       		.byte	0xe
 3372 0f06 65       		.byte	0x65
 3373 0f07 6E040000 		.4byte	0x46e
 3374 0f0b 55       		.byte	0x55
 3375 0f0c 13       		.uleb128 0x13
 3376 0f0d 00000000 		.4byte	.LASF306
 3377 0f11 0E       		.byte	0xe
 3378 0f12 66       		.byte	0x66
 3379 0f13 6E040000 		.4byte	0x46e
 3380 0f17 56       		.byte	0x56
 3381 0f18 13       		.uleb128 0x13
 3382 0f19 AB120000 		.4byte	.LASF307
 3383 0f1d 0E       		.byte	0xe
 3384 0f1e 67       		.byte	0x67
 3385 0f1f 6E040000 		.4byte	0x46e
 3386 0f23 57       		.byte	0x57
 3387 0f24 13       		.uleb128 0x13
 3388 0f25 A80A0000 		.4byte	.LASF308
 3389 0f29 0E       		.byte	0xe
 3390 0f2a 68       		.byte	0x68
 3391 0f2b 6E040000 		.4byte	0x46e
 3392 0f2f 58       		.byte	0x58
 3393 0f30 13       		.uleb128 0x13
 3394 0f31 44210000 		.4byte	.LASF309
 3395 0f35 0E       		.byte	0xe
 3396 0f36 69       		.byte	0x69
 3397 0f37 6E040000 		.4byte	0x46e
 3398 0f3b 59       		.byte	0x59
 3399 0f3c 13       		.uleb128 0x13
 3400 0f3d 5B1E0000 		.4byte	.LASF310
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 200


 3401 0f41 0E       		.byte	0xe
 3402 0f42 6E       		.byte	0x6e
 3403 0f43 84040000 		.4byte	0x484
 3404 0f47 5A       		.byte	0x5a
 3405 0f48 13       		.uleb128 0x13
 3406 0f49 E8010000 		.4byte	.LASF311
 3407 0f4d 0E       		.byte	0xe
 3408 0f4e 6F       		.byte	0x6f
 3409 0f4f 84040000 		.4byte	0x484
 3410 0f53 5C       		.byte	0x5c
 3411 0f54 13       		.uleb128 0x13
 3412 0f55 60110000 		.4byte	.LASF312
 3413 0f59 0E       		.byte	0xe
 3414 0f5a 70       		.byte	0x70
 3415 0f5b 6E040000 		.4byte	0x46e
 3416 0f5f 5E       		.byte	0x5e
 3417 0f60 13       		.uleb128 0x13
 3418 0f61 FE1F0000 		.4byte	.LASF313
 3419 0f65 0E       		.byte	0xe
 3420 0f66 71       		.byte	0x71
 3421 0f67 6E040000 		.4byte	0x46e
 3422 0f6b 5F       		.byte	0x5f
 3423 0f6c 13       		.uleb128 0x13
 3424 0f6d 960D0000 		.4byte	.LASF314
 3425 0f71 0E       		.byte	0xe
 3426 0f72 72       		.byte	0x72
 3427 0f73 6E040000 		.4byte	0x46e
 3428 0f77 60       		.byte	0x60
 3429 0f78 13       		.uleb128 0x13
 3430 0f79 050C0000 		.4byte	.LASF315
 3431 0f7d 0E       		.byte	0xe
 3432 0f7e 73       		.byte	0x73
 3433 0f7f 9A040000 		.4byte	0x49a
 3434 0f83 64       		.byte	0x64
 3435 0f84 13       		.uleb128 0x13
 3436 0f85 E9160000 		.4byte	.LASF316
 3437 0f89 0E       		.byte	0xe
 3438 0f8a 76       		.byte	0x76
 3439 0f8b 84040000 		.4byte	0x484
 3440 0f8f 68       		.byte	0x68
 3441 0f90 13       		.uleb128 0x13
 3442 0f91 FE150000 		.4byte	.LASF317
 3443 0f95 0E       		.byte	0xe
 3444 0f96 77       		.byte	0x77
 3445 0f97 84040000 		.4byte	0x484
 3446 0f9b 6A       		.byte	0x6a
 3447 0f9c 13       		.uleb128 0x13
 3448 0f9d 35130000 		.4byte	.LASF318
 3449 0fa1 0E       		.byte	0xe
 3450 0fa2 78       		.byte	0x78
 3451 0fa3 84040000 		.4byte	0x484
 3452 0fa7 6C       		.byte	0x6c
 3453 0fa8 13       		.uleb128 0x13
 3454 0fa9 0E050000 		.4byte	.LASF319
 3455 0fad 0E       		.byte	0xe
 3456 0fae 79       		.byte	0x79
 3457 0faf 84040000 		.4byte	0x484
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 201


 3458 0fb3 6E       		.byte	0x6e
 3459 0fb4 13       		.uleb128 0x13
 3460 0fb5 82100000 		.4byte	.LASF320
 3461 0fb9 0E       		.byte	0xe
 3462 0fba 7B       		.byte	0x7b
 3463 0fbb 6E040000 		.4byte	0x46e
 3464 0fbf 70       		.byte	0x70
 3465 0fc0 13       		.uleb128 0x13
 3466 0fc1 1C060000 		.4byte	.LASF321
 3467 0fc5 0E       		.byte	0xe
 3468 0fc6 7C       		.byte	0x7c
 3469 0fc7 6E040000 		.4byte	0x46e
 3470 0fcb 71       		.byte	0x71
 3471 0fcc 13       		.uleb128 0x13
 3472 0fcd B2040000 		.4byte	.LASF322
 3473 0fd1 0E       		.byte	0xe
 3474 0fd2 7D       		.byte	0x7d
 3475 0fd3 6E040000 		.4byte	0x46e
 3476 0fd7 72       		.byte	0x72
 3477 0fd8 13       		.uleb128 0x13
 3478 0fd9 6C020000 		.4byte	.LASF323
 3479 0fdd 0E       		.byte	0xe
 3480 0fde 7E       		.byte	0x7e
 3481 0fdf 6E040000 		.4byte	0x46e
 3482 0fe3 73       		.byte	0x73
 3483 0fe4 13       		.uleb128 0x13
 3484 0fe5 92170000 		.4byte	.LASF324
 3485 0fe9 0E       		.byte	0xe
 3486 0fea 80       		.byte	0x80
 3487 0feb 84040000 		.4byte	0x484
 3488 0fef 74       		.byte	0x74
 3489 0ff0 13       		.uleb128 0x13
 3490 0ff1 9A150000 		.4byte	.LASF325
 3491 0ff5 0E       		.byte	0xe
 3492 0ff6 81       		.byte	0x81
 3493 0ff7 84040000 		.4byte	0x484
 3494 0ffb 76       		.byte	0x76
 3495 0ffc 13       		.uleb128 0x13
 3496 0ffd CF0E0000 		.4byte	.LASF326
 3497 1001 0E       		.byte	0xe
 3498 1002 82       		.byte	0x82
 3499 1003 84040000 		.4byte	0x484
 3500 1007 78       		.byte	0x78
 3501 1008 13       		.uleb128 0x13
 3502 1009 9A080000 		.4byte	.LASF327
 3503 100d 0E       		.byte	0xe
 3504 100e 83       		.byte	0x83
 3505 100f 84040000 		.4byte	0x484
 3506 1013 7A       		.byte	0x7a
 3507 1014 13       		.uleb128 0x13
 3508 1015 F1100000 		.4byte	.LASF328
 3509 1019 0E       		.byte	0xe
 3510 101a 86       		.byte	0x86
 3511 101b 6E040000 		.4byte	0x46e
 3512 101f 7C       		.byte	0x7c
 3513 1020 13       		.uleb128 0x13
 3514 1021 591F0000 		.4byte	.LASF329
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 202


 3515 1025 0E       		.byte	0xe
 3516 1026 87       		.byte	0x87
 3517 1027 6E040000 		.4byte	0x46e
 3518 102b 7D       		.byte	0x7d
 3519 102c 13       		.uleb128 0x13
 3520 102d 26080000 		.4byte	.LASF330
 3521 1031 0E       		.byte	0xe
 3522 1032 88       		.byte	0x88
 3523 1033 6E040000 		.4byte	0x46e
 3524 1037 7E       		.byte	0x7e
 3525 1038 13       		.uleb128 0x13
 3526 1039 78070000 		.4byte	.LASF331
 3527 103d 0E       		.byte	0xe
 3528 103e 89       		.byte	0x89
 3529 103f 6E040000 		.4byte	0x46e
 3530 1043 7F       		.byte	0x7f
 3531 1044 13       		.uleb128 0x13
 3532 1045 AF080000 		.4byte	.LASF332
 3533 1049 0E       		.byte	0xe
 3534 104a 8A       		.byte	0x8a
 3535 104b 6E040000 		.4byte	0x46e
 3536 104f 80       		.byte	0x80
 3537 1050 13       		.uleb128 0x13
 3538 1051 02010000 		.4byte	.LASF333
 3539 1055 0E       		.byte	0xe
 3540 1056 8D       		.byte	0x8d
 3541 1057 9A040000 		.4byte	0x49a
 3542 105b 84       		.byte	0x84
 3543 105c 13       		.uleb128 0x13
 3544 105d 10130000 		.4byte	.LASF334
 3545 1061 0E       		.byte	0xe
 3546 1062 8E       		.byte	0x8e
 3547 1063 9A040000 		.4byte	0x49a
 3548 1067 88       		.byte	0x88
 3549 1068 13       		.uleb128 0x13
 3550 1069 27200000 		.4byte	.LASF335
 3551 106d 0E       		.byte	0xe
 3552 106e 8F       		.byte	0x8f
 3553 106f 9A040000 		.4byte	0x49a
 3554 1073 8C       		.byte	0x8c
 3555 1074 13       		.uleb128 0x13
 3556 1075 7D1C0000 		.4byte	.LASF336
 3557 1079 0E       		.byte	0xe
 3558 107a 90       		.byte	0x90
 3559 107b 9A040000 		.4byte	0x49a
 3560 107f 90       		.byte	0x90
 3561 1080 13       		.uleb128 0x13
 3562 1081 0A1A0000 		.4byte	.LASF337
 3563 1085 0E       		.byte	0xe
 3564 1086 91       		.byte	0x91
 3565 1087 9A040000 		.4byte	0x49a
 3566 108b 94       		.byte	0x94
 3567 108c 13       		.uleb128 0x13
 3568 108d 31060000 		.4byte	.LASF338
 3569 1091 0E       		.byte	0xe
 3570 1092 92       		.byte	0x92
 3571 1093 9A040000 		.4byte	0x49a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 203


 3572 1097 98       		.byte	0x98
 3573 1098 13       		.uleb128 0x13
 3574 1099 051B0000 		.4byte	.LASF339
 3575 109d 0E       		.byte	0xe
 3576 109e 93       		.byte	0x93
 3577 109f 9A040000 		.4byte	0x49a
 3578 10a3 9C       		.byte	0x9c
 3579 10a4 13       		.uleb128 0x13
 3580 10a5 670D0000 		.4byte	.LASF340
 3581 10a9 0E       		.byte	0xe
 3582 10aa 94       		.byte	0x94
 3583 10ab 9A040000 		.4byte	0x49a
 3584 10af A0       		.byte	0xa0
 3585 10b0 13       		.uleb128 0x13
 3586 10b1 D3010000 		.4byte	.LASF341
 3587 10b5 0E       		.byte	0xe
 3588 10b6 95       		.byte	0x95
 3589 10b7 84040000 		.4byte	0x484
 3590 10bb A4       		.byte	0xa4
 3591 10bc 13       		.uleb128 0x13
 3592 10bd 73170000 		.4byte	.LASF342
 3593 10c1 0E       		.byte	0xe
 3594 10c2 96       		.byte	0x96
 3595 10c3 84040000 		.4byte	0x484
 3596 10c7 A6       		.byte	0xa6
 3597 10c8 13       		.uleb128 0x13
 3598 10c9 CF1B0000 		.4byte	.LASF343
 3599 10cd 0E       		.byte	0xe
 3600 10ce 97       		.byte	0x97
 3601 10cf 84040000 		.4byte	0x484
 3602 10d3 A8       		.byte	0xa8
 3603 10d4 13       		.uleb128 0x13
 3604 10d5 3C110000 		.4byte	.LASF344
 3605 10d9 0E       		.byte	0xe
 3606 10da 98       		.byte	0x98
 3607 10db 84040000 		.4byte	0x484
 3608 10df AA       		.byte	0xaa
 3609 10e0 13       		.uleb128 0x13
 3610 10e1 27130000 		.4byte	.LASF345
 3611 10e5 0E       		.byte	0xe
 3612 10e6 99       		.byte	0x99
 3613 10e7 84040000 		.4byte	0x484
 3614 10eb AC       		.byte	0xac
 3615 10ec 13       		.uleb128 0x13
 3616 10ed 97140000 		.4byte	.LASF346
 3617 10f1 0E       		.byte	0xe
 3618 10f2 9A       		.byte	0x9a
 3619 10f3 84040000 		.4byte	0x484
 3620 10f7 AE       		.byte	0xae
 3621 10f8 13       		.uleb128 0x13
 3622 10f9 8E1B0000 		.4byte	.LASF347
 3623 10fd 0E       		.byte	0xe
 3624 10fe 9D       		.byte	0x9d
 3625 10ff 84040000 		.4byte	0x484
 3626 1103 B0       		.byte	0xb0
 3627 1104 13       		.uleb128 0x13
 3628 1105 8F000000 		.4byte	.LASF348
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 204


 3629 1109 0E       		.byte	0xe
 3630 110a 9E       		.byte	0x9e
 3631 110b 9A040000 		.4byte	0x49a
 3632 110f B4       		.byte	0xb4
 3633 1110 00       		.byte	0
 3634 1111 06       		.uleb128 0x6
 3635 1112 091C0000 		.4byte	.LASF349
 3636 1116 0E       		.byte	0xe
 3637 1117 9F       		.byte	0x9f
 3638 1118 000D0000 		.4byte	0xd00
 3639 111c 10       		.uleb128 0x10
 3640 111d 571D0000 		.4byte	.LASF350
 3641 1121 0F       		.byte	0xf
 3642 1122 EE01     		.2byte	0x1ee
 3643 1124 28110000 		.4byte	0x1128
 3644 1128 17       		.uleb128 0x17
 3645 1129 04       		.byte	0x4
 3646 112a 2E110000 		.4byte	0x112e
 3647 112e 18       		.uleb128 0x18
 3648 112f 10       		.uleb128 0x10
 3649 1130 49190000 		.4byte	.LASF351
 3650 1134 0F       		.byte	0xf
 3651 1135 F601     		.2byte	0x1f6
 3652 1137 3B110000 		.4byte	0x113b
 3653 113b 05       		.uleb128 0x5
 3654 113c 01       		.byte	0x1
 3655 113d 08       		.byte	0x8
 3656 113e 35010000 		.4byte	.LASF352
 3657 1142 05       		.uleb128 0x5
 3658 1143 04       		.byte	0x4
 3659 1144 04       		.byte	0x4
 3660 1145 B1070000 		.4byte	.LASF353
 3661 1149 05       		.uleb128 0x5
 3662 114a 08       		.byte	0x8
 3663 114b 04       		.byte	0x4
 3664 114c CA190000 		.4byte	.LASF354
 3665 1150 10       		.uleb128 0x10
 3666 1151 1E140000 		.4byte	.LASF355
 3667 1155 0F       		.byte	0xf
 3668 1156 EC03     		.2byte	0x3ec
 3669 1158 9A040000 		.4byte	0x49a
 3670 115c 19       		.uleb128 0x19
 3671 115d 04       		.byte	0x4
 3672 115e 67040000 		.4byte	0x467
 3673 1162 03       		.byte	0x3
 3674 1163 FE02     		.2byte	0x2fe
 3675 1165 8B110000 		.4byte	0x118b
 3676 1169 04       		.uleb128 0x4
 3677 116a CA100000 		.4byte	.LASF356
 3678 116e 00       		.byte	0
 3679 116f 1A       		.uleb128 0x1a
 3680 1170 C9120000 		.4byte	.LASF357
 3681 1174 01000600 		.4byte	0x60001
 3682 1178 1A       		.uleb128 0x1a
 3683 1179 74150000 		.4byte	.LASF358
 3684 117d 02000600 		.4byte	0x60002
 3685 1181 1A       		.uleb128 0x1a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 205


 3686 1182 50190000 		.4byte	.LASF359
 3687 1186 03000600 		.4byte	0x60003
 3688 118a 00       		.byte	0
 3689 118b 10       		.uleb128 0x10
 3690 118c 0C100000 		.4byte	.LASF360
 3691 1190 03       		.byte	0x3
 3692 1191 0303     		.2byte	0x303
 3693 1193 5C110000 		.4byte	0x115c
 3694 1197 19       		.uleb128 0x19
 3695 1198 01       		.byte	0x1
 3696 1199 0A040000 		.4byte	0x40a
 3697 119d 03       		.byte	0x3
 3698 119e 0703     		.2byte	0x307
 3699 11a0 B1110000 		.4byte	0x11b1
 3700 11a4 04       		.uleb128 0x4
 3701 11a5 00150000 		.4byte	.LASF361
 3702 11a9 00       		.byte	0
 3703 11aa 04       		.uleb128 0x4
 3704 11ab 96220000 		.4byte	.LASF362
 3705 11af 01       		.byte	0x1
 3706 11b0 00       		.byte	0
 3707 11b1 10       		.uleb128 0x10
 3708 11b2 F0040000 		.4byte	.LASF363
 3709 11b6 03       		.byte	0x3
 3710 11b7 0A03     		.2byte	0x30a
 3711 11b9 97110000 		.4byte	0x1197
 3712 11bd 19       		.uleb128 0x19
 3713 11be 01       		.byte	0x1
 3714 11bf 0A040000 		.4byte	0x40a
 3715 11c3 03       		.byte	0x3
 3716 11c4 0E03     		.2byte	0x30e
 3717 11c6 D7110000 		.4byte	0x11d7
 3718 11ca 04       		.uleb128 0x4
 3719 11cb ED0A0000 		.4byte	.LASF364
 3720 11cf 00       		.byte	0
 3721 11d0 04       		.uleb128 0x4
 3722 11d1 CA0F0000 		.4byte	.LASF365
 3723 11d5 01       		.byte	0x1
 3724 11d6 00       		.byte	0
 3725 11d7 10       		.uleb128 0x10
 3726 11d8 B2190000 		.4byte	.LASF366
 3727 11dc 03       		.byte	0x3
 3728 11dd 1103     		.2byte	0x311
 3729 11df BD110000 		.4byte	0x11bd
 3730 11e3 19       		.uleb128 0x19
 3731 11e4 01       		.byte	0x1
 3732 11e5 0A040000 		.4byte	0x40a
 3733 11e9 03       		.byte	0x3
 3734 11ea 1503     		.2byte	0x315
 3735 11ec FD110000 		.4byte	0x11fd
 3736 11f0 04       		.uleb128 0x4
 3737 11f1 B11D0000 		.4byte	.LASF367
 3738 11f5 00       		.byte	0
 3739 11f6 04       		.uleb128 0x4
 3740 11f7 82210000 		.4byte	.LASF368
 3741 11fb 01       		.byte	0x1
 3742 11fc 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 206


 3743 11fd 19       		.uleb128 0x19
 3744 11fe 01       		.byte	0x1
 3745 11ff 0A040000 		.4byte	0x40a
 3746 1203 03       		.byte	0x3
 3747 1204 1C03     		.2byte	0x31c
 3748 1206 17120000 		.4byte	0x1217
 3749 120a 04       		.uleb128 0x4
 3750 120b AE1E0000 		.4byte	.LASF369
 3751 120f 00       		.byte	0
 3752 1210 04       		.uleb128 0x4
 3753 1211 38170000 		.4byte	.LASF370
 3754 1215 01       		.byte	0x1
 3755 1216 00       		.byte	0
 3756 1217 19       		.uleb128 0x19
 3757 1218 01       		.byte	0x1
 3758 1219 0A040000 		.4byte	0x40a
 3759 121d 03       		.byte	0x3
 3760 121e 1304     		.2byte	0x413
 3761 1220 3D120000 		.4byte	0x123d
 3762 1224 04       		.uleb128 0x4
 3763 1225 B3050000 		.4byte	.LASF371
 3764 1229 00       		.byte	0
 3765 122a 04       		.uleb128 0x4
 3766 122b 82090000 		.4byte	.LASF372
 3767 122f 01       		.byte	0x1
 3768 1230 04       		.uleb128 0x4
 3769 1231 07190000 		.4byte	.LASF373
 3770 1235 02       		.byte	0x2
 3771 1236 04       		.uleb128 0x4
 3772 1237 52020000 		.4byte	.LASF374
 3773 123b 03       		.byte	0x3
 3774 123c 00       		.byte	0
 3775 123d 10       		.uleb128 0x10
 3776 123e A2210000 		.4byte	.LASF375
 3777 1242 03       		.byte	0x3
 3778 1243 1804     		.2byte	0x418
 3779 1245 17120000 		.4byte	0x1217
 3780 1249 19       		.uleb128 0x19
 3781 124a 01       		.byte	0x1
 3782 124b 0A040000 		.4byte	0x40a
 3783 124f 03       		.byte	0x3
 3784 1250 9404     		.2byte	0x494
 3785 1252 6F120000 		.4byte	0x126f
 3786 1256 04       		.uleb128 0x4
 3787 1257 221D0000 		.4byte	.LASF376
 3788 125b 00       		.byte	0
 3789 125c 04       		.uleb128 0x4
 3790 125d 310C0000 		.4byte	.LASF377
 3791 1261 01       		.byte	0x1
 3792 1262 04       		.uleb128 0x4
 3793 1263 8F110000 		.4byte	.LASF378
 3794 1267 02       		.byte	0x2
 3795 1268 04       		.uleb128 0x4
 3796 1269 D8110000 		.4byte	.LASF379
 3797 126d 04       		.byte	0x4
 3798 126e 00       		.byte	0
 3799 126f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 207


 3800 1270 78       		.byte	0x78
 3801 1271 03       		.byte	0x3
 3802 1272 0205     		.2byte	0x502
 3803 1274 3C130000 		.4byte	0x133c
 3804 1278 09       		.uleb128 0x9
 3805 1279 A91E0000 		.4byte	.LASF380
 3806 127d 03       		.byte	0x3
 3807 127e 0405     		.2byte	0x504
 3808 1280 9A040000 		.4byte	0x49a
 3809 1284 00       		.byte	0
 3810 1285 09       		.uleb128 0x9
 3811 1286 921C0000 		.4byte	.LASF381
 3812 128a 03       		.byte	0x3
 3813 128b 0505     		.2byte	0x505
 3814 128d 9A040000 		.4byte	0x49a
 3815 1291 04       		.byte	0x4
 3816 1292 09       		.uleb128 0x9
 3817 1293 78160000 		.4byte	.LASF382
 3818 1297 03       		.byte	0x3
 3819 1298 0605     		.2byte	0x506
 3820 129a 9A040000 		.4byte	0x49a
 3821 129e 08       		.byte	0x8
 3822 129f 09       		.uleb128 0x9
 3823 12a0 1B1B0000 		.4byte	.LASF383
 3824 12a4 03       		.byte	0x3
 3825 12a5 0705     		.2byte	0x507
 3826 12a7 9A040000 		.4byte	0x49a
 3827 12ab 0C       		.byte	0xc
 3828 12ac 09       		.uleb128 0x9
 3829 12ad 57090000 		.4byte	.LASF384
 3830 12b1 03       		.byte	0x3
 3831 12b2 0805     		.2byte	0x508
 3832 12b4 9A040000 		.4byte	0x49a
 3833 12b8 10       		.byte	0x10
 3834 12b9 09       		.uleb128 0x9
 3835 12ba 32110000 		.4byte	.LASF385
 3836 12be 03       		.byte	0x3
 3837 12bf 0905     		.2byte	0x509
 3838 12c1 3D120000 		.4byte	0x123d
 3839 12c5 14       		.byte	0x14
 3840 12c6 09       		.uleb128 0x9
 3841 12c7 C80E0000 		.4byte	.LASF386
 3842 12cb 03       		.byte	0x3
 3843 12cc 0A05     		.2byte	0x50a
 3844 12ce 9A040000 		.4byte	0x49a
 3845 12d2 18       		.byte	0x18
 3846 12d3 09       		.uleb128 0x9
 3847 12d4 A2130000 		.4byte	.LASF387
 3848 12d8 03       		.byte	0x3
 3849 12d9 0B05     		.2byte	0x50b
 3850 12db 3C130000 		.4byte	0x133c
 3851 12df 1C       		.byte	0x1c
 3852 12e0 09       		.uleb128 0x9
 3853 12e1 13230000 		.4byte	.LASF388
 3854 12e5 03       		.byte	0x3
 3855 12e6 0C05     		.2byte	0x50c
 3856 12e8 9A040000 		.4byte	0x49a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 208


 3857 12ec 5C       		.byte	0x5c
 3858 12ed 09       		.uleb128 0x9
 3859 12ee E4040000 		.4byte	.LASF389
 3860 12f2 03       		.byte	0x3
 3861 12f3 0D05     		.2byte	0x50d
 3862 12f5 9A040000 		.4byte	0x49a
 3863 12f9 60       		.byte	0x60
 3864 12fa 09       		.uleb128 0x9
 3865 12fb 74210000 		.4byte	.LASF390
 3866 12ff 03       		.byte	0x3
 3867 1300 0E05     		.2byte	0x50e
 3868 1302 9A040000 		.4byte	0x49a
 3869 1306 64       		.byte	0x64
 3870 1307 09       		.uleb128 0x9
 3871 1308 C7150000 		.4byte	.LASF391
 3872 130c 03       		.byte	0x3
 3873 130d 0F05     		.2byte	0x50f
 3874 130f 9A040000 		.4byte	0x49a
 3875 1313 68       		.byte	0x68
 3876 1314 09       		.uleb128 0x9
 3877 1315 06110000 		.4byte	.LASF392
 3878 1319 03       		.byte	0x3
 3879 131a 1005     		.2byte	0x510
 3880 131c 9A040000 		.4byte	0x49a
 3881 1320 6C       		.byte	0x6c
 3882 1321 09       		.uleb128 0x9
 3883 1322 CA200000 		.4byte	.LASF393
 3884 1326 03       		.byte	0x3
 3885 1327 1105     		.2byte	0x511
 3886 1329 4C130000 		.4byte	0x134c
 3887 132d 70       		.byte	0x70
 3888 132e 09       		.uleb128 0x9
 3889 132f DA0D0000 		.4byte	.LASF394
 3890 1333 03       		.byte	0x3
 3891 1334 1205     		.2byte	0x512
 3892 1336 9A040000 		.4byte	0x49a
 3893 133a 74       		.byte	0x74
 3894 133b 00       		.byte	0
 3895 133c 0C       		.uleb128 0xc
 3896 133d 9A040000 		.4byte	0x49a
 3897 1341 4C130000 		.4byte	0x134c
 3898 1345 0D       		.uleb128 0xd
 3899 1346 71050000 		.4byte	0x571
 3900 134a 0F       		.byte	0xf
 3901 134b 00       		.byte	0
 3902 134c 05       		.uleb128 0x5
 3903 134d 01       		.byte	0x1
 3904 134e 02       		.byte	0x2
 3905 134f D30B0000 		.4byte	.LASF395
 3906 1353 10       		.uleb128 0x10
 3907 1354 B5090000 		.4byte	.LASF396
 3908 1358 03       		.byte	0x3
 3909 1359 1305     		.2byte	0x513
 3910 135b 6F120000 		.4byte	0x126f
 3911 135f 19       		.uleb128 0x19
 3912 1360 04       		.byte	0x4
 3913 1361 67040000 		.4byte	0x467
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 209


 3914 1365 04       		.byte	0x4
 3915 1366 5C02     		.2byte	0x25c
 3916 1368 8E130000 		.4byte	0x138e
 3917 136c 04       		.uleb128 0x4
 3918 136d 7A030000 		.4byte	.LASF397
 3919 1371 00       		.byte	0
 3920 1372 1A       		.uleb128 0x1a
 3921 1373 5F170000 		.4byte	.LASF398
 3922 1377 01004A00 		.4byte	0x4a0001
 3923 137b 1A       		.uleb128 0x1a
 3924 137c F6010000 		.4byte	.LASF399
 3925 1380 02004A00 		.4byte	0x4a0002
 3926 1384 1A       		.uleb128 0x1a
 3927 1385 30160000 		.4byte	.LASF400
 3928 1389 03004A00 		.4byte	0x4a0003
 3929 138d 00       		.byte	0
 3930 138e 10       		.uleb128 0x10
 3931 138f 520B0000 		.4byte	.LASF401
 3932 1393 04       		.byte	0x4
 3933 1394 6102     		.2byte	0x261
 3934 1396 5F130000 		.4byte	0x135f
 3935 139a 19       		.uleb128 0x19
 3936 139b 01       		.byte	0x1
 3937 139c 0A040000 		.4byte	0x40a
 3938 13a0 04       		.byte	0x4
 3939 13a1 2107     		.2byte	0x721
 3940 13a3 C0130000 		.4byte	0x13c0
 3941 13a7 04       		.uleb128 0x4
 3942 13a8 59010000 		.4byte	.LASF402
 3943 13ac 00       		.byte	0
 3944 13ad 04       		.uleb128 0x4
 3945 13ae AF160000 		.4byte	.LASF403
 3946 13b2 01       		.byte	0x1
 3947 13b3 04       		.uleb128 0x4
 3948 13b4 83150000 		.4byte	.LASF404
 3949 13b8 02       		.byte	0x2
 3950 13b9 04       		.uleb128 0x4
 3951 13ba C41D0000 		.4byte	.LASF405
 3952 13be 03       		.byte	0x3
 3953 13bf 00       		.byte	0
 3954 13c0 10       		.uleb128 0x10
 3955 13c1 761E0000 		.4byte	.LASF406
 3956 13c5 04       		.byte	0x4
 3957 13c6 2607     		.2byte	0x726
 3958 13c8 9A130000 		.4byte	0x139a
 3959 13cc 12       		.uleb128 0x12
 3960 13cd 14       		.byte	0x14
 3961 13ce 06       		.byte	0x6
 3962 13cf 3B       		.byte	0x3b
 3963 13d0 11140000 		.4byte	0x1411
 3964 13d4 13       		.uleb128 0x13
 3965 13d5 1B030000 		.4byte	.LASF407
 3966 13d9 06       		.byte	0x6
 3967 13da 3D       		.byte	0x3d
 3968 13db 9A040000 		.4byte	0x49a
 3969 13df 00       		.byte	0
 3970 13e0 13       		.uleb128 0x13
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 210


 3971 13e1 EC070000 		.4byte	.LASF408
 3972 13e5 06       		.byte	0x6
 3973 13e6 3E       		.byte	0x3e
 3974 13e7 9A040000 		.4byte	0x49a
 3975 13eb 04       		.byte	0x4
 3976 13ec 13       		.uleb128 0x13
 3977 13ed 8C030000 		.4byte	.LASF409
 3978 13f1 06       		.byte	0x6
 3979 13f2 3F       		.byte	0x3f
 3980 13f3 11140000 		.4byte	0x1411
 3981 13f7 08       		.byte	0x8
 3982 13f8 13       		.uleb128 0x13
 3983 13f9 521A0000 		.4byte	.LASF410
 3984 13fd 06       		.byte	0x6
 3985 13fe 40       		.byte	0x40
 3986 13ff 9A040000 		.4byte	0x49a
 3987 1403 0C       		.byte	0xc
 3988 1404 13       		.uleb128 0x13
 3989 1405 661E0000 		.4byte	.LASF411
 3990 1409 06       		.byte	0x6
 3991 140a 45       		.byte	0x45
 3992 140b 9A040000 		.4byte	0x49a
 3993 140f 10       		.byte	0x10
 3994 1410 00       		.byte	0
 3995 1411 17       		.uleb128 0x17
 3996 1412 04       		.byte	0x4
 3997 1413 17140000 		.4byte	0x1417
 3998 1417 11       		.uleb128 0x11
 3999 1418 53130000 		.4byte	0x1353
 4000 141c 06       		.uleb128 0x6
 4001 141d B2020000 		.4byte	.LASF412
 4002 1421 06       		.byte	0x6
 4003 1422 48       		.byte	0x48
 4004 1423 CC130000 		.4byte	0x13cc
 4005 1427 1B       		.uleb128 0x1b
 4006 1428 08       		.byte	0x8
 4007 1429 10       		.byte	0x10
 4008 142a 2D01     		.2byte	0x12d
 4009 142c 4B140000 		.4byte	0x144b
 4010 1430 09       		.uleb128 0x9
 4011 1431 6F100000 		.4byte	.LASF413
 4012 1435 10       		.byte	0x10
 4013 1436 2E01     		.2byte	0x12e
 4014 1438 ED030000 		.4byte	0x3ed
 4015 143c 00       		.byte	0
 4016 143d 09       		.uleb128 0x9
 4017 143e 341B0000 		.4byte	.LASF414
 4018 1442 10       		.byte	0x10
 4019 1443 3201     		.2byte	0x132
 4020 1445 9A040000 		.4byte	0x49a
 4021 1449 04       		.byte	0x4
 4022 144a 00       		.byte	0
 4023 144b 10       		.uleb128 0x10
 4024 144c 27000000 		.4byte	.LASF415
 4025 1450 10       		.byte	0x10
 4026 1451 3301     		.2byte	0x133
 4027 1453 27140000 		.4byte	0x1427
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 211


 4028 1457 1C       		.uleb128 0x1c
 4029 1458 98030000 		.4byte	.LASF416
 4030 145c 02       		.byte	0x2
 4031 145d 6503     		.2byte	0x365
 4032 145f 03       		.byte	0x3
 4033 1460 1C       		.uleb128 0x1c
 4034 1461 75140000 		.4byte	.LASF417
 4035 1465 02       		.byte	0x2
 4036 1466 7003     		.2byte	0x370
 4037 1468 03       		.byte	0x3
 4038 1469 1D       		.uleb128 0x1d
 4039 146a 9D1C0000 		.4byte	.LASF418
 4040 146e 01       		.byte	0x1
 4041 146f 8D06     		.2byte	0x68d
 4042 1471 00000000 		.4byte	.LFB104
 4043 1475 3C000000 		.4byte	.LFE104-.LFB104
 4044 1479 01       		.uleb128 0x1
 4045 147a 9C       		.byte	0x9c
 4046 147b 8F140000 		.4byte	0x148f
 4047 147f 1E       		.uleb128 0x1e
 4048 1480 F9150000 		.4byte	.LASF420
 4049 1484 01       		.byte	0x1
 4050 1485 8D06     		.2byte	0x68d
 4051 1487 ED030000 		.4byte	0x3ed
 4052 148b 02       		.uleb128 0x2
 4053 148c 91       		.byte	0x91
 4054 148d 76       		.sleb128 -10
 4055 148e 00       		.byte	0
 4056 148f 1D       		.uleb128 0x1d
 4057 1490 42140000 		.4byte	.LASF419
 4058 1494 01       		.byte	0x1
 4059 1495 B106     		.2byte	0x6b1
 4060 1497 00000000 		.4byte	.LFB106
 4061 149b 44000000 		.4byte	.LFE106-.LFB106
 4062 149f 01       		.uleb128 0x1
 4063 14a0 9C       		.byte	0x9c
 4064 14a1 D5140000 		.4byte	0x14d5
 4065 14a5 1E       		.uleb128 0x1e
 4066 14a6 F9150000 		.4byte	.LASF420
 4067 14aa 01       		.byte	0x1
 4068 14ab B106     		.2byte	0x6b1
 4069 14ad ED030000 		.4byte	0x3ed
 4070 14b1 02       		.uleb128 0x2
 4071 14b2 91       		.byte	0x91
 4072 14b3 76       		.sleb128 -10
 4073 14b4 1F       		.uleb128 0x1f
 4074 14b5 60140000 		.4byte	0x1460
 4075 14b9 2C000000 		.4byte	.LBB6
 4076 14bd 04000000 		.4byte	.LBE6-.LBB6
 4077 14c1 01       		.byte	0x1
 4078 14c2 B606     		.2byte	0x6b6
 4079 14c4 1F       		.uleb128 0x1f
 4080 14c5 57140000 		.4byte	0x1457
 4081 14c9 30000000 		.4byte	.LBB8
 4082 14cd 04000000 		.4byte	.LBE8-.LBB8
 4083 14d1 01       		.byte	0x1
 4084 14d2 B706     		.2byte	0x6b7
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 212


 4085 14d4 00       		.byte	0
 4086 14d5 1D       		.uleb128 0x1d
 4087 14d6 EB170000 		.4byte	.LASF421
 4088 14da 03       		.byte	0x3
 4089 14db 9E05     		.2byte	0x59e
 4090 14dd 00000000 		.4byte	.LFB166
 4091 14e1 20000000 		.4byte	.LFE166-.LFB166
 4092 14e5 01       		.uleb128 0x1
 4093 14e6 9C       		.byte	0x9c
 4094 14e7 FB140000 		.4byte	0x14fb
 4095 14eb 1E       		.uleb128 0x1e
 4096 14ec FD000000 		.4byte	.LASF422
 4097 14f0 03       		.byte	0x3
 4098 14f1 9E05     		.2byte	0x59e
 4099 14f3 FB140000 		.4byte	0x14fb
 4100 14f7 02       		.uleb128 0x2
 4101 14f8 91       		.byte	0x91
 4102 14f9 74       		.sleb128 -12
 4103 14fa 00       		.byte	0
 4104 14fb 17       		.uleb128 0x17
 4105 14fc 04       		.byte	0x4
 4106 14fd ED0C0000 		.4byte	0xced
 4107 1501 20       		.uleb128 0x20
 4108 1502 C5110000 		.4byte	.LASF423
 4109 1506 03       		.byte	0x3
 4110 1507 DB05     		.2byte	0x5db
 4111 1509 00000000 		.4byte	.LFB168
 4112 150d 30000000 		.4byte	.LFE168-.LFB168
 4113 1511 01       		.uleb128 0x1
 4114 1512 9C       		.byte	0x9c
 4115 1513 36150000 		.4byte	0x1536
 4116 1517 1E       		.uleb128 0x1e
 4117 1518 FD000000 		.4byte	.LASF422
 4118 151c 03       		.byte	0x3
 4119 151d DB05     		.2byte	0x5db
 4120 151f FB140000 		.4byte	0x14fb
 4121 1523 02       		.uleb128 0x2
 4122 1524 91       		.byte	0x91
 4123 1525 74       		.sleb128 -12
 4124 1526 1E       		.uleb128 0x1e
 4125 1527 090D0000 		.4byte	.LASF424
 4126 152b 03       		.byte	0x3
 4127 152c DB05     		.2byte	0x5db
 4128 152e 9A040000 		.4byte	0x49a
 4129 1532 02       		.uleb128 0x2
 4130 1533 91       		.byte	0x91
 4131 1534 70       		.sleb128 -16
 4132 1535 00       		.byte	0
 4133 1536 20       		.uleb128 0x20
 4134 1537 8C1E0000 		.4byte	.LASF425
 4135 153b 03       		.byte	0x3
 4136 153c 6D06     		.2byte	0x66d
 4137 153e 00000000 		.4byte	.LFB173
 4138 1542 30000000 		.4byte	.LFE173-.LFB173
 4139 1546 01       		.uleb128 0x1
 4140 1547 9C       		.byte	0x9c
 4141 1548 6B150000 		.4byte	0x156b
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 213


 4142 154c 1E       		.uleb128 0x1e
 4143 154d FD000000 		.4byte	.LASF422
 4144 1551 03       		.byte	0x3
 4145 1552 6D06     		.2byte	0x66d
 4146 1554 FB140000 		.4byte	0x14fb
 4147 1558 02       		.uleb128 0x2
 4148 1559 91       		.byte	0x91
 4149 155a 74       		.sleb128 -12
 4150 155b 1E       		.uleb128 0x1e
 4151 155c 13230000 		.4byte	.LASF388
 4152 1560 03       		.byte	0x3
 4153 1561 6D06     		.2byte	0x66d
 4154 1563 9A040000 		.4byte	0x49a
 4155 1567 02       		.uleb128 0x2
 4156 1568 91       		.byte	0x91
 4157 1569 70       		.sleb128 -16
 4158 156a 00       		.byte	0
 4159 156b 21       		.uleb128 0x21
 4160 156c 43120000 		.4byte	.LASF429
 4161 1570 04       		.byte	0x4
 4162 1571 5207     		.2byte	0x752
 4163 1573 8E130000 		.4byte	0x138e
 4164 1577 00000000 		.4byte	.LFB221
 4165 157b E0000000 		.4byte	.LFE221-.LFB221
 4166 157f 01       		.uleb128 0x1
 4167 1580 9C       		.byte	0x9c
 4168 1581 C2150000 		.4byte	0x15c2
 4169 1585 1E       		.uleb128 0x1e
 4170 1586 F50E0000 		.4byte	.LASF426
 4171 158a 04       		.byte	0x4
 4172 158b 5207     		.2byte	0x752
 4173 158d C0130000 		.4byte	0x13c0
 4174 1591 02       		.uleb128 0x2
 4175 1592 91       		.byte	0x91
 4176 1593 6F       		.sleb128 -17
 4177 1594 1E       		.uleb128 0x1e
 4178 1595 83020000 		.4byte	.LASF427
 4179 1599 04       		.byte	0x4
 4180 159a 5307     		.2byte	0x753
 4181 159c 9A040000 		.4byte	0x49a
 4182 15a0 02       		.uleb128 0x2
 4183 15a1 91       		.byte	0x91
 4184 15a2 68       		.sleb128 -24
 4185 15a3 1E       		.uleb128 0x1e
 4186 15a4 BD0F0000 		.4byte	.LASF428
 4187 15a8 04       		.byte	0x4
 4188 15a9 5307     		.2byte	0x753
 4189 15ab 9A040000 		.4byte	0x49a
 4190 15af 02       		.uleb128 0x2
 4191 15b0 91       		.byte	0x91
 4192 15b1 64       		.sleb128 -28
 4193 15b2 22       		.uleb128 0x22
 4194 15b3 AE1B0000 		.4byte	.LASF431
 4195 15b7 04       		.byte	0x4
 4196 15b8 5507     		.2byte	0x755
 4197 15ba 8E130000 		.4byte	0x138e
 4198 15be 02       		.uleb128 0x2
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 214


 4199 15bf 91       		.byte	0x91
 4200 15c0 74       		.sleb128 -12
 4201 15c1 00       		.byte	0
 4202 15c2 21       		.uleb128 0x21
 4203 15c3 1F190000 		.4byte	.LASF430
 4204 15c7 04       		.byte	0x4
 4205 15c8 4908     		.2byte	0x849
 4206 15ca 8E130000 		.4byte	0x138e
 4207 15ce 00000000 		.4byte	.LFB227
 4208 15d2 D0000000 		.4byte	.LFE227-.LFB227
 4209 15d6 01       		.uleb128 0x1
 4210 15d7 9C       		.byte	0x9c
 4211 15d8 0A160000 		.4byte	0x160a
 4212 15dc 1E       		.uleb128 0x1e
 4213 15dd F50E0000 		.4byte	.LASF426
 4214 15e1 04       		.byte	0x4
 4215 15e2 4908     		.2byte	0x849
 4216 15e4 C0130000 		.4byte	0x13c0
 4217 15e8 02       		.uleb128 0x2
 4218 15e9 91       		.byte	0x91
 4219 15ea 6F       		.sleb128 -17
 4220 15eb 1E       		.uleb128 0x1e
 4221 15ec 83020000 		.4byte	.LASF427
 4222 15f0 04       		.byte	0x4
 4223 15f1 4908     		.2byte	0x849
 4224 15f3 9A040000 		.4byte	0x49a
 4225 15f7 02       		.uleb128 0x2
 4226 15f8 91       		.byte	0x91
 4227 15f9 68       		.sleb128 -24
 4228 15fa 22       		.uleb128 0x22
 4229 15fb AE1B0000 		.4byte	.LASF431
 4230 15ff 04       		.byte	0x4
 4231 1600 4B08     		.2byte	0x84b
 4232 1602 8E130000 		.4byte	0x138e
 4233 1606 02       		.uleb128 0x2
 4234 1607 91       		.byte	0x91
 4235 1608 74       		.sleb128 -12
 4236 1609 00       		.byte	0
 4237 160a 21       		.uleb128 0x21
 4238 160b A3000000 		.4byte	.LASF432
 4239 160f 04       		.byte	0x4
 4240 1610 6F08     		.2byte	0x86f
 4241 1612 8E130000 		.4byte	0x138e
 4242 1616 00000000 		.4byte	.LFB228
 4243 161a A0000000 		.4byte	.LFE228-.LFB228
 4244 161e 01       		.uleb128 0x1
 4245 161f 9C       		.byte	0x9c
 4246 1620 52160000 		.4byte	0x1652
 4247 1624 1E       		.uleb128 0x1e
 4248 1625 F50E0000 		.4byte	.LASF426
 4249 1629 04       		.byte	0x4
 4250 162a 6F08     		.2byte	0x86f
 4251 162c C0130000 		.4byte	0x13c0
 4252 1630 02       		.uleb128 0x2
 4253 1631 91       		.byte	0x91
 4254 1632 6F       		.sleb128 -17
 4255 1633 1E       		.uleb128 0x1e
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 215


 4256 1634 83020000 		.4byte	.LASF427
 4257 1638 04       		.byte	0x4
 4258 1639 6F08     		.2byte	0x86f
 4259 163b 9A040000 		.4byte	0x49a
 4260 163f 02       		.uleb128 0x2
 4261 1640 91       		.byte	0x91
 4262 1641 68       		.sleb128 -24
 4263 1642 22       		.uleb128 0x22
 4264 1643 AE1B0000 		.4byte	.LASF431
 4265 1647 04       		.byte	0x4
 4266 1648 7108     		.2byte	0x871
 4267 164a 8E130000 		.4byte	0x138e
 4268 164e 02       		.uleb128 0x2
 4269 164f 91       		.byte	0x91
 4270 1650 74       		.sleb128 -12
 4271 1651 00       		.byte	0
 4272 1652 23       		.uleb128 0x23
 4273 1653 2E030000 		.4byte	.LASF433
 4274 1657 05       		.byte	0x5
 4275 1658 3C       		.byte	0x3c
 4276 1659 00000000 		.4byte	.LFB249
 4277 165d 10000000 		.4byte	.LFE249-.LFB249
 4278 1661 01       		.uleb128 0x1
 4279 1662 9C       		.byte	0x9c
 4280 1663 23       		.uleb128 0x23
 4281 1664 BC0A0000 		.4byte	.LASF434
 4282 1668 05       		.byte	0x5
 4283 1669 4C       		.byte	0x4c
 4284 166a 00000000 		.4byte	.LFB250
 4285 166e 10000000 		.4byte	.LFE250-.LFB250
 4286 1672 01       		.uleb128 0x1
 4287 1673 9C       		.byte	0x9c
 4288 1674 24       		.uleb128 0x24
 4289 1675 2D1E0000 		.4byte	.LASF435
 4290 1679 05       		.byte	0x5
 4291 167a 62       		.byte	0x62
 4292 167b 00000000 		.4byte	.LFB251
 4293 167f 1A000000 		.4byte	.LFE251-.LFB251
 4294 1683 01       		.uleb128 0x1
 4295 1684 9C       		.byte	0x9c
 4296 1685 98160000 		.4byte	0x1698
 4297 1689 25       		.uleb128 0x25
 4298 168a BD0F0000 		.4byte	.LASF428
 4299 168e 05       		.byte	0x5
 4300 168f 62       		.byte	0x62
 4301 1690 9A040000 		.4byte	0x49a
 4302 1694 02       		.uleb128 0x2
 4303 1695 91       		.byte	0x91
 4304 1696 74       		.sleb128 -12
 4305 1697 00       		.byte	0
 4306 1698 26       		.uleb128 0x26
 4307 1699 7D0D0000 		.4byte	.LASF436
 4308 169d 06       		.byte	0x6
 4309 169e 9203     		.2byte	0x392
 4310 16a0 00000000 		.4byte	.LFB255
 4311 16a4 14000000 		.4byte	.LFE255-.LFB255
 4312 16a8 01       		.uleb128 0x1
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 216


 4313 16a9 9C       		.byte	0x9c
 4314 16aa 26       		.uleb128 0x26
 4315 16ab AF0C0000 		.4byte	.LASF437
 4316 16af 06       		.byte	0x6
 4317 16b0 AE03     		.2byte	0x3ae
 4318 16b2 00000000 		.4byte	.LFB256
 4319 16b6 14000000 		.4byte	.LFE256-.LFB256
 4320 16ba 01       		.uleb128 0x1
 4321 16bb 9C       		.byte	0x9c
 4322 16bc 27       		.uleb128 0x27
 4323 16bd 96100000 		.4byte	.LASF445
 4324 16c1 07       		.byte	0x7
 4325 16c2 41       		.byte	0x41
 4326 16c3 00000000 		.4byte	.LFB274
 4327 16c7 30000000 		.4byte	.LFE274-.LFB274
 4328 16cb 01       		.uleb128 0x1
 4329 16cc 9C       		.byte	0x9c
 4330 16cd 28       		.uleb128 0x28
 4331 16ce 88060000 		.4byte	.LASF439
 4332 16d2 07       		.byte	0x7
 4333 16d3 5E       		.byte	0x5e
 4334 16d4 00000000 		.4byte	.LFB275
 4335 16d8 2C000000 		.4byte	.LFE275-.LFB275
 4336 16dc 01       		.uleb128 0x1
 4337 16dd 9C       		.byte	0x9c
 4338 16de F1160000 		.4byte	0x16f1
 4339 16e2 25       		.uleb128 0x25
 4340 16e3 AD130000 		.4byte	.LASF438
 4341 16e7 07       		.byte	0x7
 4342 16e8 5E       		.byte	0x5e
 4343 16e9 1C110000 		.4byte	0x111c
 4344 16ed 02       		.uleb128 0x2
 4345 16ee 91       		.byte	0x91
 4346 16ef 74       		.sleb128 -12
 4347 16f0 00       		.byte	0
 4348 16f1 28       		.uleb128 0x28
 4349 16f2 F0060000 		.4byte	.LASF440
 4350 16f6 07       		.byte	0x7
 4351 16f7 80       		.byte	0x80
 4352 16f8 00000000 		.4byte	.LFB276
 4353 16fc 40000000 		.4byte	.LFE276-.LFB276
 4354 1700 01       		.uleb128 0x1
 4355 1701 9C       		.byte	0x9c
 4356 1702 23170000 		.4byte	0x1723
 4357 1706 25       		.uleb128 0x25
 4358 1707 15170000 		.4byte	.LASF441
 4359 170b 07       		.byte	0x7
 4360 170c 80       		.byte	0x80
 4361 170d 23170000 		.4byte	0x1723
 4362 1711 02       		.uleb128 0x2
 4363 1712 91       		.byte	0x91
 4364 1713 6C       		.sleb128 -20
 4365 1714 29       		.uleb128 0x29
 4366 1715 BC200000 		.4byte	.LASF442
 4367 1719 07       		.byte	0x7
 4368 171a 82       		.byte	0x82
 4369 171b 4C130000 		.4byte	0x134c
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 217


 4370 171f 02       		.uleb128 0x2
 4371 1720 91       		.byte	0x91
 4372 1721 77       		.sleb128 -9
 4373 1722 00       		.byte	0
 4374 1723 17       		.uleb128 0x17
 4375 1724 04       		.byte	0x4
 4376 1725 29170000 		.4byte	0x1729
 4377 1729 11       		.uleb128 0x11
 4378 172a 1C140000 		.4byte	0x141c
 4379 172e 28       		.uleb128 0x28
 4380 172f 06040000 		.4byte	.LASF443
 4381 1733 07       		.byte	0x7
 4382 1734 AA       		.byte	0xaa
 4383 1735 00000000 		.4byte	.LFB277
 4384 1739 78000000 		.4byte	.LFE277-.LFB277
 4385 173d 01       		.uleb128 0x1
 4386 173e 9C       		.byte	0x9c
 4387 173f 60170000 		.4byte	0x1760
 4388 1743 25       		.uleb128 0x25
 4389 1744 15170000 		.4byte	.LASF441
 4390 1748 07       		.byte	0x7
 4391 1749 AA       		.byte	0xaa
 4392 174a 9A040000 		.4byte	0x49a
 4393 174e 02       		.uleb128 0x2
 4394 174f 91       		.byte	0x91
 4395 1750 74       		.sleb128 -12
 4396 1751 25       		.uleb128 0x25
 4397 1752 32020000 		.4byte	.LASF444
 4398 1756 07       		.byte	0x7
 4399 1757 AA       		.byte	0xaa
 4400 1758 9A040000 		.4byte	0x49a
 4401 175c 02       		.uleb128 0x2
 4402 175d 91       		.byte	0x91
 4403 175e 70       		.sleb128 -16
 4404 175f 00       		.byte	0
 4405 1760 27       		.uleb128 0x27
 4406 1761 B8170000 		.4byte	.LASF446
 4407 1765 07       		.byte	0x7
 4408 1766 E3       		.byte	0xe3
 4409 1767 00000000 		.4byte	.LFB278
 4410 176b 2C000000 		.4byte	.LFE278-.LFB278
 4411 176f 01       		.uleb128 0x1
 4412 1770 9C       		.byte	0x9c
 4413 1771 2A       		.uleb128 0x2a
 4414 1772 92050000 		.4byte	.LASF447
 4415 1776 07       		.byte	0x7
 4416 1777 FE       		.byte	0xfe
 4417 1778 00000000 		.4byte	.LFB279
 4418 177c 3C000000 		.4byte	.LFE279-.LFB279
 4419 1780 01       		.uleb128 0x1
 4420 1781 9C       		.byte	0x9c
 4421 1782 95170000 		.4byte	0x1795
 4422 1786 25       		.uleb128 0x25
 4423 1787 DF040000 		.4byte	.LASF448
 4424 178b 07       		.byte	0x7
 4425 178c FE       		.byte	0xfe
 4426 178d B1110000 		.4byte	0x11b1
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 218


 4427 1791 02       		.uleb128 0x2
 4428 1792 91       		.byte	0x91
 4429 1793 77       		.sleb128 -9
 4430 1794 00       		.byte	0
 4431 1795 2B       		.uleb128 0x2b
 4432 1796 D10C0000 		.4byte	.LASF449
 4433 179a 07       		.byte	0x7
 4434 179b 1A01     		.2byte	0x11a
 4435 179d 00000000 		.4byte	.LFB280
 4436 17a1 18000000 		.4byte	.LFE280-.LFB280
 4437 17a5 01       		.uleb128 0x1
 4438 17a6 9C       		.byte	0x9c
 4439 17a7 2B       		.uleb128 0x2b
 4440 17a8 68050000 		.4byte	.LASF450
 4441 17ac 07       		.byte	0x7
 4442 17ad 3601     		.2byte	0x136
 4443 17af 00000000 		.4byte	.LFB281
 4444 17b3 18000000 		.4byte	.LFE281-.LFB281
 4445 17b7 01       		.uleb128 0x1
 4446 17b8 9C       		.byte	0x9c
 4447 17b9 2C       		.uleb128 0x2c
 4448 17ba 810F0000 		.4byte	.LASF451
 4449 17be 07       		.byte	0x7
 4450 17bf 5201     		.2byte	0x152
 4451 17c1 00000000 		.4byte	.LFB282
 4452 17c5 2C000000 		.4byte	.LFE282-.LFB282
 4453 17c9 01       		.uleb128 0x1
 4454 17ca 9C       		.byte	0x9c
 4455 17cb EE170000 		.4byte	0x17ee
 4456 17cf 1E       		.uleb128 0x1e
 4457 17d0 54140000 		.4byte	.LASF452
 4458 17d4 07       		.byte	0x7
 4459 17d5 5201     		.2byte	0x152
 4460 17d7 9A040000 		.4byte	0x49a
 4461 17db 02       		.uleb128 0x2
 4462 17dc 91       		.byte	0x91
 4463 17dd 6C       		.sleb128 -20
 4464 17de 22       		.uleb128 0x22
 4465 17df 96210000 		.4byte	.LASF453
 4466 17e3 07       		.byte	0x7
 4467 17e4 5401     		.2byte	0x154
 4468 17e6 9A040000 		.4byte	0x49a
 4469 17ea 02       		.uleb128 0x2
 4470 17eb 91       		.byte	0x91
 4471 17ec 74       		.sleb128 -12
 4472 17ed 00       		.byte	0
 4473 17ee 2C       		.uleb128 0x2c
 4474 17ef F3090000 		.4byte	.LASF454
 4475 17f3 07       		.byte	0x7
 4476 17f4 6901     		.2byte	0x169
 4477 17f6 00000000 		.4byte	.LFB283
 4478 17fa 4C000000 		.4byte	.LFE283-.LFB283
 4479 17fe 01       		.uleb128 0x1
 4480 17ff 9C       		.byte	0x9c
 4481 1800 23180000 		.4byte	0x1823
 4482 1804 1E       		.uleb128 0x1e
 4483 1805 090D0000 		.4byte	.LASF424
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 219


 4484 1809 07       		.byte	0x7
 4485 180a 6901     		.2byte	0x169
 4486 180c 9A040000 		.4byte	0x49a
 4487 1810 02       		.uleb128 0x2
 4488 1811 91       		.byte	0x91
 4489 1812 6C       		.sleb128 -20
 4490 1813 22       		.uleb128 0x22
 4491 1814 BF0B0000 		.4byte	.LASF455
 4492 1818 07       		.byte	0x7
 4493 1819 6B01     		.2byte	0x16b
 4494 181b 50110000 		.4byte	0x1150
 4495 181f 02       		.uleb128 0x2
 4496 1820 91       		.byte	0x91
 4497 1821 74       		.sleb128 -12
 4498 1822 00       		.byte	0
 4499 1823 2D       		.uleb128 0x2d
 4500 1824 E51E0000 		.4byte	.LASF471
 4501 1828 07       		.byte	0x7
 4502 1829 8201     		.2byte	0x182
 4503 182b 9A040000 		.4byte	0x49a
 4504 182f 00000000 		.4byte	.LFB284
 4505 1833 34000000 		.4byte	.LFE284-.LFB284
 4506 1837 01       		.uleb128 0x1
 4507 1838 9C       		.byte	0x9c
 4508 1839 6B180000 		.4byte	0x186b
 4509 183d 1E       		.uleb128 0x1e
 4510 183e EE1D0000 		.4byte	.LASF456
 4511 1842 07       		.byte	0x7
 4512 1843 8201     		.2byte	0x182
 4513 1845 D7110000 		.4byte	0x11d7
 4514 1849 02       		.uleb128 0x2
 4515 184a 91       		.byte	0x91
 4516 184b 6F       		.sleb128 -17
 4517 184c 22       		.uleb128 0x22
 4518 184d 710F0000 		.4byte	.LASF457
 4519 1851 07       		.byte	0x7
 4520 1852 8401     		.2byte	0x184
 4521 1854 50110000 		.4byte	0x1150
 4522 1858 02       		.uleb128 0x2
 4523 1859 91       		.byte	0x91
 4524 185a 74       		.sleb128 -12
 4525 185b 22       		.uleb128 0x22
 4526 185c 56080000 		.4byte	.LASF458
 4527 1860 07       		.byte	0x7
 4528 1861 8501     		.2byte	0x185
 4529 1863 8B110000 		.4byte	0x118b
 4530 1867 02       		.uleb128 0x2
 4531 1868 91       		.byte	0x91
 4532 1869 70       		.sleb128 -16
 4533 186a 00       		.byte	0
 4534 186b 2C       		.uleb128 0x2c
 4535 186c DB1C0000 		.4byte	.LASF459
 4536 1870 07       		.byte	0x7
 4537 1871 9F01     		.2byte	0x19f
 4538 1873 00000000 		.4byte	.LFB285
 4539 1877 5C000000 		.4byte	.LFE285-.LFB285
 4540 187b 01       		.uleb128 0x1
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 220


 4541 187c 9C       		.byte	0x9c
 4542 187d 91180000 		.4byte	0x1891
 4543 1881 22       		.uleb128 0x22
 4544 1882 C90B0000 		.4byte	.LASF460
 4545 1886 07       		.byte	0x7
 4546 1887 A101     		.2byte	0x1a1
 4547 1889 9A040000 		.4byte	0x49a
 4548 188d 02       		.uleb128 0x2
 4549 188e 91       		.byte	0x91
 4550 188f 74       		.sleb128 -12
 4551 1890 00       		.byte	0
 4552 1891 2E       		.uleb128 0x2e
 4553 1892 81180000 		.4byte	.LASF461
 4554 1896 01       		.byte	0x1
 4555 1897 F907     		.2byte	0x7f9
 4556 1899 9D180000 		.4byte	0x189d
 4557 189d 0E       		.uleb128 0xe
 4558 189e 8F040000 		.4byte	0x48f
 4559 18a2 2F       		.uleb128 0x2f
 4560 18a3 DC000000 		.4byte	.LASF462
 4561 18a7 0E       		.byte	0xe
 4562 18a8 A7       		.byte	0xa7
 4563 18a9 AD180000 		.4byte	0x18ad
 4564 18ad 17       		.uleb128 0x17
 4565 18ae 04       		.byte	0x4
 4566 18af B3180000 		.4byte	0x18b3
 4567 18b3 11       		.uleb128 0x11
 4568 18b4 11110000 		.4byte	0x1111
 4569 18b8 30       		.uleb128 0x30
 4570 18b9 02060000 		.4byte	.LASF463
 4571 18bd 07       		.byte	0x7
 4572 18be 2B       		.byte	0x2b
 4573 18bf 6E040000 		.4byte	0x46e
 4574 18c3 05       		.uleb128 0x5
 4575 18c4 03       		.byte	0x3
 4576 18c5 00000000 		.4byte	ADC_INVERTING_AMP_initVar
 4577 18c9 30       		.uleb128 0x30
 4578 18ca 680B0000 		.4byte	.LASF464
 4579 18ce 07       		.byte	0x7
 4580 18cf 2C       		.byte	0x2c
 4581 18d0 6E040000 		.4byte	0x46e
 4582 18d4 05       		.uleb128 0x5
 4583 18d5 03       		.byte	0x3
 4584 18d6 00000000 		.4byte	ADC_INVERTING_AMP_selected
 4585 18da 30       		.uleb128 0x30
 4586 18db 6F110000 		.4byte	.LASF465
 4587 18df 07       		.byte	0x7
 4588 18e0 2D       		.byte	0x2d
 4589 18e1 9A040000 		.4byte	0x49a
 4590 18e5 05       		.uleb128 0x5
 4591 18e6 03       		.byte	0x3
 4592 18e7 00000000 		.4byte	ADC_INVERTING_AMP_currentConfig
 4593 18eb 0C       		.uleb128 0xc
 4594 18ec 29170000 		.4byte	0x1729
 4595 18f0 FB180000 		.4byte	0x18fb
 4596 18f4 0D       		.uleb128 0xd
 4597 18f5 71050000 		.4byte	0x571
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 221


 4598 18f9 00       		.byte	0
 4599 18fa 00       		.byte	0
 4600 18fb 2E       		.uleb128 0x2e
 4601 18fc B5130000 		.4byte	.LASF466
 4602 1900 06       		.byte	0x6
 4603 1901 6401     		.2byte	0x164
 4604 1903 07190000 		.4byte	0x1907
 4605 1907 11       		.uleb128 0x11
 4606 1908 EB180000 		.4byte	0x18eb
 4607 190c 2F       		.uleb128 0x2f
 4608 190d EC030000 		.4byte	.LASF467
 4609 1911 11       		.byte	0x11
 4610 1912 28       		.byte	0x28
 4611 1913 17190000 		.4byte	0x1917
 4612 1917 11       		.uleb128 0x11
 4613 1918 4B140000 		.4byte	0x144b
 4614 191c 00       		.byte	0
 4615              		.section	.debug_abbrev,"",%progbits
 4616              	.Ldebug_abbrev0:
 4617 0000 01       		.uleb128 0x1
 4618 0001 11       		.uleb128 0x11
 4619 0002 01       		.byte	0x1
 4620 0003 25       		.uleb128 0x25
 4621 0004 0E       		.uleb128 0xe
 4622 0005 13       		.uleb128 0x13
 4623 0006 0B       		.uleb128 0xb
 4624 0007 03       		.uleb128 0x3
 4625 0008 0E       		.uleb128 0xe
 4626 0009 1B       		.uleb128 0x1b
 4627 000a 0E       		.uleb128 0xe
 4628 000b 55       		.uleb128 0x55
 4629 000c 17       		.uleb128 0x17
 4630 000d 11       		.uleb128 0x11
 4631 000e 01       		.uleb128 0x1
 4632 000f 10       		.uleb128 0x10
 4633 0010 17       		.uleb128 0x17
 4634 0011 00       		.byte	0
 4635 0012 00       		.byte	0
 4636 0013 02       		.uleb128 0x2
 4637 0014 04       		.uleb128 0x4
 4638 0015 01       		.byte	0x1
 4639 0016 0B       		.uleb128 0xb
 4640 0017 0B       		.uleb128 0xb
 4641 0018 49       		.uleb128 0x49
 4642 0019 13       		.uleb128 0x13
 4643 001a 3A       		.uleb128 0x3a
 4644 001b 0B       		.uleb128 0xb
 4645 001c 3B       		.uleb128 0x3b
 4646 001d 0B       		.uleb128 0xb
 4647 001e 01       		.uleb128 0x1
 4648 001f 13       		.uleb128 0x13
 4649 0020 00       		.byte	0
 4650 0021 00       		.byte	0
 4651 0022 03       		.uleb128 0x3
 4652 0023 28       		.uleb128 0x28
 4653 0024 00       		.byte	0
 4654 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 222


 4655 0026 0E       		.uleb128 0xe
 4656 0027 1C       		.uleb128 0x1c
 4657 0028 0D       		.uleb128 0xd
 4658 0029 00       		.byte	0
 4659 002a 00       		.byte	0
 4660 002b 04       		.uleb128 0x4
 4661 002c 28       		.uleb128 0x28
 4662 002d 00       		.byte	0
 4663 002e 03       		.uleb128 0x3
 4664 002f 0E       		.uleb128 0xe
 4665 0030 1C       		.uleb128 0x1c
 4666 0031 0B       		.uleb128 0xb
 4667 0032 00       		.byte	0
 4668 0033 00       		.byte	0
 4669 0034 05       		.uleb128 0x5
 4670 0035 24       		.uleb128 0x24
 4671 0036 00       		.byte	0
 4672 0037 0B       		.uleb128 0xb
 4673 0038 0B       		.uleb128 0xb
 4674 0039 3E       		.uleb128 0x3e
 4675 003a 0B       		.uleb128 0xb
 4676 003b 03       		.uleb128 0x3
 4677 003c 0E       		.uleb128 0xe
 4678 003d 00       		.byte	0
 4679 003e 00       		.byte	0
 4680 003f 06       		.uleb128 0x6
 4681 0040 16       		.uleb128 0x16
 4682 0041 00       		.byte	0
 4683 0042 03       		.uleb128 0x3
 4684 0043 0E       		.uleb128 0xe
 4685 0044 3A       		.uleb128 0x3a
 4686 0045 0B       		.uleb128 0xb
 4687 0046 3B       		.uleb128 0x3b
 4688 0047 0B       		.uleb128 0xb
 4689 0048 49       		.uleb128 0x49
 4690 0049 13       		.uleb128 0x13
 4691 004a 00       		.byte	0
 4692 004b 00       		.byte	0
 4693 004c 07       		.uleb128 0x7
 4694 004d 24       		.uleb128 0x24
 4695 004e 00       		.byte	0
 4696 004f 0B       		.uleb128 0xb
 4697 0050 0B       		.uleb128 0xb
 4698 0051 3E       		.uleb128 0x3e
 4699 0052 0B       		.uleb128 0xb
 4700 0053 03       		.uleb128 0x3
 4701 0054 08       		.uleb128 0x8
 4702 0055 00       		.byte	0
 4703 0056 00       		.byte	0
 4704 0057 08       		.uleb128 0x8
 4705 0058 13       		.uleb128 0x13
 4706 0059 01       		.byte	0x1
 4707 005a 0B       		.uleb128 0xb
 4708 005b 05       		.uleb128 0x5
 4709 005c 3A       		.uleb128 0x3a
 4710 005d 0B       		.uleb128 0xb
 4711 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 223


 4712 005f 05       		.uleb128 0x5
 4713 0060 01       		.uleb128 0x1
 4714 0061 13       		.uleb128 0x13
 4715 0062 00       		.byte	0
 4716 0063 00       		.byte	0
 4717 0064 09       		.uleb128 0x9
 4718 0065 0D       		.uleb128 0xd
 4719 0066 00       		.byte	0
 4720 0067 03       		.uleb128 0x3
 4721 0068 0E       		.uleb128 0xe
 4722 0069 3A       		.uleb128 0x3a
 4723 006a 0B       		.uleb128 0xb
 4724 006b 3B       		.uleb128 0x3b
 4725 006c 05       		.uleb128 0x5
 4726 006d 49       		.uleb128 0x49
 4727 006e 13       		.uleb128 0x13
 4728 006f 38       		.uleb128 0x38
 4729 0070 0B       		.uleb128 0xb
 4730 0071 00       		.byte	0
 4731 0072 00       		.byte	0
 4732 0073 0A       		.uleb128 0xa
 4733 0074 0D       		.uleb128 0xd
 4734 0075 00       		.byte	0
 4735 0076 03       		.uleb128 0x3
 4736 0077 0E       		.uleb128 0xe
 4737 0078 3A       		.uleb128 0x3a
 4738 0079 0B       		.uleb128 0xb
 4739 007a 3B       		.uleb128 0x3b
 4740 007b 05       		.uleb128 0x5
 4741 007c 49       		.uleb128 0x49
 4742 007d 13       		.uleb128 0x13
 4743 007e 38       		.uleb128 0x38
 4744 007f 05       		.uleb128 0x5
 4745 0080 00       		.byte	0
 4746 0081 00       		.byte	0
 4747 0082 0B       		.uleb128 0xb
 4748 0083 0D       		.uleb128 0xd
 4749 0084 00       		.byte	0
 4750 0085 03       		.uleb128 0x3
 4751 0086 08       		.uleb128 0x8
 4752 0087 3A       		.uleb128 0x3a
 4753 0088 0B       		.uleb128 0xb
 4754 0089 3B       		.uleb128 0x3b
 4755 008a 05       		.uleb128 0x5
 4756 008b 49       		.uleb128 0x49
 4757 008c 13       		.uleb128 0x13
 4758 008d 38       		.uleb128 0x38
 4759 008e 05       		.uleb128 0x5
 4760 008f 00       		.byte	0
 4761 0090 00       		.byte	0
 4762 0091 0C       		.uleb128 0xc
 4763 0092 01       		.uleb128 0x1
 4764 0093 01       		.byte	0x1
 4765 0094 49       		.uleb128 0x49
 4766 0095 13       		.uleb128 0x13
 4767 0096 01       		.uleb128 0x1
 4768 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 224


 4769 0098 00       		.byte	0
 4770 0099 00       		.byte	0
 4771 009a 0D       		.uleb128 0xd
 4772 009b 21       		.uleb128 0x21
 4773 009c 00       		.byte	0
 4774 009d 49       		.uleb128 0x49
 4775 009e 13       		.uleb128 0x13
 4776 009f 2F       		.uleb128 0x2f
 4777 00a0 0B       		.uleb128 0xb
 4778 00a1 00       		.byte	0
 4779 00a2 00       		.byte	0
 4780 00a3 0E       		.uleb128 0xe
 4781 00a4 35       		.uleb128 0x35
 4782 00a5 00       		.byte	0
 4783 00a6 49       		.uleb128 0x49
 4784 00a7 13       		.uleb128 0x13
 4785 00a8 00       		.byte	0
 4786 00a9 00       		.byte	0
 4787 00aa 0F       		.uleb128 0xf
 4788 00ab 21       		.uleb128 0x21
 4789 00ac 00       		.byte	0
 4790 00ad 49       		.uleb128 0x49
 4791 00ae 13       		.uleb128 0x13
 4792 00af 2F       		.uleb128 0x2f
 4793 00b0 05       		.uleb128 0x5
 4794 00b1 00       		.byte	0
 4795 00b2 00       		.byte	0
 4796 00b3 10       		.uleb128 0x10
 4797 00b4 16       		.uleb128 0x16
 4798 00b5 00       		.byte	0
 4799 00b6 03       		.uleb128 0x3
 4800 00b7 0E       		.uleb128 0xe
 4801 00b8 3A       		.uleb128 0x3a
 4802 00b9 0B       		.uleb128 0xb
 4803 00ba 3B       		.uleb128 0x3b
 4804 00bb 05       		.uleb128 0x5
 4805 00bc 49       		.uleb128 0x49
 4806 00bd 13       		.uleb128 0x13
 4807 00be 00       		.byte	0
 4808 00bf 00       		.byte	0
 4809 00c0 11       		.uleb128 0x11
 4810 00c1 26       		.uleb128 0x26
 4811 00c2 00       		.byte	0
 4812 00c3 49       		.uleb128 0x49
 4813 00c4 13       		.uleb128 0x13
 4814 00c5 00       		.byte	0
 4815 00c6 00       		.byte	0
 4816 00c7 12       		.uleb128 0x12
 4817 00c8 13       		.uleb128 0x13
 4818 00c9 01       		.byte	0x1
 4819 00ca 0B       		.uleb128 0xb
 4820 00cb 0B       		.uleb128 0xb
 4821 00cc 3A       		.uleb128 0x3a
 4822 00cd 0B       		.uleb128 0xb
 4823 00ce 3B       		.uleb128 0x3b
 4824 00cf 0B       		.uleb128 0xb
 4825 00d0 01       		.uleb128 0x1
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 225


 4826 00d1 13       		.uleb128 0x13
 4827 00d2 00       		.byte	0
 4828 00d3 00       		.byte	0
 4829 00d4 13       		.uleb128 0x13
 4830 00d5 0D       		.uleb128 0xd
 4831 00d6 00       		.byte	0
 4832 00d7 03       		.uleb128 0x3
 4833 00d8 0E       		.uleb128 0xe
 4834 00d9 3A       		.uleb128 0x3a
 4835 00da 0B       		.uleb128 0xb
 4836 00db 3B       		.uleb128 0x3b
 4837 00dc 0B       		.uleb128 0xb
 4838 00dd 49       		.uleb128 0x49
 4839 00de 13       		.uleb128 0x13
 4840 00df 38       		.uleb128 0x38
 4841 00e0 0B       		.uleb128 0xb
 4842 00e1 00       		.byte	0
 4843 00e2 00       		.byte	0
 4844 00e3 14       		.uleb128 0x14
 4845 00e4 13       		.uleb128 0x13
 4846 00e5 01       		.byte	0x1
 4847 00e6 0B       		.uleb128 0xb
 4848 00e7 05       		.uleb128 0x5
 4849 00e8 3A       		.uleb128 0x3a
 4850 00e9 0B       		.uleb128 0xb
 4851 00ea 3B       		.uleb128 0x3b
 4852 00eb 0B       		.uleb128 0xb
 4853 00ec 01       		.uleb128 0x1
 4854 00ed 13       		.uleb128 0x13
 4855 00ee 00       		.byte	0
 4856 00ef 00       		.byte	0
 4857 00f0 15       		.uleb128 0x15
 4858 00f1 0D       		.uleb128 0xd
 4859 00f2 00       		.byte	0
 4860 00f3 03       		.uleb128 0x3
 4861 00f4 08       		.uleb128 0x8
 4862 00f5 3A       		.uleb128 0x3a
 4863 00f6 0B       		.uleb128 0xb
 4864 00f7 3B       		.uleb128 0x3b
 4865 00f8 0B       		.uleb128 0xb
 4866 00f9 49       		.uleb128 0x49
 4867 00fa 13       		.uleb128 0x13
 4868 00fb 38       		.uleb128 0x38
 4869 00fc 0B       		.uleb128 0xb
 4870 00fd 00       		.byte	0
 4871 00fe 00       		.byte	0
 4872 00ff 16       		.uleb128 0x16
 4873 0100 0D       		.uleb128 0xd
 4874 0101 00       		.byte	0
 4875 0102 03       		.uleb128 0x3
 4876 0103 0E       		.uleb128 0xe
 4877 0104 3A       		.uleb128 0x3a
 4878 0105 0B       		.uleb128 0xb
 4879 0106 3B       		.uleb128 0x3b
 4880 0107 0B       		.uleb128 0xb
 4881 0108 49       		.uleb128 0x49
 4882 0109 13       		.uleb128 0x13
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 226


 4883 010a 38       		.uleb128 0x38
 4884 010b 05       		.uleb128 0x5
 4885 010c 00       		.byte	0
 4886 010d 00       		.byte	0
 4887 010e 17       		.uleb128 0x17
 4888 010f 0F       		.uleb128 0xf
 4889 0110 00       		.byte	0
 4890 0111 0B       		.uleb128 0xb
 4891 0112 0B       		.uleb128 0xb
 4892 0113 49       		.uleb128 0x49
 4893 0114 13       		.uleb128 0x13
 4894 0115 00       		.byte	0
 4895 0116 00       		.byte	0
 4896 0117 18       		.uleb128 0x18
 4897 0118 15       		.uleb128 0x15
 4898 0119 00       		.byte	0
 4899 011a 27       		.uleb128 0x27
 4900 011b 19       		.uleb128 0x19
 4901 011c 00       		.byte	0
 4902 011d 00       		.byte	0
 4903 011e 19       		.uleb128 0x19
 4904 011f 04       		.uleb128 0x4
 4905 0120 01       		.byte	0x1
 4906 0121 0B       		.uleb128 0xb
 4907 0122 0B       		.uleb128 0xb
 4908 0123 49       		.uleb128 0x49
 4909 0124 13       		.uleb128 0x13
 4910 0125 3A       		.uleb128 0x3a
 4911 0126 0B       		.uleb128 0xb
 4912 0127 3B       		.uleb128 0x3b
 4913 0128 05       		.uleb128 0x5
 4914 0129 01       		.uleb128 0x1
 4915 012a 13       		.uleb128 0x13
 4916 012b 00       		.byte	0
 4917 012c 00       		.byte	0
 4918 012d 1A       		.uleb128 0x1a
 4919 012e 28       		.uleb128 0x28
 4920 012f 00       		.byte	0
 4921 0130 03       		.uleb128 0x3
 4922 0131 0E       		.uleb128 0xe
 4923 0132 1C       		.uleb128 0x1c
 4924 0133 06       		.uleb128 0x6
 4925 0134 00       		.byte	0
 4926 0135 00       		.byte	0
 4927 0136 1B       		.uleb128 0x1b
 4928 0137 13       		.uleb128 0x13
 4929 0138 01       		.byte	0x1
 4930 0139 0B       		.uleb128 0xb
 4931 013a 0B       		.uleb128 0xb
 4932 013b 3A       		.uleb128 0x3a
 4933 013c 0B       		.uleb128 0xb
 4934 013d 3B       		.uleb128 0x3b
 4935 013e 05       		.uleb128 0x5
 4936 013f 01       		.uleb128 0x1
 4937 0140 13       		.uleb128 0x13
 4938 0141 00       		.byte	0
 4939 0142 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 227


 4940 0143 1C       		.uleb128 0x1c
 4941 0144 2E       		.uleb128 0x2e
 4942 0145 00       		.byte	0
 4943 0146 03       		.uleb128 0x3
 4944 0147 0E       		.uleb128 0xe
 4945 0148 3A       		.uleb128 0x3a
 4946 0149 0B       		.uleb128 0xb
 4947 014a 3B       		.uleb128 0x3b
 4948 014b 05       		.uleb128 0x5
 4949 014c 27       		.uleb128 0x27
 4950 014d 19       		.uleb128 0x19
 4951 014e 20       		.uleb128 0x20
 4952 014f 0B       		.uleb128 0xb
 4953 0150 00       		.byte	0
 4954 0151 00       		.byte	0
 4955 0152 1D       		.uleb128 0x1d
 4956 0153 2E       		.uleb128 0x2e
 4957 0154 01       		.byte	0x1
 4958 0155 03       		.uleb128 0x3
 4959 0156 0E       		.uleb128 0xe
 4960 0157 3A       		.uleb128 0x3a
 4961 0158 0B       		.uleb128 0xb
 4962 0159 3B       		.uleb128 0x3b
 4963 015a 05       		.uleb128 0x5
 4964 015b 27       		.uleb128 0x27
 4965 015c 19       		.uleb128 0x19
 4966 015d 11       		.uleb128 0x11
 4967 015e 01       		.uleb128 0x1
 4968 015f 12       		.uleb128 0x12
 4969 0160 06       		.uleb128 0x6
 4970 0161 40       		.uleb128 0x40
 4971 0162 18       		.uleb128 0x18
 4972 0163 9742     		.uleb128 0x2117
 4973 0165 19       		.uleb128 0x19
 4974 0166 01       		.uleb128 0x1
 4975 0167 13       		.uleb128 0x13
 4976 0168 00       		.byte	0
 4977 0169 00       		.byte	0
 4978 016a 1E       		.uleb128 0x1e
 4979 016b 05       		.uleb128 0x5
 4980 016c 00       		.byte	0
 4981 016d 03       		.uleb128 0x3
 4982 016e 0E       		.uleb128 0xe
 4983 016f 3A       		.uleb128 0x3a
 4984 0170 0B       		.uleb128 0xb
 4985 0171 3B       		.uleb128 0x3b
 4986 0172 05       		.uleb128 0x5
 4987 0173 49       		.uleb128 0x49
 4988 0174 13       		.uleb128 0x13
 4989 0175 02       		.uleb128 0x2
 4990 0176 18       		.uleb128 0x18
 4991 0177 00       		.byte	0
 4992 0178 00       		.byte	0
 4993 0179 1F       		.uleb128 0x1f
 4994 017a 1D       		.uleb128 0x1d
 4995 017b 00       		.byte	0
 4996 017c 31       		.uleb128 0x31
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 228


 4997 017d 13       		.uleb128 0x13
 4998 017e 11       		.uleb128 0x11
 4999 017f 01       		.uleb128 0x1
 5000 0180 12       		.uleb128 0x12
 5001 0181 06       		.uleb128 0x6
 5002 0182 58       		.uleb128 0x58
 5003 0183 0B       		.uleb128 0xb
 5004 0184 59       		.uleb128 0x59
 5005 0185 05       		.uleb128 0x5
 5006 0186 00       		.byte	0
 5007 0187 00       		.byte	0
 5008 0188 20       		.uleb128 0x20
 5009 0189 2E       		.uleb128 0x2e
 5010 018a 01       		.byte	0x1
 5011 018b 03       		.uleb128 0x3
 5012 018c 0E       		.uleb128 0xe
 5013 018d 3A       		.uleb128 0x3a
 5014 018e 0B       		.uleb128 0xb
 5015 018f 3B       		.uleb128 0x3b
 5016 0190 05       		.uleb128 0x5
 5017 0191 27       		.uleb128 0x27
 5018 0192 19       		.uleb128 0x19
 5019 0193 11       		.uleb128 0x11
 5020 0194 01       		.uleb128 0x1
 5021 0195 12       		.uleb128 0x12
 5022 0196 06       		.uleb128 0x6
 5023 0197 40       		.uleb128 0x40
 5024 0198 18       		.uleb128 0x18
 5025 0199 9642     		.uleb128 0x2116
 5026 019b 19       		.uleb128 0x19
 5027 019c 01       		.uleb128 0x1
 5028 019d 13       		.uleb128 0x13
 5029 019e 00       		.byte	0
 5030 019f 00       		.byte	0
 5031 01a0 21       		.uleb128 0x21
 5032 01a1 2E       		.uleb128 0x2e
 5033 01a2 01       		.byte	0x1
 5034 01a3 03       		.uleb128 0x3
 5035 01a4 0E       		.uleb128 0xe
 5036 01a5 3A       		.uleb128 0x3a
 5037 01a6 0B       		.uleb128 0xb
 5038 01a7 3B       		.uleb128 0x3b
 5039 01a8 05       		.uleb128 0x5
 5040 01a9 27       		.uleb128 0x27
 5041 01aa 19       		.uleb128 0x19
 5042 01ab 49       		.uleb128 0x49
 5043 01ac 13       		.uleb128 0x13
 5044 01ad 11       		.uleb128 0x11
 5045 01ae 01       		.uleb128 0x1
 5046 01af 12       		.uleb128 0x12
 5047 01b0 06       		.uleb128 0x6
 5048 01b1 40       		.uleb128 0x40
 5049 01b2 18       		.uleb128 0x18
 5050 01b3 9742     		.uleb128 0x2117
 5051 01b5 19       		.uleb128 0x19
 5052 01b6 01       		.uleb128 0x1
 5053 01b7 13       		.uleb128 0x13
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 229


 5054 01b8 00       		.byte	0
 5055 01b9 00       		.byte	0
 5056 01ba 22       		.uleb128 0x22
 5057 01bb 34       		.uleb128 0x34
 5058 01bc 00       		.byte	0
 5059 01bd 03       		.uleb128 0x3
 5060 01be 0E       		.uleb128 0xe
 5061 01bf 3A       		.uleb128 0x3a
 5062 01c0 0B       		.uleb128 0xb
 5063 01c1 3B       		.uleb128 0x3b
 5064 01c2 05       		.uleb128 0x5
 5065 01c3 49       		.uleb128 0x49
 5066 01c4 13       		.uleb128 0x13
 5067 01c5 02       		.uleb128 0x2
 5068 01c6 18       		.uleb128 0x18
 5069 01c7 00       		.byte	0
 5070 01c8 00       		.byte	0
 5071 01c9 23       		.uleb128 0x23
 5072 01ca 2E       		.uleb128 0x2e
 5073 01cb 00       		.byte	0
 5074 01cc 03       		.uleb128 0x3
 5075 01cd 0E       		.uleb128 0xe
 5076 01ce 3A       		.uleb128 0x3a
 5077 01cf 0B       		.uleb128 0xb
 5078 01d0 3B       		.uleb128 0x3b
 5079 01d1 0B       		.uleb128 0xb
 5080 01d2 27       		.uleb128 0x27
 5081 01d3 19       		.uleb128 0x19
 5082 01d4 11       		.uleb128 0x11
 5083 01d5 01       		.uleb128 0x1
 5084 01d6 12       		.uleb128 0x12
 5085 01d7 06       		.uleb128 0x6
 5086 01d8 40       		.uleb128 0x40
 5087 01d9 18       		.uleb128 0x18
 5088 01da 9642     		.uleb128 0x2116
 5089 01dc 19       		.uleb128 0x19
 5090 01dd 00       		.byte	0
 5091 01de 00       		.byte	0
 5092 01df 24       		.uleb128 0x24
 5093 01e0 2E       		.uleb128 0x2e
 5094 01e1 01       		.byte	0x1
 5095 01e2 03       		.uleb128 0x3
 5096 01e3 0E       		.uleb128 0xe
 5097 01e4 3A       		.uleb128 0x3a
 5098 01e5 0B       		.uleb128 0xb
 5099 01e6 3B       		.uleb128 0x3b
 5100 01e7 0B       		.uleb128 0xb
 5101 01e8 27       		.uleb128 0x27
 5102 01e9 19       		.uleb128 0x19
 5103 01ea 11       		.uleb128 0x11
 5104 01eb 01       		.uleb128 0x1
 5105 01ec 12       		.uleb128 0x12
 5106 01ed 06       		.uleb128 0x6
 5107 01ee 40       		.uleb128 0x40
 5108 01ef 18       		.uleb128 0x18
 5109 01f0 9642     		.uleb128 0x2116
 5110 01f2 19       		.uleb128 0x19
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 230


 5111 01f3 01       		.uleb128 0x1
 5112 01f4 13       		.uleb128 0x13
 5113 01f5 00       		.byte	0
 5114 01f6 00       		.byte	0
 5115 01f7 25       		.uleb128 0x25
 5116 01f8 05       		.uleb128 0x5
 5117 01f9 00       		.byte	0
 5118 01fa 03       		.uleb128 0x3
 5119 01fb 0E       		.uleb128 0xe
 5120 01fc 3A       		.uleb128 0x3a
 5121 01fd 0B       		.uleb128 0xb
 5122 01fe 3B       		.uleb128 0x3b
 5123 01ff 0B       		.uleb128 0xb
 5124 0200 49       		.uleb128 0x49
 5125 0201 13       		.uleb128 0x13
 5126 0202 02       		.uleb128 0x2
 5127 0203 18       		.uleb128 0x18
 5128 0204 00       		.byte	0
 5129 0205 00       		.byte	0
 5130 0206 26       		.uleb128 0x26
 5131 0207 2E       		.uleb128 0x2e
 5132 0208 00       		.byte	0
 5133 0209 03       		.uleb128 0x3
 5134 020a 0E       		.uleb128 0xe
 5135 020b 3A       		.uleb128 0x3a
 5136 020c 0B       		.uleb128 0xb
 5137 020d 3B       		.uleb128 0x3b
 5138 020e 05       		.uleb128 0x5
 5139 020f 27       		.uleb128 0x27
 5140 0210 19       		.uleb128 0x19
 5141 0211 11       		.uleb128 0x11
 5142 0212 01       		.uleb128 0x1
 5143 0213 12       		.uleb128 0x12
 5144 0214 06       		.uleb128 0x6
 5145 0215 40       		.uleb128 0x40
 5146 0216 18       		.uleb128 0x18
 5147 0217 9642     		.uleb128 0x2116
 5148 0219 19       		.uleb128 0x19
 5149 021a 00       		.byte	0
 5150 021b 00       		.byte	0
 5151 021c 27       		.uleb128 0x27
 5152 021d 2E       		.uleb128 0x2e
 5153 021e 00       		.byte	0
 5154 021f 3F       		.uleb128 0x3f
 5155 0220 19       		.uleb128 0x19
 5156 0221 03       		.uleb128 0x3
 5157 0222 0E       		.uleb128 0xe
 5158 0223 3A       		.uleb128 0x3a
 5159 0224 0B       		.uleb128 0xb
 5160 0225 3B       		.uleb128 0x3b
 5161 0226 0B       		.uleb128 0xb
 5162 0227 27       		.uleb128 0x27
 5163 0228 19       		.uleb128 0x19
 5164 0229 11       		.uleb128 0x11
 5165 022a 01       		.uleb128 0x1
 5166 022b 12       		.uleb128 0x12
 5167 022c 06       		.uleb128 0x6
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 231


 5168 022d 40       		.uleb128 0x40
 5169 022e 18       		.uleb128 0x18
 5170 022f 9642     		.uleb128 0x2116
 5171 0231 19       		.uleb128 0x19
 5172 0232 00       		.byte	0
 5173 0233 00       		.byte	0
 5174 0234 28       		.uleb128 0x28
 5175 0235 2E       		.uleb128 0x2e
 5176 0236 01       		.byte	0x1
 5177 0237 3F       		.uleb128 0x3f
 5178 0238 19       		.uleb128 0x19
 5179 0239 03       		.uleb128 0x3
 5180 023a 0E       		.uleb128 0xe
 5181 023b 3A       		.uleb128 0x3a
 5182 023c 0B       		.uleb128 0xb
 5183 023d 3B       		.uleb128 0x3b
 5184 023e 0B       		.uleb128 0xb
 5185 023f 27       		.uleb128 0x27
 5186 0240 19       		.uleb128 0x19
 5187 0241 11       		.uleb128 0x11
 5188 0242 01       		.uleb128 0x1
 5189 0243 12       		.uleb128 0x12
 5190 0244 06       		.uleb128 0x6
 5191 0245 40       		.uleb128 0x40
 5192 0246 18       		.uleb128 0x18
 5193 0247 9642     		.uleb128 0x2116
 5194 0249 19       		.uleb128 0x19
 5195 024a 01       		.uleb128 0x1
 5196 024b 13       		.uleb128 0x13
 5197 024c 00       		.byte	0
 5198 024d 00       		.byte	0
 5199 024e 29       		.uleb128 0x29
 5200 024f 34       		.uleb128 0x34
 5201 0250 00       		.byte	0
 5202 0251 03       		.uleb128 0x3
 5203 0252 0E       		.uleb128 0xe
 5204 0253 3A       		.uleb128 0x3a
 5205 0254 0B       		.uleb128 0xb
 5206 0255 3B       		.uleb128 0x3b
 5207 0256 0B       		.uleb128 0xb
 5208 0257 49       		.uleb128 0x49
 5209 0258 13       		.uleb128 0x13
 5210 0259 02       		.uleb128 0x2
 5211 025a 18       		.uleb128 0x18
 5212 025b 00       		.byte	0
 5213 025c 00       		.byte	0
 5214 025d 2A       		.uleb128 0x2a
 5215 025e 2E       		.uleb128 0x2e
 5216 025f 01       		.byte	0x1
 5217 0260 3F       		.uleb128 0x3f
 5218 0261 19       		.uleb128 0x19
 5219 0262 03       		.uleb128 0x3
 5220 0263 0E       		.uleb128 0xe
 5221 0264 3A       		.uleb128 0x3a
 5222 0265 0B       		.uleb128 0xb
 5223 0266 3B       		.uleb128 0x3b
 5224 0267 0B       		.uleb128 0xb
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 232


 5225 0268 27       		.uleb128 0x27
 5226 0269 19       		.uleb128 0x19
 5227 026a 11       		.uleb128 0x11
 5228 026b 01       		.uleb128 0x1
 5229 026c 12       		.uleb128 0x12
 5230 026d 06       		.uleb128 0x6
 5231 026e 40       		.uleb128 0x40
 5232 026f 18       		.uleb128 0x18
 5233 0270 9742     		.uleb128 0x2117
 5234 0272 19       		.uleb128 0x19
 5235 0273 01       		.uleb128 0x1
 5236 0274 13       		.uleb128 0x13
 5237 0275 00       		.byte	0
 5238 0276 00       		.byte	0
 5239 0277 2B       		.uleb128 0x2b
 5240 0278 2E       		.uleb128 0x2e
 5241 0279 00       		.byte	0
 5242 027a 3F       		.uleb128 0x3f
 5243 027b 19       		.uleb128 0x19
 5244 027c 03       		.uleb128 0x3
 5245 027d 0E       		.uleb128 0xe
 5246 027e 3A       		.uleb128 0x3a
 5247 027f 0B       		.uleb128 0xb
 5248 0280 3B       		.uleb128 0x3b
 5249 0281 05       		.uleb128 0x5
 5250 0282 27       		.uleb128 0x27
 5251 0283 19       		.uleb128 0x19
 5252 0284 11       		.uleb128 0x11
 5253 0285 01       		.uleb128 0x1
 5254 0286 12       		.uleb128 0x12
 5255 0287 06       		.uleb128 0x6
 5256 0288 40       		.uleb128 0x40
 5257 0289 18       		.uleb128 0x18
 5258 028a 9642     		.uleb128 0x2116
 5259 028c 19       		.uleb128 0x19
 5260 028d 00       		.byte	0
 5261 028e 00       		.byte	0
 5262 028f 2C       		.uleb128 0x2c
 5263 0290 2E       		.uleb128 0x2e
 5264 0291 01       		.byte	0x1
 5265 0292 3F       		.uleb128 0x3f
 5266 0293 19       		.uleb128 0x19
 5267 0294 03       		.uleb128 0x3
 5268 0295 0E       		.uleb128 0xe
 5269 0296 3A       		.uleb128 0x3a
 5270 0297 0B       		.uleb128 0xb
 5271 0298 3B       		.uleb128 0x3b
 5272 0299 05       		.uleb128 0x5
 5273 029a 27       		.uleb128 0x27
 5274 029b 19       		.uleb128 0x19
 5275 029c 11       		.uleb128 0x11
 5276 029d 01       		.uleb128 0x1
 5277 029e 12       		.uleb128 0x12
 5278 029f 06       		.uleb128 0x6
 5279 02a0 40       		.uleb128 0x40
 5280 02a1 18       		.uleb128 0x18
 5281 02a2 9642     		.uleb128 0x2116
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 233


 5282 02a4 19       		.uleb128 0x19
 5283 02a5 01       		.uleb128 0x1
 5284 02a6 13       		.uleb128 0x13
 5285 02a7 00       		.byte	0
 5286 02a8 00       		.byte	0
 5287 02a9 2D       		.uleb128 0x2d
 5288 02aa 2E       		.uleb128 0x2e
 5289 02ab 01       		.byte	0x1
 5290 02ac 3F       		.uleb128 0x3f
 5291 02ad 19       		.uleb128 0x19
 5292 02ae 03       		.uleb128 0x3
 5293 02af 0E       		.uleb128 0xe
 5294 02b0 3A       		.uleb128 0x3a
 5295 02b1 0B       		.uleb128 0xb
 5296 02b2 3B       		.uleb128 0x3b
 5297 02b3 05       		.uleb128 0x5
 5298 02b4 27       		.uleb128 0x27
 5299 02b5 19       		.uleb128 0x19
 5300 02b6 49       		.uleb128 0x49
 5301 02b7 13       		.uleb128 0x13
 5302 02b8 11       		.uleb128 0x11
 5303 02b9 01       		.uleb128 0x1
 5304 02ba 12       		.uleb128 0x12
 5305 02bb 06       		.uleb128 0x6
 5306 02bc 40       		.uleb128 0x40
 5307 02bd 18       		.uleb128 0x18
 5308 02be 9642     		.uleb128 0x2116
 5309 02c0 19       		.uleb128 0x19
 5310 02c1 01       		.uleb128 0x1
 5311 02c2 13       		.uleb128 0x13
 5312 02c3 00       		.byte	0
 5313 02c4 00       		.byte	0
 5314 02c5 2E       		.uleb128 0x2e
 5315 02c6 34       		.uleb128 0x34
 5316 02c7 00       		.byte	0
 5317 02c8 03       		.uleb128 0x3
 5318 02c9 0E       		.uleb128 0xe
 5319 02ca 3A       		.uleb128 0x3a
 5320 02cb 0B       		.uleb128 0xb
 5321 02cc 3B       		.uleb128 0x3b
 5322 02cd 05       		.uleb128 0x5
 5323 02ce 49       		.uleb128 0x49
 5324 02cf 13       		.uleb128 0x13
 5325 02d0 3F       		.uleb128 0x3f
 5326 02d1 19       		.uleb128 0x19
 5327 02d2 3C       		.uleb128 0x3c
 5328 02d3 19       		.uleb128 0x19
 5329 02d4 00       		.byte	0
 5330 02d5 00       		.byte	0
 5331 02d6 2F       		.uleb128 0x2f
 5332 02d7 34       		.uleb128 0x34
 5333 02d8 00       		.byte	0
 5334 02d9 03       		.uleb128 0x3
 5335 02da 0E       		.uleb128 0xe
 5336 02db 3A       		.uleb128 0x3a
 5337 02dc 0B       		.uleb128 0xb
 5338 02dd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 234


 5339 02de 0B       		.uleb128 0xb
 5340 02df 49       		.uleb128 0x49
 5341 02e0 13       		.uleb128 0x13
 5342 02e1 3F       		.uleb128 0x3f
 5343 02e2 19       		.uleb128 0x19
 5344 02e3 3C       		.uleb128 0x3c
 5345 02e4 19       		.uleb128 0x19
 5346 02e5 00       		.byte	0
 5347 02e6 00       		.byte	0
 5348 02e7 30       		.uleb128 0x30
 5349 02e8 34       		.uleb128 0x34
 5350 02e9 00       		.byte	0
 5351 02ea 03       		.uleb128 0x3
 5352 02eb 0E       		.uleb128 0xe
 5353 02ec 3A       		.uleb128 0x3a
 5354 02ed 0B       		.uleb128 0xb
 5355 02ee 3B       		.uleb128 0x3b
 5356 02ef 0B       		.uleb128 0xb
 5357 02f0 49       		.uleb128 0x49
 5358 02f1 13       		.uleb128 0x13
 5359 02f2 3F       		.uleb128 0x3f
 5360 02f3 19       		.uleb128 0x19
 5361 02f4 02       		.uleb128 0x2
 5362 02f5 18       		.uleb128 0x18
 5363 02f6 00       		.byte	0
 5364 02f7 00       		.byte	0
 5365 02f8 00       		.byte	0
 5366              		.section	.debug_aranges,"",%progbits
 5367 0000 DC000000 		.4byte	0xdc
 5368 0004 0200     		.2byte	0x2
 5369 0006 00000000 		.4byte	.Ldebug_info0
 5370 000a 04       		.byte	0x4
 5371 000b 00       		.byte	0
 5372 000c 0000     		.2byte	0
 5373 000e 0000     		.2byte	0
 5374 0010 00000000 		.4byte	.LFB104
 5375 0014 3C000000 		.4byte	.LFE104-.LFB104
 5376 0018 00000000 		.4byte	.LFB106
 5377 001c 44000000 		.4byte	.LFE106-.LFB106
 5378 0020 00000000 		.4byte	.LFB166
 5379 0024 20000000 		.4byte	.LFE166-.LFB166
 5380 0028 00000000 		.4byte	.LFB168
 5381 002c 30000000 		.4byte	.LFE168-.LFB168
 5382 0030 00000000 		.4byte	.LFB173
 5383 0034 30000000 		.4byte	.LFE173-.LFB173
 5384 0038 00000000 		.4byte	.LFB221
 5385 003c E0000000 		.4byte	.LFE221-.LFB221
 5386 0040 00000000 		.4byte	.LFB227
 5387 0044 D0000000 		.4byte	.LFE227-.LFB227
 5388 0048 00000000 		.4byte	.LFB228
 5389 004c A0000000 		.4byte	.LFE228-.LFB228
 5390 0050 00000000 		.4byte	.LFB249
 5391 0054 10000000 		.4byte	.LFE249-.LFB249
 5392 0058 00000000 		.4byte	.LFB250
 5393 005c 10000000 		.4byte	.LFE250-.LFB250
 5394 0060 00000000 		.4byte	.LFB251
 5395 0064 1A000000 		.4byte	.LFE251-.LFB251
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 235


 5396 0068 00000000 		.4byte	.LFB255
 5397 006c 14000000 		.4byte	.LFE255-.LFB255
 5398 0070 00000000 		.4byte	.LFB256
 5399 0074 14000000 		.4byte	.LFE256-.LFB256
 5400 0078 00000000 		.4byte	.LFB274
 5401 007c 30000000 		.4byte	.LFE274-.LFB274
 5402 0080 00000000 		.4byte	.LFB275
 5403 0084 2C000000 		.4byte	.LFE275-.LFB275
 5404 0088 00000000 		.4byte	.LFB276
 5405 008c 40000000 		.4byte	.LFE276-.LFB276
 5406 0090 00000000 		.4byte	.LFB277
 5407 0094 78000000 		.4byte	.LFE277-.LFB277
 5408 0098 00000000 		.4byte	.LFB278
 5409 009c 2C000000 		.4byte	.LFE278-.LFB278
 5410 00a0 00000000 		.4byte	.LFB279
 5411 00a4 3C000000 		.4byte	.LFE279-.LFB279
 5412 00a8 00000000 		.4byte	.LFB280
 5413 00ac 18000000 		.4byte	.LFE280-.LFB280
 5414 00b0 00000000 		.4byte	.LFB281
 5415 00b4 18000000 		.4byte	.LFE281-.LFB281
 5416 00b8 00000000 		.4byte	.LFB282
 5417 00bc 2C000000 		.4byte	.LFE282-.LFB282
 5418 00c0 00000000 		.4byte	.LFB283
 5419 00c4 4C000000 		.4byte	.LFE283-.LFB283
 5420 00c8 00000000 		.4byte	.LFB284
 5421 00cc 34000000 		.4byte	.LFE284-.LFB284
 5422 00d0 00000000 		.4byte	.LFB285
 5423 00d4 5C000000 		.4byte	.LFE285-.LFB285
 5424 00d8 00000000 		.4byte	0
 5425 00dc 00000000 		.4byte	0
 5426              		.section	.debug_ranges,"",%progbits
 5427              	.Ldebug_ranges0:
 5428 0000 00000000 		.4byte	.LFB104
 5429 0004 3C000000 		.4byte	.LFE104
 5430 0008 00000000 		.4byte	.LFB106
 5431 000c 44000000 		.4byte	.LFE106
 5432 0010 00000000 		.4byte	.LFB166
 5433 0014 20000000 		.4byte	.LFE166
 5434 0018 00000000 		.4byte	.LFB168
 5435 001c 30000000 		.4byte	.LFE168
 5436 0020 00000000 		.4byte	.LFB173
 5437 0024 30000000 		.4byte	.LFE173
 5438 0028 00000000 		.4byte	.LFB221
 5439 002c E0000000 		.4byte	.LFE221
 5440 0030 00000000 		.4byte	.LFB227
 5441 0034 D0000000 		.4byte	.LFE227
 5442 0038 00000000 		.4byte	.LFB228
 5443 003c A0000000 		.4byte	.LFE228
 5444 0040 00000000 		.4byte	.LFB249
 5445 0044 10000000 		.4byte	.LFE249
 5446 0048 00000000 		.4byte	.LFB250
 5447 004c 10000000 		.4byte	.LFE250
 5448 0050 00000000 		.4byte	.LFB251
 5449 0054 1A000000 		.4byte	.LFE251
 5450 0058 00000000 		.4byte	.LFB255
 5451 005c 14000000 		.4byte	.LFE255
 5452 0060 00000000 		.4byte	.LFB256
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 236


 5453 0064 14000000 		.4byte	.LFE256
 5454 0068 00000000 		.4byte	.LFB274
 5455 006c 30000000 		.4byte	.LFE274
 5456 0070 00000000 		.4byte	.LFB275
 5457 0074 2C000000 		.4byte	.LFE275
 5458 0078 00000000 		.4byte	.LFB276
 5459 007c 40000000 		.4byte	.LFE276
 5460 0080 00000000 		.4byte	.LFB277
 5461 0084 78000000 		.4byte	.LFE277
 5462 0088 00000000 		.4byte	.LFB278
 5463 008c 2C000000 		.4byte	.LFE278
 5464 0090 00000000 		.4byte	.LFB279
 5465 0094 3C000000 		.4byte	.LFE279
 5466 0098 00000000 		.4byte	.LFB280
 5467 009c 18000000 		.4byte	.LFE280
 5468 00a0 00000000 		.4byte	.LFB281
 5469 00a4 18000000 		.4byte	.LFE281
 5470 00a8 00000000 		.4byte	.LFB282
 5471 00ac 2C000000 		.4byte	.LFE282
 5472 00b0 00000000 		.4byte	.LFB283
 5473 00b4 4C000000 		.4byte	.LFE283
 5474 00b8 00000000 		.4byte	.LFB284
 5475 00bc 34000000 		.4byte	.LFE284
 5476 00c0 00000000 		.4byte	.LFB285
 5477 00c4 5C000000 		.4byte	.LFE285
 5478 00c8 00000000 		.4byte	0
 5479 00cc 00000000 		.4byte	0
 5480              		.section	.debug_line,"",%progbits
 5481              	.Ldebug_line0:
 5482 0000 86060000 		.section	.debug_str,"MS",%progbits,1
 5482      0200D103 
 5482      00000201 
 5482      FB0E0D00 
 5482      01010101 
 5483              	.LASF306:
 5484 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5484      6843746C 
 5484      4D61696E 
 5484      57733146 
 5484      72657100 
 5485              	.LASF199:
 5486 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 5486      5F54525F 
 5486      47525F56 
 5486      315F5479 
 5486      706500
 5487              	.LASF415:
 5488 0027 63795F73 		.ascii	"cy_stc_sysint_t\000"
 5488      74635F73 
 5488      7973696E 
 5488      745F7400 
 5489              	.LASF25:
 5490 0037 696F7373 		.ascii	"ioss_interrupt_gpio_IRQn\000"
 5490      5F696E74 
 5490      65727275 
 5490      70745F67 
 5490      70696F5F 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 237


 5491              	.LASF242:
 5492 0050 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5492      455F494E 
 5492      54525F4D 
 5492      41534B45 
 5492      4400
 5493              	.LASF123:
 5494 0062 74637077 		.ascii	"tcpwm_1_interrupts_15_IRQn\000"
 5494      6D5F315F 
 5494      696E7465 
 5494      72727570 
 5494      74735F31 
 5495              	.LASF227:
 5496 007d 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 5496      5F574F52 
 5496      4B5F5550 
 5496      44415445 
 5496      4400
 5497              	.LASF348:
 5498 008f 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5498      6F636B53 
 5498      74617475 
 5498      734F6666 
 5498      73657400 
 5499              	.LASF432:
 5500 00a3 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 5500      7973436C 
 5500      6B5F5065 
 5500      72697068 
 5500      44697361 
 5501              	.LASF114:
 5502 00c2 74637077 		.ascii	"tcpwm_1_interrupts_6_IRQn\000"
 5502      6D5F315F 
 5502      696E7465 
 5502      72727570 
 5502      74735F36 
 5503              	.LASF462:
 5504 00dc 63795F64 		.ascii	"cy_device\000"
 5504      65766963 
 5504      6500
 5505              	.LASF142:
 5506 00e6 7564625F 		.ascii	"udb_interrupts_10_IRQn\000"
 5506      696E7465 
 5506      72727570 
 5506      74735F31 
 5506      305F4952 
 5507              	.LASF422:
 5508 00fd 62617365 		.ascii	"base\000"
 5508      00
 5509              	.LASF333:
 5510 0102 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 5510      73436D30 
 5510      436C6F63 
 5510      6B43746C 
 5510      4F666673 
 5511              	.LASF67:
 5512 0119 63707573 		.ascii	"cpuss_interrupts_dw0_7_IRQn\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 238


 5512      735F696E 
 5512      74657272 
 5512      75707473 
 5512      5F647730 
 5513              	.LASF352:
 5514 0135 63686172 		.ascii	"char\000"
 5514      00
 5515              	.LASF207:
 5516 013a 4449565F 		.ascii	"DIV_8_CTL\000"
 5516      385F4354 
 5516      4C00
 5517              	.LASF54:
 5518 0144 7363625F 		.ascii	"scb_3_interrupt_IRQn\000"
 5518      335F696E 
 5518      74657272 
 5518      7570745F 
 5518      4952516E 
 5519              	.LASF402:
 5520 0159 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 5520      5953434C 
 5520      4B5F4449 
 5520      565F385F 
 5520      42495400 
 5521              	.LASF222:
 5522 016d 4348414E 		.ascii	"CHAN_EN\000"
 5522      5F454E00 
 5523              	.LASF84:
 5524 0175 63707573 		.ascii	"cpuss_interrupts_dw1_8_IRQn\000"
 5524      735F696E 
 5524      74657272 
 5524      75707473 
 5524      5F647731 
 5525              	.LASF90:
 5526 0191 63707573 		.ascii	"cpuss_interrupts_dw1_14_IRQn\000"
 5526      735F696E 
 5526      74657272 
 5526      75707473 
 5526      5F647731 
 5527              	.LASF265:
 5528 01ae 70657269 		.ascii	"periBase\000"
 5528      42617365 
 5528      00
 5529              	.LASF62:
 5530 01b7 63707573 		.ascii	"cpuss_interrupts_dw0_2_IRQn\000"
 5530      735F696E 
 5530      74657272 
 5530      75707473 
 5530      5F647730 
 5531              	.LASF341:
 5532 01d3 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 5532      73436D30 
 5532      4E6D6943 
 5532      746C4F66 
 5532      66736574 
 5533              	.LASF311:
 5534 01e8 64774368 		.ascii	"dwChSize\000"
 5534      53697A65 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 239


 5534      00
 5535              	.LASF189:
 5536 01f1 53544952 		.ascii	"STIR\000"
 5536      00
 5537              	.LASF399:
 5538 01f6 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 5538      5953434C 
 5538      4B5F5449 
 5538      4D454F55 
 5538      5400
 5539              	.LASF172:
 5540 0208 756E7369 		.ascii	"unsigned int\000"
 5540      676E6564 
 5540      20696E74 
 5540      00
 5541              	.LASF46:
 5542 0215 63707573 		.ascii	"cpuss_interrupts_ipc_11_IRQn\000"
 5542      735F696E 
 5542      74657272 
 5542      75707473 
 5542      5F697063 
 5543              	.LASF444:
 5544 0232 72657374 		.ascii	"restart\000"
 5544      61727400 
 5545              	.LASF243:
 5546 023a 494E5452 		.ascii	"INTR_CAUSE\000"
 5546      5F434155 
 5546      534500
 5547              	.LASF293:
 5548 0245 736D6966 		.ascii	"smifDeviceNr\000"
 5548      44657669 
 5548      63654E72 
 5548      00
 5549              	.LASF374:
 5550 0252 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 5550      41525F52 
 5550      414E4745 
 5550      5F434F4E 
 5550      445F4F55 
 5551              	.LASF323:
 5552 026c 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 5552      44697643 
 5552      6D645061 
 5552      54797065 
 5552      53656C50 
 5553              	.LASF427:
 5554 0283 64697669 		.ascii	"dividerNum\000"
 5554      6465724E 
 5554      756D00
 5555              	.LASF115:
 5556 028e 74637077 		.ascii	"tcpwm_1_interrupts_7_IRQn\000"
 5556      6D5F315F 
 5556      696E7465 
 5556      72727570 
 5556      74735F37 
 5557              	.LASF166:
 5558 02a8 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 240


 5558      7433325F 
 5558      7400
 5559              	.LASF412:
 5560 02b2 4144435F 		.ascii	"ADC_INVERTING_AMP_CONFIG_STRUCT\000"
 5560      494E5645 
 5560      5254494E 
 5560      475F414D 
 5560      505F434F 
 5561              	.LASF289:
 5562 02d2 73727373 		.ascii	"srssNumClkpath\000"
 5562      4E756D43 
 5562      6C6B7061 
 5562      746800
 5563              	.LASF229:
 5564 02e1 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 5564      5F574F52 
 5564      4B5F4E45 
 5564      5756414C 
 5564      554500
 5565              	.LASF263:
 5566 02f4 63707573 		.ascii	"cpussBase\000"
 5566      73426173 
 5566      6500
 5567              	.LASF302:
 5568 02fe 666C6173 		.ascii	"flashWriteDelay\000"
 5568      68577269 
 5568      74654465 
 5568      6C617900 
 5569              	.LASF209:
 5570 030e 4449565F 		.ascii	"DIV_16_5_CTL\000"
 5570      31365F35 
 5570      5F43544C 
 5570      00
 5571              	.LASF407:
 5572 031b 6368616E 		.ascii	"channelBase\000"
 5572      6E656C42 
 5572      61736500 
 5573              	.LASF213:
 5574 0327 5050555F 		.ascii	"PPU_PR\000"
 5574      505200
 5575              	.LASF433:
 5576 032e 4144435F 		.ascii	"ADC_INVERTING_AMP_intSarClock_Enable\000"
 5576      494E5645 
 5576      5254494E 
 5576      475F414D 
 5576      505F696E 
 5577              	.LASF287:
 5578 0353 63707573 		.ascii	"cpussFmIrq\000"
 5578      73466D49 
 5578      727100
 5579              	.LASF30:
 5580 035e 73727373 		.ascii	"srss_interrupt_mcwdt_1_IRQn\000"
 5580      5F696E74 
 5580      65727275 
 5580      70745F6D 
 5580      63776474 
 5581              	.LASF397:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 241


 5582 037a 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 5582      5953434C 
 5582      4B5F5355 
 5582      43434553 
 5582      5300
 5583              	.LASF409:
 5584 038c 6877436F 		.ascii	"hwConfigStc\000"
 5584      6E666967 
 5584      53746300 
 5585              	.LASF416:
 5586 0398 5F5F4953 		.ascii	"__ISB\000"
 5586      4200
 5587              	.LASF12:
 5588 039e 696F7373 		.ascii	"ioss_interrupts_gpio_2_IRQn\000"
 5588      5F696E74 
 5588      65727275 
 5588      7074735F 
 5588      6770696F 
 5589              	.LASF288:
 5590 03ba 63707573 		.ascii	"cpussNotConnectedIrq\000"
 5590      734E6F74 
 5590      436F6E6E 
 5590      65637465 
 5590      64497271 
 5591              	.LASF73:
 5592 03cf 63707573 		.ascii	"cpuss_interrupts_dw0_13_IRQn\000"
 5592      735F696E 
 5592      74657272 
 5592      75707473 
 5592      5F647730 
 5593              	.LASF467:
 5594 03ec 4144435F 		.ascii	"ADC_INVERTING_AMP_IRQ_cfg\000"
 5594      494E5645 
 5594      5254494E 
 5594      475F414D 
 5594      505F4952 
 5595              	.LASF443:
 5596 0406 4144435F 		.ascii	"ADC_INVERTING_AMP_SelectConfig\000"
 5596      494E5645 
 5596      5254494E 
 5596      475F414D 
 5596      505F5365 
 5597              	.LASF131:
 5598 0425 74637077 		.ascii	"tcpwm_1_interrupts_23_IRQn\000"
 5598      6D5F315F 
 5598      696E7465 
 5598      72727570 
 5598      74735F32 
 5599              	.LASF235:
 5600 0440 53415455 		.ascii	"SATURATE_INTR\000"
 5600      52415445 
 5600      5F494E54 
 5600      5200
 5601              	.LASF129:
 5602 044e 74637077 		.ascii	"tcpwm_1_interrupts_21_IRQn\000"
 5602      6D5F315F 
 5602      696E7465 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 242


 5602      72727570 
 5602      74735F32 
 5603              	.LASF27:
 5604 0469 6C70636F 		.ascii	"lpcomp_interrupt_IRQn\000"
 5604      6D705F69 
 5604      6E746572 
 5604      72757074 
 5604      5F495251 
 5605              	.LASF218:
 5606 047f 53414D50 		.ascii	"SAMPLE_TIME01\000"
 5606      4C455F54 
 5606      494D4530 
 5606      3100
 5607              	.LASF107:
 5608 048d 74637077 		.ascii	"tcpwm_0_interrupts_7_IRQn\000"
 5608      6D5F305F 
 5608      696E7465 
 5608      72727570 
 5608      74735F37 
 5609              	.LASF246:
 5610 04a7 494E4A5F 		.ascii	"INJ_RESULT\000"
 5610      52455355 
 5610      4C5400
 5611              	.LASF322:
 5612 04b2 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 5612      44697643 
 5612      6D645061 
 5612      44697653 
 5612      656C506F 
 5613              	.LASF232:
 5614 04c8 494E5452 		.ascii	"INTR_SET\000"
 5614      5F534554 
 5614      00
 5615              	.LASF299:
 5616 04d1 63727970 		.ascii	"cryptoMemSize\000"
 5616      746F4D65 
 5616      6D53697A 
 5616      6500
 5617              	.LASF448:
 5618 04df 6D6F6465 		.ascii	"mode\000"
 5618      00
 5619              	.LASF389:
 5620 04e4 73617449 		.ascii	"satIntrMask\000"
 5620      6E74724D 
 5620      61736B00 
 5621              	.LASF363:
 5622 04f0 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 5622      6E5F7361 
 5622      725F7374 
 5622      6172745F 
 5622      636F6E76 
 5623              	.LASF319:
 5624 050e 70657269 		.ascii	"periTrGrSize\000"
 5624      54724772 
 5624      53697A65 
 5624      00
 5625              	.LASF76:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 243


 5626 051b 63707573 		.ascii	"cpuss_interrupts_dw1_0_IRQn\000"
 5626      735F696E 
 5626      74657272 
 5626      75707473 
 5626      5F647731 
 5627              	.LASF146:
 5628 0537 7564625F 		.ascii	"udb_interrupts_14_IRQn\000"
 5628      696E7465 
 5628      72727570 
 5628      74735F31 
 5628      345F4952 
 5629              	.LASF102:
 5630 054e 74637077 		.ascii	"tcpwm_0_interrupts_2_IRQn\000"
 5630      6D5F305F 
 5630      696E7465 
 5630      72727570 
 5630      74735F32 
 5631              	.LASF450:
 5632 0568 4144435F 		.ascii	"ADC_INVERTING_AMP_IRQ_Disable\000"
 5632      494E5645 
 5632      5254494E 
 5632      475F414D 
 5632      505F4952 
 5633              	.LASF281:
 5634 0586 70726F74 		.ascii	"protVersion\000"
 5634      56657273 
 5634      696F6E00 
 5635              	.LASF447:
 5636 0592 4144435F 		.ascii	"ADC_INVERTING_AMP_SetConvertMode\000"
 5636      494E5645 
 5636      5254494E 
 5636      475F414D 
 5636      505F5365 
 5637              	.LASF371:
 5638 05b3 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 5638      41525F52 
 5638      414E4745 
 5638      5F434F4E 
 5638      445F4245 
 5639              	.LASF193:
 5640 05cb 52455345 		.ascii	"RESERVED\000"
 5640      52564544 
 5640      00
 5641              	.LASF45:
 5642 05d4 63707573 		.ascii	"cpuss_interrupts_ipc_10_IRQn\000"
 5642      735F696E 
 5642      74657272 
 5642      75707473 
 5642      5F697063 
 5643              	.LASF174:
 5644 05f1 696E7431 		.ascii	"int16_t\000"
 5644      365F7400 
 5645              	.LASF261:
 5646 05f9 5341525F 		.ascii	"SAR_Type\000"
 5646      54797065 
 5646      00
 5647              	.LASF463:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 244


 5648 0602 4144435F 		.ascii	"ADC_INVERTING_AMP_initVar\000"
 5648      494E5645 
 5648      5254494E 
 5648      475F414D 
 5648      505F696E 
 5649              	.LASF321:
 5650 061c 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 5650      44697643 
 5650      6D645479 
 5650      70655365 
 5650      6C506F73 
 5651              	.LASF338:
 5652 0631 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 5652      73547269 
 5652      6D52616D 
 5652      43746C4F 
 5652      66667365 
 5653              	.LASF139:
 5654 0647 7564625F 		.ascii	"udb_interrupts_7_IRQn\000"
 5654      696E7465 
 5654      72727570 
 5654      74735F37 
 5654      5F495251 
 5655              	.LASF28:
 5656 065d 7363625F 		.ascii	"scb_8_interrupt_IRQn\000"
 5656      385F696E 
 5656      74657272 
 5656      7570745F 
 5656      4952516E 
 5657              	.LASF3:
 5658 0672 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 5658      72794D61 
 5658      6E616765 
 5658      6D656E74 
 5658      5F495251 
 5659              	.LASF439:
 5660 0688 4144435F 		.ascii	"ADC_INVERTING_AMP_StartEx\000"
 5660      494E5645 
 5660      5254494E 
 5660      475F414D 
 5660      505F5374 
 5661              	.LASF125:
 5662 06a2 74637077 		.ascii	"tcpwm_1_interrupts_17_IRQn\000"
 5662      6D5F315F 
 5662      696E7465 
 5662      72727570 
 5662      74735F31 
 5663              	.LASF134:
 5664 06bd 7564625F 		.ascii	"udb_interrupts_2_IRQn\000"
 5664      696E7465 
 5664      72727570 
 5664      74735F32 
 5664      5F495251 
 5665              	.LASF204:
 5666 06d3 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 5666      5F505055 
 5666      5F50525F 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 245


 5666      56315F54 
 5666      79706500 
 5667              	.LASF177:
 5668 06e7 75696E74 		.ascii	"uint32_t\000"
 5668      33325F74 
 5668      00
 5669              	.LASF440:
 5670 06f0 4144435F 		.ascii	"ADC_INVERTING_AMP_InitConfig\000"
 5670      494E5645 
 5670      5254494E 
 5670      475F414D 
 5670      505F496E 
 5671              	.LASF120:
 5672 070d 74637077 		.ascii	"tcpwm_1_interrupts_12_IRQn\000"
 5672      6D5F315F 
 5672      696E7465 
 5672      72727570 
 5672      74735F31 
 5673              	.LASF17:
 5674 0728 696F7373 		.ascii	"ioss_interrupts_gpio_7_IRQn\000"
 5674      5F696E74 
 5674      65727275 
 5674      7074735F 
 5674      6770696F 
 5675              	.LASF23:
 5676 0744 696F7373 		.ascii	"ioss_interrupts_gpio_13_IRQn\000"
 5676      5F696E74 
 5676      65727275 
 5676      7074735F 
 5676      6770696F 
 5677              	.LASF147:
 5678 0761 7564625F 		.ascii	"udb_interrupts_15_IRQn\000"
 5678      696E7465 
 5678      72727570 
 5678      74735F31 
 5678      355F4952 
 5679              	.LASF331:
 5680 0778 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 5680      50727443 
 5680      66674F75 
 5680      744F6666 
 5680      73657400 
 5681              	.LASF178:
 5682 078c 49534552 		.ascii	"ISER\000"
 5682      00
 5683              	.LASF97:
 5684 0791 63707573 		.ascii	"cpuss_interrupts_cm0_cti_1_IRQn\000"
 5684      735F696E 
 5684      74657272 
 5684      75707473 
 5684      5F636D30 
 5685              	.LASF353:
 5686 07b1 666C6F61 		.ascii	"float\000"
 5686      7400
 5687              	.LASF274:
 5688 07b7 63727970 		.ascii	"cryptoVersion\000"
 5688      746F5665 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 246


 5688      7273696F 
 5688      6E00
 5689              	.LASF303:
 5690 07c5 666C6173 		.ascii	"flashProgramDelay\000"
 5690      6850726F 
 5690      6772616D 
 5690      44656C61 
 5690      7900
 5691              	.LASF55:
 5692 07d7 7363625F 		.ascii	"scb_4_interrupt_IRQn\000"
 5692      345F696E 
 5692      74657272 
 5692      7570745F 
 5692      4952516E 
 5693              	.LASF408:
 5694 07ec 6E756D43 		.ascii	"numChannels\000"
 5694      68616E6E 
 5694      656C7300 
 5695              	.LASF194:
 5696 07f8 534C5F43 		.ascii	"SL_CTL\000"
 5696      544C00
 5697              	.LASF264:
 5698 07ff 666C6173 		.ascii	"flashcBase\000"
 5698      68634261 
 5698      736500
 5699              	.LASF81:
 5700 080a 63707573 		.ascii	"cpuss_interrupts_dw1_5_IRQn\000"
 5700      735F696E 
 5700      74657272 
 5700      75707473 
 5700      5F647731 
 5701              	.LASF330:
 5702 0826 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 5702      50727443 
 5702      6667496E 
 5702      4F666673 
 5702      657400
 5703              	.LASF87:
 5704 0839 63707573 		.ascii	"cpuss_interrupts_dw1_11_IRQn\000"
 5704      735F696E 
 5704      74657272 
 5704      75707473 
 5704      5F647731 
 5705              	.LASF458:
 5706 0856 72657375 		.ascii	"result\000"
 5706      6C7400
 5707              	.LASF36:
 5708 085d 63707573 		.ascii	"cpuss_interrupts_ipc_1_IRQn\000"
 5708      735F696E 
 5708      74657272 
 5708      75707473 
 5708      5F697063 
 5709              	.LASF187:
 5710 0879 52455345 		.ascii	"RESERVED4\000"
 5710      52564544 
 5710      3400
 5711              	.LASF171:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 247


 5712 0883 6C6F6E67 		.ascii	"long long unsigned int\000"
 5712      206C6F6E 
 5712      6720756E 
 5712      7369676E 
 5712      65642069 
 5713              	.LASF327:
 5714 089a 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 5714      44697632 
 5714      345F3543 
 5714      746C4F66 
 5714      66736574 
 5715              	.LASF332:
 5716 08af 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5716      50727443 
 5716      66675369 
 5716      6F4F6666 
 5716      73657400 
 5717              	.LASF247:
 5718 08c3 52455345 		.ascii	"RESERVED7\000"
 5718      52564544 
 5718      3700
 5719              	.LASF48:
 5720 08cd 63707573 		.ascii	"cpuss_interrupts_ipc_13_IRQn\000"
 5720      735F696E 
 5720      74657272 
 5720      75707473 
 5720      5F697063 
 5721              	.LASF286:
 5722 08ea 63707573 		.ascii	"cpussIpc0Irq\000"
 5722      73497063 
 5722      30497271 
 5722      00
 5723              	.LASF31:
 5724 08f7 73727373 		.ascii	"srss_interrupt_backup_IRQn\000"
 5724      5F696E74 
 5724      65727275 
 5724      70745F62 
 5724      61636B75 
 5725              	.LASF22:
 5726 0912 696F7373 		.ascii	"ioss_interrupts_gpio_12_IRQn\000"
 5726      5F696E74 
 5726      65727275 
 5726      7074735F 
 5726      6770696F 
 5727              	.LASF117:
 5728 092f 74637077 		.ascii	"tcpwm_1_interrupts_9_IRQn\000"
 5728      6D5F315F 
 5728      696E7465 
 5728      72727570 
 5728      74735F39 
 5729              	.LASF219:
 5730 0949 53414D50 		.ascii	"SAMPLE_TIME23\000"
 5730      4C455F54 
 5730      494D4532 
 5730      3300
 5731              	.LASF384:
 5732 0957 72616E67 		.ascii	"rangeThres\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 248


 5732      65546872 
 5732      657300
 5733              	.LASF164:
 5734 0962 5F5F7569 		.ascii	"__uint16_t\000"
 5734      6E743136 
 5734      5F7400
 5735              	.LASF6:
 5736 096d 53564361 		.ascii	"SVCall_IRQn\000"
 5736      6C6C5F49 
 5736      52516E00 
 5737              	.LASF181:
 5738 0979 52534552 		.ascii	"RSERVED1\000"
 5738      56454431 
 5738      00
 5739              	.LASF372:
 5740 0982 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 5740      41525F52 
 5740      414E4745 
 5740      5F434F4E 
 5740      445F494E 
 5741              	.LASF112:
 5742 099b 74637077 		.ascii	"tcpwm_1_interrupts_4_IRQn\000"
 5742      6D5F315F 
 5742      696E7465 
 5742      72727570 
 5742      74735F34 
 5743              	.LASF396:
 5744 09b5 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5744      74635F73 
 5744      61725F63 
 5744      6F6E6669 
 5744      675F7400 
 5745              	.LASF59:
 5746 09c9 6373645F 		.ascii	"csd_interrupt_IRQn\000"
 5746      696E7465 
 5746      72727570 
 5746      745F4952 
 5746      516E00
 5747              	.LASF151:
 5748 09dc 70726F66 		.ascii	"profile_interrupt_IRQn\000"
 5748      696C655F 
 5748      696E7465 
 5748      72727570 
 5748      745F4952 
 5749              	.LASF454:
 5750 09f3 4144435F 		.ascii	"ADC_INVERTING_AMP_SetChanMask\000"
 5750      494E5645 
 5750      5254494E 
 5750      475F414D 
 5750      505F5365 
 5751              	.LASF21:
 5752 0a11 696F7373 		.ascii	"ioss_interrupts_gpio_11_IRQn\000"
 5752      5F696E74 
 5752      65727275 
 5752      7074735F 
 5752      6770696F 
 5753              	.LASF43:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 249


 5754 0a2e 63707573 		.ascii	"cpuss_interrupts_ipc_8_IRQn\000"
 5754      735F696E 
 5754      74657272 
 5754      75707473 
 5754      5F697063 
 5755              	.LASF244:
 5756 0a4a 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 5756      4348414E 
 5756      5F434F4E 
 5756      46494700 
 5757              	.LASF5:
 5758 0a5a 55736167 		.ascii	"UsageFault_IRQn\000"
 5758      65466175 
 5758      6C745F49 
 5758      52516E00 
 5759              	.LASF92:
 5760 0a6a 63707573 		.ascii	"cpuss_interrupts_fault_0_IRQn\000"
 5760      735F696E 
 5760      74657272 
 5760      75707473 
 5760      5F666175 
 5761              	.LASF96:
 5762 0a88 63707573 		.ascii	"cpuss_interrupts_cm0_cti_0_IRQn\000"
 5762      735F696E 
 5762      74657272 
 5762      75707473 
 5762      5F636D30 
 5763              	.LASF308:
 5764 0aa8 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 5764      6843746C 
 5764      4D61696E 
 5764      57733346 
 5764      72657100 
 5765              	.LASF434:
 5766 0abc 4144435F 		.ascii	"ADC_INVERTING_AMP_intSarClock_Disable\000"
 5766      494E5645 
 5766      5254494E 
 5766      475F414D 
 5766      505F696E 
 5767              	.LASF290:
 5768 0ae2 73727373 		.ascii	"srssNumPll\000"
 5768      4E756D50 
 5768      6C6C00
 5769              	.LASF364:
 5770 0aed 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 5770      41525F52 
 5770      45545552 
 5770      4E5F5354 
 5770      41545553 
 5771              	.LASF211:
 5772 0b02 54525F43 		.ascii	"TR_CMD\000"
 5772      4D4400
 5773              	.LASF143:
 5774 0b09 7564625F 		.ascii	"udb_interrupts_11_IRQn\000"
 5774      696E7465 
 5774      72727570 
 5774      74735F31 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 250


 5774      315F4952 
 5775              	.LASF37:
 5776 0b20 63707573 		.ascii	"cpuss_interrupts_ipc_2_IRQn\000"
 5776      735F696E 
 5776      74657272 
 5776      75707473 
 5776      5F697063 
 5777              	.LASF137:
 5778 0b3c 7564625F 		.ascii	"udb_interrupts_5_IRQn\000"
 5778      696E7465 
 5778      72727570 
 5778      74735F35 
 5778      5F495251 
 5779              	.LASF401:
 5780 0b52 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 5780      6E5F7379 
 5780      73636C6B 
 5780      5F737461 
 5780      7475735F 
 5781              	.LASF464:
 5782 0b68 4144435F 		.ascii	"ADC_INVERTING_AMP_selected\000"
 5782      494E5645 
 5782      5254494E 
 5782      475F414D 
 5782      505F7365 
 5783              	.LASF104:
 5784 0b83 74637077 		.ascii	"tcpwm_0_interrupts_4_IRQn\000"
 5784      6D5F305F 
 5784      696E7465 
 5784      72727570 
 5784      74735F34 
 5785              	.LASF301:
 5786 0b9d 666C6173 		.ascii	"flashPipeRequired\000"
 5786      68506970 
 5786      65526571 
 5786      75697265 
 5786      6400
 5787              	.LASF241:
 5788 0baf 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 5788      455F494E 
 5788      54525F4D 
 5788      41534B00 
 5789              	.LASF455:
 5790 0bbf 6368616E 		.ascii	"chanCount\000"
 5790      436F756E 
 5790      7400
 5791              	.LASF460:
 5792 0bc9 636F6E66 		.ascii	"configNum\000"
 5792      69674E75 
 5792      6D00
 5793              	.LASF395:
 5794 0bd3 5F426F6F 		.ascii	"_Bool\000"
 5794      6C00
 5795              	.LASF221:
 5796 0bd9 52414E47 		.ascii	"RANGE_COND\000"
 5796      455F434F 
 5796      4E4400
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 251


 5797              	.LASF305:
 5798 0be4 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 5798      6843746C 
 5798      4D61696E 
 5798      57733046 
 5798      72657100 
 5799              	.LASF210:
 5800 0bf8 4449565F 		.ascii	"DIV_24_5_CTL\000"
 5800      32345F35 
 5800      5F43544C 
 5800      00
 5801              	.LASF315:
 5802 0c05 64775374 		.ascii	"dwStatusChIdxMsk\000"
 5802      61747573 
 5802      43684964 
 5802      784D736B 
 5802      00
 5803              	.LASF149:
 5804 0c16 61756469 		.ascii	"audioss_interrupt_i2s_IRQn\000"
 5804      6F73735F 
 5804      696E7465 
 5804      72727570 
 5804      745F6932 
 5805              	.LASF377:
 5806 0c31 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 5806      41525F49 
 5806      4E54525F 
 5806      454F535F 
 5806      4D41534B 
 5807              	.LASF269:
 5808 0c46 6770696F 		.ascii	"gpioBase\000"
 5808      42617365 
 5808      00
 5809              	.LASF156:
 5810 0c4f 70617373 		.ascii	"pass_interrupt_dacs_IRQn\000"
 5810      5F696E74 
 5810      65727275 
 5810      70745F64 
 5810      6163735F 
 5811              	.LASF109:
 5812 0c68 74637077 		.ascii	"tcpwm_1_interrupts_1_IRQn\000"
 5812      6D5F315F 
 5812      696E7465 
 5812      72727570 
 5812      74735F31 
 5813              	.LASF145:
 5814 0c82 7564625F 		.ascii	"udb_interrupts_13_IRQn\000"
 5814      696E7465 
 5814      72727570 
 5814      74735F31 
 5814      335F4952 
 5815              	.LASF136:
 5816 0c99 7564625F 		.ascii	"udb_interrupts_4_IRQn\000"
 5816      696E7465 
 5816      72727570 
 5816      74735F34 
 5816      5F495251 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 252


 5817              	.LASF437:
 5818 0caf 4144435F 		.ascii	"ADC_INVERTING_AMP_Stop\000"
 5818      494E5645 
 5818      5254494E 
 5818      475F414D 
 5818      505F5374 
 5819              	.LASF208:
 5820 0cc6 4449565F 		.ascii	"DIV_16_CTL\000"
 5820      31365F43 
 5820      544C00
 5821              	.LASF449:
 5822 0cd1 4144435F 		.ascii	"ADC_INVERTING_AMP_IRQ_Enable\000"
 5822      494E5645 
 5822      5254494E 
 5822      475F414D 
 5822      505F4952 
 5823              	.LASF150:
 5824 0cee 61756469 		.ascii	"audioss_interrupt_pdm_IRQn\000"
 5824      6F73735F 
 5824      696E7465 
 5824      72727570 
 5824      745F7064 
 5825              	.LASF424:
 5826 0d09 656E6162 		.ascii	"enableMask\000"
 5826      6C654D61 
 5826      736B00
 5827              	.LASF68:
 5828 0d14 63707573 		.ascii	"cpuss_interrupts_dw0_8_IRQn\000"
 5828      735F696E 
 5828      74657272 
 5828      75707473 
 5828      5F647730 
 5829              	.LASF122:
 5830 0d30 74637077 		.ascii	"tcpwm_1_interrupts_14_IRQn\000"
 5830      6D5F315F 
 5830      696E7465 
 5830      72727570 
 5830      74735F31 
 5831              	.LASF19:
 5832 0d4b 696F7373 		.ascii	"ioss_interrupts_gpio_9_IRQn\000"
 5832      5F696E74 
 5832      65727275 
 5832      7074735F 
 5832      6770696F 
 5833              	.LASF340:
 5834 0d67 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 5834      73537973 
 5834      5469636B 
 5834      43746C4F 
 5834      66667365 
 5835              	.LASF436:
 5836 0d7d 4144435F 		.ascii	"ADC_INVERTING_AMP_Enable\000"
 5836      494E5645 
 5836      5254494E 
 5836      475F414D 
 5836      505F456E 
 5837              	.LASF314:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 253


 5838 0d96 64775374 		.ascii	"dwStatusChIdxPos\000"
 5838      61747573 
 5838      43684964 
 5838      78506F73 
 5838      00
 5839              	.LASF260:
 5840 0da7 5341525F 		.ascii	"SAR_V1_Type\000"
 5840      56315F54 
 5840      79706500 
 5841              	.LASF223:
 5842 0db3 53544152 		.ascii	"START_CTRL\000"
 5842      545F4354 
 5842      524C00
 5843              	.LASF66:
 5844 0dbe 63707573 		.ascii	"cpuss_interrupts_dw0_6_IRQn\000"
 5844      735F696E 
 5844      74657272 
 5844      75707473 
 5844      5F647730 
 5845              	.LASF394:
 5846 0dda 76726566 		.ascii	"vrefMvValue\000"
 5846      4D765661 
 5846      6C756500 
 5847              	.LASF272:
 5848 0de6 63727970 		.ascii	"cryptoBase\000"
 5848      746F4261 
 5848      736500
 5849              	.LASF20:
 5850 0df1 696F7373 		.ascii	"ioss_interrupts_gpio_10_IRQn\000"
 5850      5F696E74 
 5850      65727275 
 5850      7074735F 
 5850      6770696F 
 5851              	.LASF75:
 5852 0e0e 63707573 		.ascii	"cpuss_interrupts_dw0_15_IRQn\000"
 5852      735F696E 
 5852      74657272 
 5852      75707473 
 5852      5F647730 
 5853              	.LASF32:
 5854 0e2b 73727373 		.ascii	"srss_interrupt_IRQn\000"
 5854      5F696E74 
 5854      65727275 
 5854      70745F49 
 5854      52516E00 
 5855              	.LASF285:
 5856 0e3f 63707573 		.ascii	"cpussFlashPaSize\000"
 5856      73466C61 
 5856      73685061 
 5856      53697A65 
 5856      00
 5857              	.LASF198:
 5858 0e50 54525F4F 		.ascii	"TR_OUT_CTL\000"
 5858      55545F43 
 5858      544C00
 5859              	.LASF236:
 5860 0e5b 53415455 		.ascii	"SATURATE_INTR_SET\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 254


 5860      52415445 
 5860      5F494E54 
 5860      525F5345 
 5860      5400
 5861              	.LASF212:
 5862 0e6d 54525F47 		.ascii	"TR_GR\000"
 5862      5200
 5863              	.LASF89:
 5864 0e73 63707573 		.ascii	"cpuss_interrupts_dw1_13_IRQn\000"
 5864      735F696E 
 5864      74657272 
 5864      75707473 
 5864      5F647731 
 5865              	.LASF61:
 5866 0e90 63707573 		.ascii	"cpuss_interrupts_dw0_1_IRQn\000"
 5866      735F696E 
 5866      74657272 
 5866      75707473 
 5866      5F647730 
 5867              	.LASF85:
 5868 0eac 63707573 		.ascii	"cpuss_interrupts_dw1_9_IRQn\000"
 5868      735F696E 
 5868      74657272 
 5868      75707473 
 5868      5F647731 
 5869              	.LASF386:
 5870 0ec8 6368616E 		.ascii	"chanEn\000"
 5870      456E00
 5871              	.LASF326:
 5872 0ecf 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 5872      44697631 
 5872      365F3543 
 5872      746C4F66 
 5872      66736574 
 5873              	.LASF157:
 5874 0ee4 756E636F 		.ascii	"unconnected_IRQn\000"
 5874      6E6E6563 
 5874      7465645F 
 5874      4952516E 
 5874      00
 5875              	.LASF426:
 5876 0ef5 64697669 		.ascii	"dividerType\000"
 5876      64657254 
 5876      79706500 
 5877              	.LASF78:
 5878 0f01 63707573 		.ascii	"cpuss_interrupts_dw1_2_IRQn\000"
 5878      735F696E 
 5878      74657272 
 5878      75707473 
 5878      5F647731 
 5879              	.LASF297:
 5880 0f1d 73797350 		.ascii	"sysPmSimoPresent\000"
 5880      6D53696D 
 5880      6F507265 
 5880      73656E74 
 5880      00
 5881              	.LASF155:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 255


 5882 0f2e 7573625F 		.ascii	"usb_interrupt_lo_IRQn\000"
 5882      696E7465 
 5882      72727570 
 5882      745F6C6F 
 5882      5F495251 
 5883              	.LASF230:
 5884 0f44 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 5884      5F524553 
 5884      554C545F 
 5884      4E455756 
 5884      414C5545 
 5885              	.LASF95:
 5886 0f59 63707573 		.ascii	"cpuss_interrupt_fm_IRQn\000"
 5886      735F696E 
 5886      74657272 
 5886      7570745F 
 5886      666D5F49 
 5887              	.LASF457:
 5888 0f71 656E644F 		.ascii	"endOfConversion\000"
 5888      66436F6E 
 5888      76657273 
 5888      696F6E00 
 5889              	.LASF451:
 5890 0f81 4144435F 		.ascii	"ADC_INVERTING_AMP_SetEosMask\000"
 5890      494E5645 
 5890      5254494E 
 5890      475F414D 
 5890      505F5365 
 5891              	.LASF141:
 5892 0f9e 7564625F 		.ascii	"udb_interrupts_9_IRQn\000"
 5892      696E7465 
 5892      72727570 
 5892      74735F39 
 5892      5F495251 
 5893              	.LASF249:
 5894 0fb4 4156475F 		.ascii	"AVG_STAT\000"
 5894      53544154 
 5894      00
 5895              	.LASF428:
 5896 0fbd 64697669 		.ascii	"dividerValue\000"
 5896      64657256 
 5896      616C7565 
 5896      00
 5897              	.LASF365:
 5898 0fca 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 5898      41525F57 
 5898      4149545F 
 5898      464F525F 
 5898      52455355 
 5899              	.LASF173:
 5900 0fe1 75696E74 		.ascii	"uint8_t\000"
 5900      385F7400 
 5901              	.LASF33:
 5902 0fe9 70617373 		.ascii	"pass_interrupt_ctbs_IRQn\000"
 5902      5F696E74 
 5902      65727275 
 5902      70745F63 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 256


 5902      7462735F 
 5903              	.LASF160:
 5904 1002 4952516E 		.ascii	"IRQn_Type\000"
 5904      5F547970 
 5904      6500
 5905              	.LASF360:
 5906 100c 63795F65 		.ascii	"cy_en_sar_status_t\000"
 5906      6E5F7361 
 5906      725F7374 
 5906      61747573 
 5906      5F7400
 5907              	.LASF127:
 5908 101f 74637077 		.ascii	"tcpwm_1_interrupts_19_IRQn\000"
 5908      6D5F315F 
 5908      696E7465 
 5908      72727570 
 5908      74735F31 
 5909              	.LASF470:
 5910 103a 443A5C56 		.ascii	"D:\\Vlad\\[2]_PSOC_Porting\\PSOC_Project\\PSOC_PPG."
 5910      6C61645C 
 5910      5B325D5F 
 5910      50534F43 
 5910      5F506F72 
 5911 1069 63796473 		.ascii	"cydsn\000"
 5911      6E00
 5912              	.LASF413:
 5913 106f 696E7472 		.ascii	"intrSrc\000"
 5913      53726300 
 5914              	.LASF296:
 5915 1077 75646250 		.ascii	"udbPresent\000"
 5915      72657365 
 5915      6E7400
 5916              	.LASF320:
 5917 1082 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 5917      44697643 
 5917      6D644469 
 5917      7653656C 
 5917      4D736B00 
 5918              	.LASF445:
 5919 1096 4144435F 		.ascii	"ADC_INVERTING_AMP_Start\000"
 5919      494E5645 
 5919      5254494E 
 5919      475F414D 
 5919      505F5374 
 5920              	.LASF29:
 5921 10ae 73727373 		.ascii	"srss_interrupt_mcwdt_0_IRQn\000"
 5921      5F696E74 
 5921      65727275 
 5921      70745F6D 
 5921      63776474 
 5922              	.LASF356:
 5923 10ca 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 5923      41525F53 
 5923      55434345 
 5923      535300
 5924              	.LASF158:
 5925 10d9 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 257


 5925      7420696E 
 5925      7400
 5926              	.LASF162:
 5927 10e3 756E7369 		.ascii	"unsigned char\000"
 5927      676E6564 
 5927      20636861 
 5927      7200
 5928              	.LASF328:
 5929 10f1 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5929      50727449 
 5929      6E747243 
 5929      66674F66 
 5929      66736574 
 5930              	.LASF392:
 5931 1106 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5931      77697463 
 5931      68537143 
 5931      74726C00 
 5932              	.LASF40:
 5933 1116 63707573 		.ascii	"cpuss_interrupts_ipc_5_IRQn\000"
 5933      735F696E 
 5933      74657272 
 5933      75707473 
 5933      5F697063 
 5934              	.LASF385:
 5935 1132 72616E67 		.ascii	"rangeCond\000"
 5935      65436F6E 
 5935      6400
 5936              	.LASF344:
 5937 113c 63707573 		.ascii	"cpussRam0Ctl0\000"
 5937      7352616D 
 5937      3043746C 
 5937      3000
 5938              	.LASF170:
 5939 114a 6C6F6E67 		.ascii	"long long int\000"
 5939      206C6F6E 
 5939      6720696E 
 5939      7400
 5940              	.LASF271:
 5941 1158 69706342 		.ascii	"ipcBase\000"
 5941      61736500 
 5942              	.LASF312:
 5943 1160 64774368 		.ascii	"dwChCtlPrioPos\000"
 5943      43746C50 
 5943      72696F50 
 5943      6F7300
 5944              	.LASF465:
 5945 116f 4144435F 		.ascii	"ADC_INVERTING_AMP_currentConfig\000"
 5945      494E5645 
 5945      5254494E 
 5945      475F414D 
 5945      505F6375 
 5946              	.LASF378:
 5947 118f 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 5947      41525F49 
 5947      4E54525F 
 5947      4F564552 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 258


 5947      464C4F57 
 5948              	.LASF35:
 5949 11a9 63707573 		.ascii	"cpuss_interrupts_ipc_0_IRQn\000"
 5949      735F696E 
 5949      74657272 
 5949      75707473 
 5949      5F697063 
 5950              	.LASF423:
 5951 11c5 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 5951      41525F53 
 5951      65744368 
 5951      616E4D61 
 5951      736B00
 5952              	.LASF379:
 5953 11d8 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 5953      41525F49 
 5953      4E54525F 
 5953      46575F43 
 5953      4F4C4C49 
 5954              	.LASF101:
 5955 11f6 74637077 		.ascii	"tcpwm_0_interrupts_1_IRQn\000"
 5955      6D5F305F 
 5955      696E7465 
 5955      72727570 
 5955      74735F31 
 5956              	.LASF154:
 5957 1210 7573625F 		.ascii	"usb_interrupt_med_IRQn\000"
 5957      696E7465 
 5957      72727570 
 5957      745F6D65 
 5957      645F4952 
 5958              	.LASF56:
 5959 1227 7363625F 		.ascii	"scb_5_interrupt_IRQn\000"
 5959      355F696E 
 5959      74657272 
 5959      7570745F 
 5959      4952516E 
 5960              	.LASF214:
 5961 123c 5050555F 		.ascii	"PPU_GR\000"
 5961      475200
 5962              	.LASF429:
 5963 1243 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 5963      7973436C 
 5963      6B5F5065 
 5963      72697068 
 5963      53657444 
 5964              	.LASF50:
 5965 125e 63707573 		.ascii	"cpuss_interrupts_ipc_15_IRQn\000"
 5965      735F696E 
 5965      74657272 
 5965      75707473 
 5965      5F697063 
 5966              	.LASF163:
 5967 127b 5F5F696E 		.ascii	"__int16_t\000"
 5967      7431365F 
 5967      7400
 5968              	.LASF105:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 259


 5969 1285 74637077 		.ascii	"tcpwm_0_interrupts_5_IRQn\000"
 5969      6D5F305F 
 5969      696E7465 
 5969      72727570 
 5969      74735F35 
 5970              	.LASF292:
 5971 129f 70657269 		.ascii	"periClockNr\000"
 5971      436C6F63 
 5971      6B4E7200 
 5972              	.LASF307:
 5973 12ab 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5973      6843746C 
 5973      4D61696E 
 5973      57733246 
 5973      72657100 
 5974              	.LASF268:
 5975 12bf 6873696F 		.ascii	"hsiomBase\000"
 5975      6D426173 
 5975      6500
 5976              	.LASF357:
 5977 12c9 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 5977      41525F42 
 5977      41445F50 
 5977      4152414D 
 5977      00
 5978              	.LASF226:
 5979 12da 4348414E 		.ascii	"CHAN_RESULT\000"
 5979      5F524553 
 5979      554C5400 
 5980              	.LASF4:
 5981 12e6 42757346 		.ascii	"BusFault_IRQn\000"
 5981      61756C74 
 5981      5F495251 
 5981      6E00
 5982              	.LASF10:
 5983 12f4 696F7373 		.ascii	"ioss_interrupts_gpio_0_IRQn\000"
 5983      5F696E74 
 5983      65727275 
 5983      7074735F 
 5983      6770696F 
 5984              	.LASF334:
 5985 1310 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5985      73436D34 
 5985      436C6F63 
 5985      6B43746C 
 5985      4F666673 
 5986              	.LASF345:
 5987 1327 63707573 		.ascii	"cpussRam1Ctl0\000"
 5987      7352616D 
 5987      3143746C 
 5987      3000
 5988              	.LASF318:
 5989 1335 70657269 		.ascii	"periTrGrOffset\000"
 5989      54724772 
 5989      4F666673 
 5989      657400
 5990              	.LASF231:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 260


 5991 1344 494E5452 		.ascii	"INTR\000"
 5991      00
 5992              	.LASF239:
 5993 1349 52414E47 		.ascii	"RANGE_INTR\000"
 5993      455F494E 
 5993      545200
 5994              	.LASF133:
 5995 1354 7564625F 		.ascii	"udb_interrupts_1_IRQn\000"
 5995      696E7465 
 5995      72727570 
 5995      74735F31 
 5995      5F495251 
 5996              	.LASF284:
 5997 136a 63707573 		.ascii	"cpussDwChNr\000"
 5997      73447743 
 5997      684E7200 
 5998              	.LASF233:
 5999 1376 494E5452 		.ascii	"INTR_MASK\000"
 5999      5F4D4153 
 5999      4B00
 6000              	.LASF8:
 6001 1380 50656E64 		.ascii	"PendSV_IRQn\000"
 6001      53565F49 
 6001      52516E00 
 6002              	.LASF153:
 6003 138c 7573625F 		.ascii	"usb_interrupt_hi_IRQn\000"
 6003      696E7465 
 6003      72727570 
 6003      745F6869 
 6003      5F495251 
 6004              	.LASF387:
 6005 13a2 6368616E 		.ascii	"chanConfig\000"
 6005      436F6E66 
 6005      696700
 6006              	.LASF438:
 6007 13ad 75736572 		.ascii	"userIsr\000"
 6007      49737200 
 6008              	.LASF466:
 6009 13b5 4144435F 		.ascii	"ADC_INVERTING_AMP_allConfigs\000"
 6009      494E5645 
 6009      5254494E 
 6009      475F414D 
 6009      505F616C 
 6010              	.LASF52:
 6011 13d2 7363625F 		.ascii	"scb_1_interrupt_IRQn\000"
 6011      315F696E 
 6011      74657272 
 6011      7570745F 
 6011      4952516E 
 6012              	.LASF119:
 6013 13e7 74637077 		.ascii	"tcpwm_1_interrupts_11_IRQn\000"
 6013      6D5F315F 
 6013      696E7465 
 6013      72727570 
 6013      74735F31 
 6014              	.LASF16:
 6015 1402 696F7373 		.ascii	"ioss_interrupts_gpio_6_IRQn\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 261


 6015      5F696E74 
 6015      65727275 
 6015      7074735F 
 6015      6770696F 
 6016              	.LASF355:
 6017 141e 75696E74 		.ascii	"uint32\000"
 6017      333200
 6018              	.LASF282:
 6019 1425 63707573 		.ascii	"cpussIpcNr\000"
 6019      73497063 
 6019      4E7200
 6020              	.LASF252:
 6021 1430 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 6021      53574954 
 6021      43485F43 
 6021      4C454152 
 6021      3000
 6022              	.LASF419:
 6023 1442 5F5F4E56 		.ascii	"__NVIC_DisableIRQ\000"
 6023      49435F44 
 6023      69736162 
 6023      6C654952 
 6023      5100
 6024              	.LASF452:
 6025 1454 6D61736B 		.ascii	"mask\000"
 6025      00
 6026              	.LASF69:
 6027 1459 63707573 		.ascii	"cpuss_interrupts_dw0_9_IRQn\000"
 6027      735F696E 
 6027      74657272 
 6027      75707473 
 6027      5F647730 
 6028              	.LASF417:
 6029 1475 5F5F4453 		.ascii	"__DSB\000"
 6029      4200
 6030              	.LASF63:
 6031 147b 63707573 		.ascii	"cpuss_interrupts_dw0_3_IRQn\000"
 6031      735F696E 
 6031      74657272 
 6031      75707473 
 6031      5F647730 
 6032              	.LASF346:
 6033 1497 63707573 		.ascii	"cpussRam2Ctl0\000"
 6033      7352616D 
 6033      3243746C 
 6033      3000
 6034              	.LASF11:
 6035 14a5 696F7373 		.ascii	"ioss_interrupts_gpio_1_IRQn\000"
 6035      5F696E74 
 6035      65727275 
 6035      7074735F 
 6035      6770696F 
 6036              	.LASF184:
 6037 14c1 49435052 		.ascii	"ICPR\000"
 6037      00
 6038              	.LASF72:
 6039 14c6 63707573 		.ascii	"cpuss_interrupts_dw0_12_IRQn\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 262


 6039      735F696E 
 6039      74657272 
 6039      75707473 
 6039      5F647730 
 6040              	.LASF24:
 6041 14e3 696F7373 		.ascii	"ioss_interrupts_gpio_14_IRQn\000"
 6041      5F696E74 
 6041      65727275 
 6041      7074735F 
 6041      6770696F 
 6042              	.LASF361:
 6043 1500 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 6043      41525F53 
 6043      54415254 
 6043      5F434F4E 
 6043      56455254 
 6044              	.LASF80:
 6045 1521 63707573 		.ascii	"cpuss_interrupts_dw1_4_IRQn\000"
 6045      735F696E 
 6045      74657272 
 6045      75707473 
 6045      5F647731 
 6046              	.LASF86:
 6047 153d 63707573 		.ascii	"cpuss_interrupts_dw1_10_IRQn\000"
 6047      735F696E 
 6047      74657272 
 6047      75707473 
 6047      5F647731 
 6048              	.LASF106:
 6049 155a 74637077 		.ascii	"tcpwm_0_interrupts_6_IRQn\000"
 6049      6D5F305F 
 6049      696E7465 
 6049      72727570 
 6049      74735F36 
 6050              	.LASF358:
 6051 1574 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 6051      41525F54 
 6051      494D454F 
 6051      555400
 6052              	.LASF404:
 6053 1583 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 6053      5953434C 
 6053      4B5F4449 
 6053      565F3136 
 6053      5F355F42 
 6054              	.LASF325:
 6055 159a 70657269 		.ascii	"periDiv16CtlOffset\000"
 6055      44697631 
 6055      3643746C 
 6055      4F666673 
 6055      657400
 6056              	.LASF116:
 6057 15ad 74637077 		.ascii	"tcpwm_1_interrupts_8_IRQn\000"
 6057      6D5F315F 
 6057      696E7465 
 6057      72727570 
 6057      74735F38 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 263


 6058              	.LASF391:
 6059 15c7 6D757853 		.ascii	"muxSwitch\000"
 6059      77697463 
 6059      6800
 6060              	.LASF165:
 6061 15d1 73686F72 		.ascii	"short unsigned int\000"
 6061      7420756E 
 6061      7369676E 
 6061      65642069 
 6061      6E7400
 6062              	.LASF262:
 6063 15e4 6C6F6E67 		.ascii	"long double\000"
 6063      20646F75 
 6063      626C6500 
 6064              	.LASF175:
 6065 15f0 75696E74 		.ascii	"uint16_t\000"
 6065      31365F74 
 6065      00
 6066              	.LASF420:
 6067 15f9 4952516E 		.ascii	"IRQn\000"
 6067      00
 6068              	.LASF317:
 6069 15fe 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 6069      5472436D 
 6069      64477253 
 6069      656C4D73 
 6069      6B00
 6070              	.LASF99:
 6071 1610 63707573 		.ascii	"cpuss_interrupts_cm4_cti_1_IRQn\000"
 6071      735F696E 
 6071      74657272 
 6071      75707473 
 6071      5F636D34 
 6072              	.LASF400:
 6073 1630 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 6073      5953434C 
 6073      4B5F494E 
 6073      56414C49 
 6073      445F5354 
 6074              	.LASF111:
 6075 1648 74637077 		.ascii	"tcpwm_1_interrupts_3_IRQn\000"
 6075      6D5F315F 
 6075      696E7465 
 6075      72727570 
 6075      74735F33 
 6076              	.LASF138:
 6077 1662 7564625F 		.ascii	"udb_interrupts_6_IRQn\000"
 6077      696E7465 
 6077      72727570 
 6077      74735F36 
 6077      5F495251 
 6078              	.LASF382:
 6079 1678 73616D70 		.ascii	"sampleTime01\000"
 6079      6C655469 
 6079      6D653031 
 6079      00
 6080              	.LASF291:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 264


 6081 1685 73727373 		.ascii	"srssNumHfroot\000"
 6081      4E756D48 
 6081      66726F6F 
 6081      7400
 6082              	.LASF14:
 6083 1693 696F7373 		.ascii	"ioss_interrupts_gpio_4_IRQn\000"
 6083      5F696E74 
 6083      65727275 
 6083      7074735F 
 6083      6770696F 
 6084              	.LASF403:
 6085 16af 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 6085      5953434C 
 6085      4B5F4449 
 6085      565F3136 
 6085      5F424954 
 6086              	.LASF275:
 6087 16c4 64775665 		.ascii	"dwVersion\000"
 6087      7273696F 
 6087      6E00
 6088              	.LASF124:
 6089 16ce 74637077 		.ascii	"tcpwm_1_interrupts_16_IRQn\000"
 6089      6D5F315F 
 6089      696E7465 
 6089      72727570 
 6089      74735F31 
 6090              	.LASF316:
 6091 16e9 70657269 		.ascii	"periTrCmdOffset\000"
 6091      5472436D 
 6091      644F6666 
 6091      73657400 
 6092              	.LASF42:
 6093 16f9 63707573 		.ascii	"cpuss_interrupts_ipc_7_IRQn\000"
 6093      735F696E 
 6093      74657272 
 6093      75707473 
 6093      5F697063 
 6094              	.LASF441:
 6095 1715 636F6E66 		.ascii	"config\000"
 6095      696700
 6096              	.LASF83:
 6097 171c 63707573 		.ascii	"cpuss_interrupts_dw1_7_IRQn\000"
 6097      735F696E 
 6097      74657272 
 6097      75707473 
 6097      5F647731 
 6098              	.LASF370:
 6099 1738 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 6099      41525F53 
 6099      57495443 
 6099      485F5345 
 6099      515F4354 
 6100              	.LASF190:
 6101 1756 73697A65 		.ascii	"sizetype\000"
 6101      74797065 
 6101      00
 6102              	.LASF398:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 265


 6103 175f 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 6103      5953434C 
 6103      4B5F4241 
 6103      445F5041 
 6103      52414D00 
 6104              	.LASF342:
 6105 1773 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 6105      73436D34 
 6105      4E6D6943 
 6105      746C4F66 
 6105      66736574 
 6106              	.LASF179:
 6107 1788 52455345 		.ascii	"RESERVED0\000"
 6107      52564544 
 6107      3000
 6108              	.LASF324:
 6109 1792 70657269 		.ascii	"periDiv8CtlOffset\000"
 6109      44697638 
 6109      43746C4F 
 6109      66667365 
 6109      7400
 6110              	.LASF183:
 6111 17a4 52455345 		.ascii	"RESERVED2\000"
 6111      52564544 
 6111      3200
 6112              	.LASF185:
 6113 17ae 52455345 		.ascii	"RESERVED3\000"
 6113      52564544 
 6113      3300
 6114              	.LASF446:
 6115 17b8 4144435F 		.ascii	"ADC_INVERTING_AMP_StartConvert\000"
 6115      494E5645 
 6115      5254494E 
 6115      475F414D 
 6115      505F5374 
 6116              	.LASF188:
 6117 17d7 52455345 		.ascii	"RESERVED5\000"
 6117      52564544 
 6117      3500
 6118              	.LASF245:
 6119 17e1 52455345 		.ascii	"RESERVED6\000"
 6119      52564544 
 6119      3600
 6120              	.LASF421:
 6121 17eb 43795F53 		.ascii	"Cy_SAR_Disable\000"
 6121      41525F44 
 6121      69736162 
 6121      6C6500
 6122              	.LASF250:
 6123 17fa 52455345 		.ascii	"RESERVED8\000"
 6123      52564544 
 6123      3800
 6124              	.LASF34:
 6125 1804 626C6573 		.ascii	"bless_interrupt_IRQn\000"
 6125      735F696E 
 6125      74657272 
 6125      7570745F 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 266


 6125      4952516E 
 6126              	.LASF215:
 6127 1819 50455249 		.ascii	"PERI_V1_Type\000"
 6127      5F56315F 
 6127      54797065 
 6127      00
 6128              	.LASF238:
 6129 1826 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 6129      52415445 
 6129      5F494E54 
 6129      525F4D41 
 6129      534B4544 
 6130              	.LASF255:
 6131 183b 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 6131      53574954 
 6131      43485F53 
 6131      515F4354 
 6131      524C00
 6132              	.LASF167:
 6133 184e 6C6F6E67 		.ascii	"long int\000"
 6133      20696E74 
 6133      00
 6134              	.LASF91:
 6135 1857 63707573 		.ascii	"cpuss_interrupts_dw1_15_IRQn\000"
 6135      735F696E 
 6135      74657272 
 6135      75707473 
 6135      5F647731 
 6136              	.LASF273:
 6137 1874 63707573 		.ascii	"cpussVersion\000"
 6137      73566572 
 6137      73696F6E 
 6137      00
 6138              	.LASF461:
 6139 1881 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6139      52784275 
 6139      66666572 
 6139      00
 6140              	.LASF277:
 6141 188e 6770696F 		.ascii	"gpioVersion\000"
 6141      56657273 
 6141      696F6E00 
 6142              	.LASF1:
 6143 189a 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6143      61736B61 
 6143      626C6549 
 6143      6E745F49 
 6143      52516E00 
 6144              	.LASF128:
 6145 18ae 74637077 		.ascii	"tcpwm_1_interrupts_20_IRQn\000"
 6145      6D5F315F 
 6145      696E7465 
 6145      72727570 
 6145      74735F32 
 6146              	.LASF276:
 6147 18c9 666C6173 		.ascii	"flashcVersion\000"
 6147      68635665 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 267


 6147      7273696F 
 6147      6E00
 6148              	.LASF298:
 6149 18d7 70726F74 		.ascii	"protBusMasterMask\000"
 6149      4275734D 
 6149      61737465 
 6149      724D6173 
 6149      6B00
 6150              	.LASF267:
 6151 18e9 70726F74 		.ascii	"protBase\000"
 6151      42617365 
 6151      00
 6152              	.LASF57:
 6153 18f2 7363625F 		.ascii	"scb_6_interrupt_IRQn\000"
 6153      365F696E 
 6153      74657272 
 6153      7570745F 
 6153      4952516E 
 6154              	.LASF373:
 6155 1907 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 6155      41525F52 
 6155      414E4745 
 6155      5F434F4E 
 6155      445F4142 
 6156              	.LASF430:
 6157 191f 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 6157      7973436C 
 6157      6B5F5065 
 6157      72697068 
 6157      456E6162 
 6158              	.LASF220:
 6159 193d 52414E47 		.ascii	"RANGE_THRES\000"
 6159      455F5448 
 6159      52455300 
 6160              	.LASF351:
 6161 1949 63686172 		.ascii	"char_t\000"
 6161      5F7400
 6162              	.LASF359:
 6163 1950 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 6163      41525F43 
 6163      4F4E5645 
 6163      5253494F 
 6163      4E5F4E4F 
 6164              	.LASF47:
 6165 196f 63707573 		.ascii	"cpuss_interrupts_ipc_12_IRQn\000"
 6165      735F696E 
 6165      74657272 
 6165      75707473 
 6165      5F697063 
 6166              	.LASF225:
 6167 198c 4348414E 		.ascii	"CHAN_WORK\000"
 6167      5F574F52 
 6167      4B00
 6168              	.LASF41:
 6169 1996 63707573 		.ascii	"cpuss_interrupts_ipc_6_IRQn\000"
 6169      735F696E 
 6169      74657272 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 268


 6169      75707473 
 6169      5F697063 
 6170              	.LASF366:
 6171 19b2 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 6171      6E5F7361 
 6171      725F7265 
 6171      7475726E 
 6171      5F6D6F64 
 6172              	.LASF354:
 6173 19ca 646F7562 		.ascii	"double\000"
 6173      6C6500
 6174              	.LASF88:
 6175 19d1 63707573 		.ascii	"cpuss_interrupts_dw1_12_IRQn\000"
 6175      735F696E 
 6175      74657272 
 6175      75707473 
 6175      5F647731 
 6176              	.LASF18:
 6177 19ee 696F7373 		.ascii	"ioss_interrupts_gpio_8_IRQn\000"
 6177      5F696E74 
 6177      65727275 
 6177      7074735F 
 6177      6770696F 
 6178              	.LASF337:
 6179 1a0a 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 6179      73436D34 
 6179      50777243 
 6179      746C4F66 
 6179      66736574 
 6180              	.LASF152:
 6181 1a1f 736D6966 		.ascii	"smif_interrupt_IRQn\000"
 6181      5F696E74 
 6181      65727275 
 6181      70745F49 
 6181      52516E00 
 6182              	.LASF53:
 6183 1a33 7363625F 		.ascii	"scb_2_interrupt_IRQn\000"
 6183      325F696E 
 6183      74657272 
 6183      7570745F 
 6183      4952516E 
 6184              	.LASF191:
 6185 1a48 4E564943 		.ascii	"NVIC_Type\000"
 6185      5F547970 
 6185      6500
 6186              	.LASF410:
 6187 1a52 6D697363 		.ascii	"miscConfig\000"
 6187      436F6E66 
 6187      696700
 6188              	.LASF13:
 6189 1a5d 696F7373 		.ascii	"ioss_interrupts_gpio_3_IRQn\000"
 6189      5F696E74 
 6189      65727275 
 6189      7074735F 
 6189      6770696F 
 6190              	.LASF74:
 6191 1a79 63707573 		.ascii	"cpuss_interrupts_dw0_14_IRQn\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 269


 6191      735F696E 
 6191      74657272 
 6191      75707473 
 6191      5F647730 
 6192              	.LASF294:
 6193 1a96 70617373 		.ascii	"passSarChannels\000"
 6193      53617243 
 6193      68616E6E 
 6193      656C7300 
 6194              	.LASF82:
 6195 1aa6 63707573 		.ascii	"cpuss_interrupts_dw1_6_IRQn\000"
 6195      735F696E 
 6195      74657272 
 6195      75707473 
 6195      5F647731 
 6196              	.LASF130:
 6197 1ac2 74637077 		.ascii	"tcpwm_1_interrupts_22_IRQn\000"
 6197      6D5F315F 
 6197      696E7465 
 6197      72727570 
 6197      74735F32 
 6198              	.LASF234:
 6199 1add 494E5452 		.ascii	"INTR_MASKED\000"
 6199      5F4D4153 
 6199      4B454400 
 6200              	.LASF60:
 6201 1ae9 63707573 		.ascii	"cpuss_interrupts_dw0_0_IRQn\000"
 6201      735F696E 
 6201      74657272 
 6201      75707473 
 6201      5F647730 
 6202              	.LASF339:
 6203 1b05 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 6203      73547269 
 6203      6D526F6D 
 6203      43746C4F 
 6203      66667365 
 6204              	.LASF383:
 6205 1b1b 73616D70 		.ascii	"sampleTime23\000"
 6205      6C655469 
 6205      6D653233 
 6205      00
 6206              	.LASF217:
 6207 1b28 53414D50 		.ascii	"SAMPLE_CTRL\000"
 6207      4C455F43 
 6207      54524C00 
 6208              	.LASF414:
 6209 1b34 696E7472 		.ascii	"intrPriority\000"
 6209      5072696F 
 6209      72697479 
 6209      00
 6210              	.LASF144:
 6211 1b41 7564625F 		.ascii	"udb_interrupts_12_IRQn\000"
 6211      696E7465 
 6211      72727570 
 6211      74735F31 
 6211      325F4952 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 270


 6212              	.LASF9:
 6213 1b58 53797354 		.ascii	"SysTick_IRQn\000"
 6213      69636B5F 
 6213      4952516E 
 6213      00
 6214              	.LASF278:
 6215 1b65 6873696F 		.ascii	"hsiomVersion\000"
 6215      6D566572 
 6215      73696F6E 
 6215      00
 6216              	.LASF77:
 6217 1b72 63707573 		.ascii	"cpuss_interrupts_dw1_1_IRQn\000"
 6217      735F696E 
 6217      74657272 
 6217      75707473 
 6217      5F647731 
 6218              	.LASF347:
 6219 1b8e 69706353 		.ascii	"ipcStructSize\000"
 6219      74727563 
 6219      7453697A 
 6219      6500
 6220              	.LASF169:
 6221 1b9c 6C6F6E67 		.ascii	"long unsigned int\000"
 6221      20756E73 
 6221      69676E65 
 6221      6420696E 
 6221      7400
 6222              	.LASF431:
 6223 1bae 72657456 		.ascii	"retVal\000"
 6223      616C00
 6224              	.LASF103:
 6225 1bb5 74637077 		.ascii	"tcpwm_0_interrupts_3_IRQn\000"
 6225      6D5F305F 
 6225      696E7465 
 6225      72727570 
 6225      74735F33 
 6226              	.LASF343:
 6227 1bcf 63707573 		.ascii	"cpussRomCtl\000"
 6227      73526F6D 
 6227      43746C00 
 6228              	.LASF64:
 6229 1bdb 63707573 		.ascii	"cpuss_interrupts_dw0_4_IRQn\000"
 6229      735F696E 
 6229      74657272 
 6229      75707473 
 6229      5F647730 
 6230              	.LASF192:
 6231 1bf7 434C4F43 		.ascii	"CLOCK_CTL\000"
 6231      4B5F4354 
 6231      4C00
 6232              	.LASF176:
 6233 1c01 696E7433 		.ascii	"int32_t\000"
 6233      325F7400 
 6234              	.LASF349:
 6235 1c09 63795F73 		.ascii	"cy_stc_device_t\000"
 6235      74635F64 
 6235      65766963 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 271


 6235      655F7400 
 6236              	.LASF251:
 6237 1c19 4D55585F 		.ascii	"MUX_SWITCH0\000"
 6237      53574954 
 6237      43483000 
 6238              	.LASF228:
 6239 1c25 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 6239      5F524553 
 6239      554C545F 
 6239      55504441 
 6239      54454400 
 6240              	.LASF113:
 6241 1c39 74637077 		.ascii	"tcpwm_1_interrupts_5_IRQn\000"
 6241      6D5F315F 
 6241      696E7465 
 6241      72727570 
 6241      74735F35 
 6242              	.LASF140:
 6243 1c53 7564625F 		.ascii	"udb_interrupts_8_IRQn\000"
 6243      696E7465 
 6243      72727570 
 6243      74735F38 
 6243      5F495251 
 6244              	.LASF266:
 6245 1c69 75646242 		.ascii	"udbBase\000"
 6245      61736500 
 6246              	.LASF224:
 6247 1c71 4348414E 		.ascii	"CHAN_CONFIG\000"
 6247      5F434F4E 
 6247      46494700 
 6248              	.LASF336:
 6249 1c7d 63707573 		.ascii	"cpussCm0StatusOffset\000"
 6249      73436D30 
 6249      53746174 
 6249      75734F66 
 6249      66736574 
 6250              	.LASF381:
 6251 1c92 73616D70 		.ascii	"sampleCtrl\000"
 6251      6C654374 
 6251      726C00
 6252              	.LASF418:
 6253 1c9d 5F5F4E56 		.ascii	"__NVIC_EnableIRQ\000"
 6253      49435F45 
 6253      6E61626C 
 6253      65495251 
 6253      00
 6254              	.LASF126:
 6255 1cae 74637077 		.ascii	"tcpwm_1_interrupts_18_IRQn\000"
 6255      6D5F315F 
 6255      696E7465 
 6255      72727570 
 6255      74735F31 
 6256              	.LASF7:
 6257 1cc9 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6257      674D6F6E 
 6257      69746F72 
 6257      5F495251 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 272


 6257      6E00
 6258              	.LASF459:
 6259 1cdb 4144435F 		.ascii	"ADC_INVERTING_AMP_Init\000"
 6259      494E5645 
 6259      5254494E 
 6259      475F414D 
 6259      505F496E 
 6260              	.LASF108:
 6261 1cf2 74637077 		.ascii	"tcpwm_1_interrupts_0_IRQn\000"
 6261      6D5F315F 
 6261      696E7465 
 6261      72727570 
 6261      74735F30 
 6262              	.LASF135:
 6263 1d0c 7564625F 		.ascii	"udb_interrupts_3_IRQn\000"
 6263      696E7465 
 6263      72727570 
 6263      74735F33 
 6263      5F495251 
 6264              	.LASF376:
 6265 1d22 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 6265      41525F49 
 6265      4E54525F 
 6265      4D41534B 
 6265      5F4E4F4E 
 6266              	.LASF258:
 6267 1d38 414E415F 		.ascii	"ANA_TRIM0\000"
 6267      5452494D 
 6267      3000
 6268              	.LASF259:
 6269 1d42 414E415F 		.ascii	"ANA_TRIM1\000"
 6269      5452494D 
 6269      3100
 6270              	.LASF168:
 6271 1d4c 5F5F7569 		.ascii	"__uint32_t\000"
 6271      6E743332 
 6271      5F7400
 6272              	.LASF350:
 6273 1d57 63795F69 		.ascii	"cy_israddress\000"
 6273      73726164 
 6273      64726573 
 6273      7300
 6274              	.LASF121:
 6275 1d65 74637077 		.ascii	"tcpwm_1_interrupts_13_IRQn\000"
 6275      6D5F315F 
 6275      696E7465 
 6275      72727570 
 6275      74735F31 
 6276              	.LASF51:
 6277 1d80 7363625F 		.ascii	"scb_0_interrupt_IRQn\000"
 6277      305F696E 
 6277      74657272 
 6277      7570745F 
 6277      4952516E 
 6278              	.LASF39:
 6279 1d95 63707573 		.ascii	"cpuss_interrupts_ipc_4_IRQn\000"
 6279      735F696E 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 273


 6279      74657272 
 6279      75707473 
 6279      5F697063 
 6280              	.LASF367:
 6281 1db1 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 6281      41525F53 
 6281      57495443 
 6281      485F4F50 
 6281      454E00
 6282              	.LASF405:
 6283 1dc4 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 6283      5953434C 
 6283      4B5F4449 
 6283      565F3234 
 6283      5F355F42 
 6284              	.LASF237:
 6285 1ddb 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 6285      52415445 
 6285      5F494E54 
 6285      525F4D41 
 6285      534B00
 6286              	.LASF456:
 6287 1dee 7265744D 		.ascii	"retMode\000"
 6287      6F646500 
 6288              	.LASF257:
 6289 1df6 52455345 		.ascii	"RESERVED10\000"
 6289      52564544 
 6289      313000
 6290              	.LASF304:
 6291 1e01 666C6173 		.ascii	"flashEraseDelay\000"
 6291      68457261 
 6291      73654465 
 6291      6C617900 
 6292              	.LASF65:
 6293 1e11 63707573 		.ascii	"cpuss_interrupts_dw0_5_IRQn\000"
 6293      735F696E 
 6293      74657272 
 6293      75707473 
 6293      5F647730 
 6294              	.LASF435:
 6295 1e2d 4144435F 		.ascii	"ADC_INVERTING_AMP_intSarClock_SetDivider\000"
 6295      494E5645 
 6295      5254494E 
 6295      475F414D 
 6295      505F696E 
 6296              	.LASF182:
 6297 1e56 49535052 		.ascii	"ISPR\000"
 6297      00
 6298              	.LASF310:
 6299 1e5b 64774368 		.ascii	"dwChOffset\000"
 6299      4F666673 
 6299      657400
 6300              	.LASF411:
 6301 1e66 636C6B44 		.ascii	"clkDivider\000"
 6301      69766964 
 6301      657200
 6302              	.LASF180:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 274


 6303 1e71 49434552 		.ascii	"ICER\000"
 6303      00
 6304              	.LASF406:
 6305 1e76 63795F65 		.ascii	"cy_en_divider_types_t\000"
 6305      6E5F6469 
 6305      76696465 
 6305      725F7479 
 6305      7065735F 
 6306              	.LASF425:
 6307 1e8c 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 6307      41525F53 
 6307      6574496E 
 6307      74657272 
 6307      7570744D 
 6308              	.LASF186:
 6309 1ea4 49414252 		.ascii	"IABR\000"
 6309      00
 6310              	.LASF380:
 6311 1ea9 6374726C 		.ascii	"ctrl\000"
 6311      00
 6312              	.LASF369:
 6313 1eae 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 6313      41525F53 
 6313      57495443 
 6313      485F5345 
 6313      515F4354 
 6314              	.LASF26:
 6315 1ecd 696F7373 		.ascii	"ioss_interrupt_vdd_IRQn\000"
 6315      5F696E74 
 6315      65727275 
 6315      70745F76 
 6315      64645F49 
 6316              	.LASF471:
 6317 1ee5 4144435F 		.ascii	"ADC_INVERTING_AMP_IsEndConversion\000"
 6317      494E5645 
 6317      5254494E 
 6317      475F414D 
 6317      505F4973 
 6318              	.LASF161:
 6319 1f07 5F5F7569 		.ascii	"__uint8_t\000"
 6319      6E74385F 
 6319      7400
 6320              	.LASF49:
 6321 1f11 63707573 		.ascii	"cpuss_interrupts_ipc_14_IRQn\000"
 6321      735F696E 
 6321      74657272 
 6321      75707473 
 6321      5F697063 
 6322              	.LASF0:
 6323 1f2e 52657365 		.ascii	"Reset_IRQn\000"
 6323      745F4952 
 6323      516E00
 6324              	.LASF240:
 6325 1f39 52414E47 		.ascii	"RANGE_INTR_SET\000"
 6325      455F494E 
 6325      54525F53 
 6325      455400
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 275


 6326              	.LASF300:
 6327 1f48 666C6173 		.ascii	"flashRwwRequired\000"
 6327      68527777 
 6327      52657175 
 6327      69726564 
 6327      00
 6328              	.LASF329:
 6329 1f59 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 6329      50727443 
 6329      66674F66 
 6329      66736574 
 6329      00
 6330              	.LASF295:
 6331 1f6a 65704D6F 		.ascii	"epMonitorNr\000"
 6331      6E69746F 
 6331      724E7200 
 6332              	.LASF70:
 6333 1f76 63707573 		.ascii	"cpuss_interrupts_dw0_10_IRQn\000"
 6333      735F696E 
 6333      74657272 
 6333      75707473 
 6333      5F647730 
 6334              	.LASF2:
 6335 1f93 48617264 		.ascii	"HardFault_IRQn\000"
 6335      4661756C 
 6335      745F4952 
 6335      516E00
 6336              	.LASF159:
 6337 1fa2 7369676E 		.ascii	"signed char\000"
 6337      65642063 
 6337      68617200 
 6338              	.LASF148:
 6339 1fae 70617373 		.ascii	"pass_interrupt_sar_IRQn\000"
 6339      5F696E74 
 6339      65727275 
 6339      70745F73 
 6339      61725F49 
 6340              	.LASF132:
 6341 1fc6 7564625F 		.ascii	"udb_interrupts_0_IRQn\000"
 6341      696E7465 
 6341      72727570 
 6341      74735F30 
 6341      5F495251 
 6342              	.LASF205:
 6343 1fdc 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 6343      5F505055 
 6343      5F47525F 
 6343      56315F54 
 6343      79706500 
 6344              	.LASF283:
 6345 1ff0 63707573 		.ascii	"cpussIpcIrqNr\000"
 6345      73497063 
 6345      4972714E 
 6345      7200
 6346              	.LASF313:
 6347 1ffe 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 6347      43746C50 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 276


 6347      7265656D 
 6347      70746162 
 6347      6C65506F 
 6348              	.LASF254:
 6349 2014 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 6349      53574954 
 6349      43485F44 
 6349      535F4354 
 6349      524C00
 6350              	.LASF335:
 6351 2027 63707573 		.ascii	"cpussCm4StatusOffset\000"
 6351      73436D34 
 6351      53746174 
 6351      75734F66 
 6351      66736574 
 6352              	.LASF15:
 6353 203c 696F7373 		.ascii	"ioss_interrupts_gpio_5_IRQn\000"
 6353      5F696E74 
 6353      65727275 
 6353      7074735F 
 6353      6770696F 
 6354              	.LASF44:
 6355 2058 63707573 		.ascii	"cpuss_interrupts_ipc_9_IRQn\000"
 6355      735F696E 
 6355      74657272 
 6355      75707473 
 6355      5F697063 
 6356              	.LASF256:
 6357 2074 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 6357      53574954 
 6357      43485F53 
 6357      54415455 
 6357      5300
 6358              	.LASF200:
 6359 2086 41444452 		.ascii	"ADDR0\000"
 6359      3000
 6360              	.LASF202:
 6361 208c 41444452 		.ascii	"ADDR1\000"
 6361      3100
 6362              	.LASF280:
 6363 2092 70657269 		.ascii	"periVersion\000"
 6363      56657273 
 6363      696F6E00 
 6364              	.LASF93:
 6365 209e 63707573 		.ascii	"cpuss_interrupts_fault_1_IRQn\000"
 6365      735F696E 
 6365      74657272 
 6365      75707473 
 6365      5F666175 
 6366              	.LASF442:
 6367 20bc 6465496E 		.ascii	"deInitRouting\000"
 6367      6974526F 
 6367      7574696E 
 6367      6700
 6368              	.LASF393:
 6369 20ca 636F6E66 		.ascii	"configRouting\000"
 6369      6967526F 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 277


 6369      7574696E 
 6369      6700
 6370              	.LASF270:
 6371 20d8 70617373 		.ascii	"passBase\000"
 6371      42617365 
 6371      00
 6372              	.LASF201:
 6373 20e1 41545430 		.ascii	"ATT0\000"
 6373      00
 6374              	.LASF203:
 6375 20e6 41545431 		.ascii	"ATT1\000"
 6375      00
 6376              	.LASF118:
 6377 20eb 74637077 		.ascii	"tcpwm_1_interrupts_10_IRQn\000"
 6377      6D5F315F 
 6377      696E7465 
 6377      72727570 
 6377      74735F31 
 6378              	.LASF196:
 6379 2106 52455345 		.ascii	"RESERVED1\000"
 6379      52564544 
 6379      3100
 6380              	.LASF71:
 6381 2110 63707573 		.ascii	"cpuss_interrupts_dw0_11_IRQn\000"
 6381      735F696E 
 6381      74657272 
 6381      75707473 
 6381      5F647730 
 6382              	.LASF248:
 6383 212d 53544154 		.ascii	"STATUS\000"
 6383      555300
 6384              	.LASF197:
 6385 2134 50455249 		.ascii	"PERI_GR_V1_Type\000"
 6385      5F47525F 
 6385      56315F54 
 6385      79706500 
 6386              	.LASF309:
 6387 2144 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 6387      6843746C 
 6387      4D61696E 
 6387      57733446 
 6387      72657100 
 6388              	.LASF79:
 6389 2158 63707573 		.ascii	"cpuss_interrupts_dw1_3_IRQn\000"
 6389      735F696E 
 6389      74657272 
 6389      75707473 
 6389      5F647731 
 6390              	.LASF390:
 6391 2174 72616E67 		.ascii	"rangeIntrMask\000"
 6391      65496E74 
 6391      724D6173 
 6391      6B00
 6392              	.LASF368:
 6393 2182 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 6393      41525F53 
 6393      57495443 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 278


 6393      485F434C 
 6393      4F534500 
 6394              	.LASF453:
 6395 2196 696E7472 		.ascii	"intrMaskReg\000"
 6395      4D61736B 
 6395      52656700 
 6396              	.LASF375:
 6397 21a2 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 6397      6E5F7361 
 6397      725F7261 
 6397      6E67655F 
 6397      64657465 
 6398              	.LASF253:
 6399 21c5 52455345 		.ascii	"RESERVED9\000"
 6399      52564544 
 6399      3900
 6400              	.LASF468:
 6401 21cf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6401      43313120 
 6401      352E342E 
 6401      31203230 
 6401      31363036 
 6402 2202 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 6402      20726576 
 6402      6973696F 
 6402      6E203233 
 6402      37373135 
 6403 2235 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 6403      70202D6D 
 6403      6670753D 
 6403      66707634 
 6403      2D73702D 
 6404 2268 65637469 		.ascii	"ections -ffat-lto-objects\000"
 6404      6F6E7320 
 6404      2D666661 
 6404      742D6C74 
 6404      6F2D6F62 
 6405              	.LASF206:
 6406 2282 4449565F 		.ascii	"DIV_CMD\000"
 6406      434D4400 
 6407              	.LASF195:
 6408 228a 54494D45 		.ascii	"TIMEOUT_CTL\000"
 6408      4F55545F 
 6408      43544C00 
 6409              	.LASF362:
 6410 2296 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 6410      41525F53 
 6410      54415254 
 6410      5F434F4E 
 6410      56455254 
 6411              	.LASF94:
 6412 22b6 63707573 		.ascii	"cpuss_interrupt_crypto_IRQn\000"
 6412      735F696E 
 6412      74657272 
 6412      7570745F 
 6412      63727970 
 6413              	.LASF100:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccCtvPzQ.s 			page 279


 6414 22d2 74637077 		.ascii	"tcpwm_0_interrupts_0_IRQn\000"
 6414      6D5F305F 
 6414      696E7465 
 6414      72727570 
 6414      74735F30 
 6415              	.LASF279:
 6416 22ec 69706356 		.ascii	"ipcVersion\000"
 6416      65727369 
 6416      6F6E00
 6417              	.LASF38:
 6418 22f7 63707573 		.ascii	"cpuss_interrupts_ipc_3_IRQn\000"
 6418      735F696E 
 6418      74657272 
 6418      75707473 
 6418      5F697063 
 6419              	.LASF388:
 6420 2313 696E7472 		.ascii	"intrMask\000"
 6420      4D61736B 
 6420      00
 6421              	.LASF469:
 6422 231c 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_INVERTING_AMP.c\000"
 6422      72617465 
 6422      645F536F 
 6422      75726365 
 6422      5C50536F 
 6423              	.LASF58:
 6424 2347 7363625F 		.ascii	"scb_7_interrupt_IRQn\000"
 6424      375F696E 
 6424      74657272 
 6424      7570745F 
 6424      4952516E 
 6425              	.LASF216:
 6426 235c 4354524C 		.ascii	"CTRL\000"
 6426      00
 6427              	.LASF98:
 6428 2361 63707573 		.ascii	"cpuss_interrupts_cm4_cti_0_IRQn\000"
 6428      735F696E 
 6428      74657272 
 6428      75707473 
 6428      5F636D34 
 6429              	.LASF110:
 6430 2381 74637077 		.ascii	"tcpwm_1_interrupts_2_IRQn\000"
 6430      6D5F315F 
 6430      696E7465 
 6430      72727570 
 6430      74735F32 
 6431              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
