ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_INVERTING_AMP_INT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SAR_GetInterruptStatus,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	Cy_SAR_GetInterruptStatus, %function
  25              	Cy_SAR_GetInterruptStatus:
  26              	.LFB170:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 3


  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 4


 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 5


 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 6


 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 7


 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 8


 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 9


 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 10


 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 11


 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 12


 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 13


 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 14


 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 15


 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 16


 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 17


 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 18


 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 19


1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 20


1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 21


1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 22


1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 23


1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 24


1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 25


1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 26


1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 27


1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 28


1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  28              		.loc 1 1555 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 29


  41              		.loc 1 1556 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a D3F81032 		ldr	r3, [r3, #528]
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  44              		.loc 1 1557 0
  45 000e 1846     		mov	r0, r3
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0018 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE170:
  57              		.size	Cy_SAR_GetInterruptStatus, .-Cy_SAR_GetInterruptStatus
  58 001a 00BF     		.section	.rodata
  59              		.align	2
  60              	.LC0:
  61 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  61      72617465 
  61      645F536F 
  61      75726365 
  61      5C50536F 
  62 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  62      5F736172 
  62      2E6800
  63              		.section	.text.Cy_SAR_ClearInterrupt,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	Cy_SAR_ClearInterrupt, %function
  68              	Cy_SAR_ClearInterrupt:
  69              	.LFB171:
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 30


1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  70              		.loc 1 1584 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  84              		.loc 1 1585 0
  85 000a 3B68     		ldr	r3, [r7]
  86 000c 072B     		cmp	r3, #7
  87 000e 04D9     		bls	.L4
  88              		.loc 1 1585 0 is_stmt 0 discriminator 1
  89 0010 40F23161 		movw	r1, #1585
  90 0014 0648     		ldr	r0, .L5
  91 0016 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  92              	.L4:
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  93              		.loc 1 1587 0 is_stmt 1
  94 001a 7B68     		ldr	r3, [r7, #4]
  95 001c 3A68     		ldr	r2, [r7]
  96 001e C3F81022 		str	r2, [r3, #528]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  97              		.loc 1 1590 0
  98 0022 7B68     		ldr	r3, [r7, #4]
  99 0024 D3F81032 		ldr	r3, [r3, #528]
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 100              		.loc 1 1591 0
 101 0028 00BF     		nop
 102 002a 0837     		adds	r7, r7, #8
 103              		.cfi_def_cfa_offset 8
 104 002c BD46     		mov	sp, r7
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 002e 80BD     		pop	{r7, pc}
 108              	.L6:
 109              		.align	2
 110              	.L5:
 111 0030 00000000 		.word	.LC0
 112              		.cfi_endproc
 113              	.LFE171:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 31


 114              		.size	Cy_SAR_ClearInterrupt, .-Cy_SAR_ClearInterrupt
 115              		.section	.text.ADC_INVERTING_AMP_ISR,"ax",%progbits
 116              		.align	2
 117              		.global	ADC_INVERTING_AMP_ISR
 118              		.thumb
 119              		.thumb_func
 120              		.type	ADC_INVERTING_AMP_ISR, %function
 121              	ADC_INVERTING_AMP_ISR:
 122              	.LFB271:
 123              		.file 2 "Generated_Source\\PSoC6\\ADC_INVERTING_AMP_INT.c"
   1:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \file     ADC_INVERTING_AMP_INT.c
   3:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
   5:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Provides the initialization data structure for the ADC_INVERTING_AMP Component.
   7:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
   8:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** #include "ADC_INVERTING_AMP.h"
  40:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  42:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** /* `#START ADC_INVERTING_AMP_SYS_VAR`  */
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 32


  48:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  49:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  51:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * Function Name: ADC_INVERTING_AMP_ISR
  53:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
  55:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
  57:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
  59:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
  61:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** *
  63:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** void ADC_INVERTING_AMP_ISR(void)
  65:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** {
 124              		.loc 2 65 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
  66:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  68:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_INVERTING_AMP_SAR__HW);
 136              		.loc 2 69 0
 137 0006 0848     		ldr	r0, .L8
 138 0008 FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
 139 000c 7860     		str	r0, [r7, #4]
  70:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  71:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     #ifdef ADC_INVERTING_AMP_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****         ADC_INVERTING_AMP_ISR_Callback();
 140              		.loc 2 73 0
 141 000e FFF7FEFF 		bl	ADC_INVERTING_AMP_ISR_Callback
  74:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  76:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* `#START MAIN_ADC_INVERTING_AMP_ISR`  */
  81:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  82:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** 
  84:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     Cy_SAR_ClearInterrupt(ADC_INVERTING_AMP_SAR__HW, intr_status);
 142              		.loc 2 85 0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 33


 143 0012 7968     		ldr	r1, [r7, #4]
 144 0014 0448     		ldr	r0, .L8
 145 0016 FFF7FEFF 		bl	Cy_SAR_ClearInterrupt
  86:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_INVERTING_AMP_SAR__HW);
 146              		.loc 2 87 0
 147 001a 0348     		ldr	r0, .L8
 148 001c FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
  88:Generated_Source\PSoC6/ADC_INVERTING_AMP_INT.c **** }
 149              		.loc 2 88 0
 150 0020 00BF     		nop
 151 0022 0837     		adds	r7, r7, #8
 152              		.cfi_def_cfa_offset 8
 153 0024 BD46     		mov	sp, r7
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 0026 80BD     		pop	{r7, pc}
 157              	.L9:
 158              		.align	2
 159              	.L8:
 160 0028 00001D41 		.word	1092419584
 161              		.cfi_endproc
 162              	.LFE271:
 163              		.size	ADC_INVERTING_AMP_ISR, .-ADC_INVERTING_AMP_ISR
 164              		.text
 165              	.Letext0:
 166              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 167              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 168              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 169              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 170              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 171              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 172              		.file 9 "Generated_Source\\PSoC6\\ADC_INVERTING_AMP.h"
 173              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 174              		.section	.debug_info,"",%progbits
 175              	.Ldebug_info0:
 176 0000 620B0000 		.4byte	0xb62
 177 0004 0400     		.2byte	0x4
 178 0006 00000000 		.4byte	.Ldebug_abbrev0
 179 000a 04       		.byte	0x4
 180 000b 01       		.uleb128 0x1
 181 000c DD000000 		.4byte	.LASF201
 182 0010 0C       		.byte	0xc
 183 0011 20080000 		.4byte	.LASF202
 184 0015 850C0000 		.4byte	.LASF203
 185 0019 00000000 		.4byte	.Ldebug_ranges0+0
 186 001d 00000000 		.4byte	0
 187 0021 00000000 		.4byte	.Ldebug_line0
 188 0025 02       		.uleb128 0x2
 189 0026 02       		.byte	0x2
 190 0027 05       		.byte	0x5
 191 0028 48090000 		.4byte	.LASF0
 192 002c 02       		.uleb128 0x2
 193 002d 01       		.byte	0x1
 194 002e 06       		.byte	0x6
 195 002f A7020000 		.4byte	.LASF1
 196 0033 03       		.uleb128 0x3
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 34


 197 0034 B2000000 		.4byte	.LASF3
 198 0038 03       		.byte	0x3
 199 0039 1D       		.byte	0x1d
 200 003a 3E000000 		.4byte	0x3e
 201 003e 02       		.uleb128 0x2
 202 003f 01       		.byte	0x1
 203 0040 08       		.byte	0x8
 204 0041 0C090000 		.4byte	.LASF2
 205 0045 03       		.uleb128 0x3
 206 0046 9A040000 		.4byte	.LASF4
 207 004a 03       		.byte	0x3
 208 004b 29       		.byte	0x29
 209 004c 25000000 		.4byte	0x25
 210 0050 03       		.uleb128 0x3
 211 0051 4F0A0000 		.4byte	.LASF5
 212 0055 03       		.byte	0x3
 213 0056 2B       		.byte	0x2b
 214 0057 5B000000 		.4byte	0x5b
 215 005b 02       		.uleb128 0x2
 216 005c 02       		.byte	0x2
 217 005d 07       		.byte	0x7
 218 005e 28040000 		.4byte	.LASF6
 219 0062 03       		.uleb128 0x3
 220 0063 46060000 		.4byte	.LASF7
 221 0067 03       		.byte	0x3
 222 0068 3F       		.byte	0x3f
 223 0069 6D000000 		.4byte	0x6d
 224 006d 02       		.uleb128 0x2
 225 006e 04       		.byte	0x4
 226 006f 05       		.byte	0x5
 227 0070 5A030000 		.4byte	.LASF8
 228 0074 03       		.uleb128 0x3
 229 0075 65040000 		.4byte	.LASF9
 230 0079 03       		.byte	0x3
 231 007a 41       		.byte	0x41
 232 007b 7F000000 		.4byte	0x7f
 233 007f 02       		.uleb128 0x2
 234 0080 04       		.byte	0x4
 235 0081 07       		.byte	0x7
 236 0082 22050000 		.4byte	.LASF10
 237 0086 02       		.uleb128 0x2
 238 0087 08       		.byte	0x8
 239 0088 05       		.byte	0x5
 240 0089 99020000 		.4byte	.LASF11
 241 008d 02       		.uleb128 0x2
 242 008e 08       		.byte	0x8
 243 008f 07       		.byte	0x7
 244 0090 CB010000 		.4byte	.LASF12
 245 0094 04       		.uleb128 0x4
 246 0095 04       		.byte	0x4
 247 0096 05       		.byte	0x5
 248 0097 696E7400 		.ascii	"int\000"
 249 009b 02       		.uleb128 0x2
 250 009c 04       		.byte	0x4
 251 009d 07       		.byte	0x7
 252 009e F3040000 		.4byte	.LASF13
 253 00a2 03       		.uleb128 0x3
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 35


 254 00a3 6D0A0000 		.4byte	.LASF14
 255 00a7 04       		.byte	0x4
 256 00a8 18       		.byte	0x18
 257 00a9 33000000 		.4byte	0x33
 258 00ad 03       		.uleb128 0x3
 259 00ae 7D020000 		.4byte	.LASF15
 260 00b2 04       		.byte	0x4
 261 00b3 20       		.byte	0x20
 262 00b4 45000000 		.4byte	0x45
 263 00b8 03       		.uleb128 0x3
 264 00b9 47070000 		.4byte	.LASF16
 265 00bd 04       		.byte	0x4
 266 00be 24       		.byte	0x24
 267 00bf 50000000 		.4byte	0x50
 268 00c3 03       		.uleb128 0x3
 269 00c4 04090000 		.4byte	.LASF17
 270 00c8 04       		.byte	0x4
 271 00c9 2C       		.byte	0x2c
 272 00ca 62000000 		.4byte	0x62
 273 00ce 03       		.uleb128 0x3
 274 00cf E7090000 		.4byte	.LASF18
 275 00d3 04       		.byte	0x4
 276 00d4 30       		.byte	0x30
 277 00d5 74000000 		.4byte	0x74
 278 00d9 02       		.uleb128 0x2
 279 00da 04       		.byte	0x4
 280 00db 07       		.byte	0x7
 281 00dc 00050000 		.4byte	.LASF19
 282 00e0 05       		.uleb128 0x5
 283 00e1 CE000000 		.4byte	0xce
 284 00e5 06       		.uleb128 0x6
 285 00e6 E0000000 		.4byte	0xe0
 286 00ea 07       		.uleb128 0x7
 287 00eb E5000000 		.4byte	0xe5
 288 00ef FA000000 		.4byte	0xfa
 289 00f3 08       		.uleb128 0x8
 290 00f4 D9000000 		.4byte	0xd9
 291 00f8 01       		.byte	0x1
 292 00f9 00       		.byte	0
 293 00fa 07       		.uleb128 0x7
 294 00fb E0000000 		.4byte	0xe0
 295 00ff 0A010000 		.4byte	0x10a
 296 0103 08       		.uleb128 0x8
 297 0104 D9000000 		.4byte	0xd9
 298 0108 0F       		.byte	0xf
 299 0109 00       		.byte	0
 300 010a 07       		.uleb128 0x7
 301 010b E5000000 		.4byte	0xe5
 302 010f 1A010000 		.4byte	0x11a
 303 0113 08       		.uleb128 0x8
 304 0114 D9000000 		.4byte	0xd9
 305 0118 0F       		.byte	0xf
 306 0119 00       		.byte	0
 307 011a 07       		.uleb128 0x7
 308 011b E5000000 		.4byte	0xe5
 309 011f 2A010000 		.4byte	0x12a
 310 0123 08       		.uleb128 0x8
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 36


 311 0124 D9000000 		.4byte	0xd9
 312 0128 02       		.byte	0x2
 313 0129 00       		.byte	0
 314 012a 07       		.uleb128 0x7
 315 012b E5000000 		.4byte	0xe5
 316 012f 3A010000 		.4byte	0x13a
 317 0133 08       		.uleb128 0x8
 318 0134 D9000000 		.4byte	0xd9
 319 0138 0E       		.byte	0xe
 320 0139 00       		.byte	0
 321 013a 09       		.uleb128 0x9
 322 013b 080F     		.2byte	0xf08
 323 013d 05       		.byte	0x5
 324 013e 21       		.byte	0x21
 325 013f C2030000 		.4byte	0x3c2
 326 0143 0A       		.uleb128 0xa
 327 0144 FF0A0000 		.4byte	.LASF20
 328 0148 05       		.byte	0x5
 329 0149 22       		.byte	0x22
 330 014a E0000000 		.4byte	0xe0
 331 014e 00       		.byte	0
 332 014f 0A       		.uleb128 0xa
 333 0150 6C070000 		.4byte	.LASF21
 334 0154 05       		.byte	0x5
 335 0155 23       		.byte	0x23
 336 0156 E0000000 		.4byte	0xe0
 337 015a 04       		.byte	0x4
 338 015b 0A       		.uleb128 0xa
 339 015c 65090000 		.4byte	.LASF22
 340 0160 05       		.byte	0x5
 341 0161 24       		.byte	0x24
 342 0162 C7030000 		.4byte	0x3c7
 343 0166 08       		.byte	0x8
 344 0167 0A       		.uleb128 0xa
 345 0168 8C040000 		.4byte	.LASF23
 346 016c 05       		.byte	0x5
 347 016d 25       		.byte	0x25
 348 016e E0000000 		.4byte	0xe0
 349 0172 10       		.byte	0x10
 350 0173 0A       		.uleb128 0xa
 351 0174 BD070000 		.4byte	.LASF24
 352 0178 05       		.byte	0x5
 353 0179 26       		.byte	0x26
 354 017a E0000000 		.4byte	0xe0
 355 017e 14       		.byte	0x14
 356 017f 0A       		.uleb128 0xa
 357 0180 78070000 		.4byte	.LASF25
 358 0184 05       		.byte	0x5
 359 0185 27       		.byte	0x27
 360 0186 E0000000 		.4byte	0xe0
 361 018a 18       		.byte	0x18
 362 018b 0A       		.uleb128 0xa
 363 018c A7010000 		.4byte	.LASF26
 364 0190 05       		.byte	0x5
 365 0191 28       		.byte	0x28
 366 0192 E0000000 		.4byte	0xe0
 367 0196 1C       		.byte	0x1c
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 37


 368 0197 0A       		.uleb128 0xa
 369 0198 B5070000 		.4byte	.LASF27
 370 019c 05       		.byte	0x5
 371 019d 29       		.byte	0x29
 372 019e E0000000 		.4byte	0xe0
 373 01a2 20       		.byte	0x20
 374 01a3 0A       		.uleb128 0xa
 375 01a4 9E060000 		.4byte	.LASF28
 376 01a8 05       		.byte	0x5
 377 01a9 2A       		.byte	0x2a
 378 01aa E0000000 		.4byte	0xe0
 379 01ae 24       		.byte	0x24
 380 01af 0A       		.uleb128 0xa
 381 01b0 7A080000 		.4byte	.LASF29
 382 01b4 05       		.byte	0x5
 383 01b5 2B       		.byte	0x2b
 384 01b6 E1030000 		.4byte	0x3e1
 385 01ba 28       		.byte	0x28
 386 01bb 0A       		.uleb128 0xa
 387 01bc B2040000 		.4byte	.LASF30
 388 01c0 05       		.byte	0x5
 389 01c1 2C       		.byte	0x2c
 390 01c2 E6030000 		.4byte	0x3e6
 391 01c6 80       		.byte	0x80
 392 01c7 0A       		.uleb128 0xa
 393 01c8 A3090000 		.4byte	.LASF31
 394 01cc 05       		.byte	0x5
 395 01cd 2D       		.byte	0x2d
 396 01ce F0030000 		.4byte	0x3f0
 397 01d2 C0       		.byte	0xc0
 398 01d3 0B       		.uleb128 0xb
 399 01d4 D50A0000 		.4byte	.LASF32
 400 01d8 05       		.byte	0x5
 401 01d9 2E       		.byte	0x2e
 402 01da FA030000 		.4byte	0x3fa
 403 01de 0001     		.2byte	0x100
 404 01e0 0B       		.uleb128 0xb
 405 01e1 8E080000 		.4byte	.LASF33
 406 01e5 05       		.byte	0x5
 407 01e6 2F       		.byte	0x2f
 408 01e7 04040000 		.4byte	0x404
 409 01eb 4001     		.2byte	0x140
 410 01ed 0B       		.uleb128 0xb
 411 01ee 06070000 		.4byte	.LASF34
 412 01f2 05       		.byte	0x5
 413 01f3 30       		.byte	0x30
 414 01f4 0E040000 		.4byte	0x40e
 415 01f8 8001     		.2byte	0x180
 416 01fa 0B       		.uleb128 0xb
 417 01fb BB090000 		.4byte	.LASF35
 418 01ff 05       		.byte	0x5
 419 0200 31       		.byte	0x31
 420 0201 18040000 		.4byte	0x418
 421 0205 C001     		.2byte	0x1c0
 422 0207 0B       		.uleb128 0xb
 423 0208 C8050000 		.4byte	.LASF36
 424 020c 05       		.byte	0x5
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 38


 425 020d 32       		.byte	0x32
 426 020e E5000000 		.4byte	0xe5
 427 0212 0002     		.2byte	0x200
 428 0214 0B       		.uleb128 0xb
 429 0215 6A0B0000 		.4byte	.LASF37
 430 0219 05       		.byte	0x5
 431 021a 33       		.byte	0x33
 432 021b E5000000 		.4byte	0xe5
 433 021f 0402     		.2byte	0x204
 434 0221 0B       		.uleb128 0xb
 435 0222 34050000 		.4byte	.LASF38
 436 0226 05       		.byte	0x5
 437 0227 34       		.byte	0x34
 438 0228 E5000000 		.4byte	0xe5
 439 022c 0802     		.2byte	0x208
 440 022e 0B       		.uleb128 0xb
 441 022f 8E090000 		.4byte	.LASF39
 442 0233 05       		.byte	0x5
 443 0234 35       		.byte	0x35
 444 0235 E5000000 		.4byte	0xe5
 445 0239 0C02     		.2byte	0x20c
 446 023b 0B       		.uleb128 0xb
 447 023c 950A0000 		.4byte	.LASF40
 448 0240 05       		.byte	0x5
 449 0241 36       		.byte	0x36
 450 0242 E0000000 		.4byte	0xe0
 451 0246 1002     		.2byte	0x210
 452 0248 0B       		.uleb128 0xb
 453 0249 A9060000 		.4byte	.LASF41
 454 024d 05       		.byte	0x5
 455 024e 37       		.byte	0x37
 456 024f E0000000 		.4byte	0xe0
 457 0253 1402     		.2byte	0x214
 458 0255 0B       		.uleb128 0xb
 459 0256 65050000 		.4byte	.LASF42
 460 025a 05       		.byte	0x5
 461 025b 38       		.byte	0x38
 462 025c E0000000 		.4byte	0xe0
 463 0260 1802     		.2byte	0x218
 464 0262 0B       		.uleb128 0xb
 465 0263 0E080000 		.4byte	.LASF43
 466 0267 05       		.byte	0x5
 467 0268 39       		.byte	0x39
 468 0269 E5000000 		.4byte	0xe5
 469 026d 1C02     		.2byte	0x21c
 470 026f 0B       		.uleb128 0xb
 471 0270 A4040000 		.4byte	.LASF44
 472 0274 05       		.byte	0x5
 473 0275 3A       		.byte	0x3a
 474 0276 E0000000 		.4byte	0xe0
 475 027a 2002     		.2byte	0x220
 476 027c 0B       		.uleb128 0xb
 477 027d FC070000 		.4byte	.LASF45
 478 0281 05       		.byte	0x5
 479 0282 3B       		.byte	0x3b
 480 0283 E0000000 		.4byte	0xe0
 481 0287 2402     		.2byte	0x224
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 39


 482 0289 0B       		.uleb128 0xb
 483 028a 820A0000 		.4byte	.LASF46
 484 028e 05       		.byte	0x5
 485 028f 3C       		.byte	0x3c
 486 0290 E0000000 		.4byte	0xe0
 487 0294 2802     		.2byte	0x228
 488 0296 0B       		.uleb128 0xb
 489 0297 5E0C0000 		.4byte	.LASF47
 490 029b 05       		.byte	0x5
 491 029c 3D       		.byte	0x3d
 492 029d E5000000 		.4byte	0xe5
 493 02a1 2C02     		.2byte	0x22c
 494 02a3 0B       		.uleb128 0xb
 495 02a4 BD050000 		.4byte	.LASF48
 496 02a8 05       		.byte	0x5
 497 02a9 3E       		.byte	0x3e
 498 02aa E0000000 		.4byte	0xe0
 499 02ae 3002     		.2byte	0x230
 500 02b0 0B       		.uleb128 0xb
 501 02b1 F60B0000 		.4byte	.LASF49
 502 02b5 05       		.byte	0x5
 503 02b6 3F       		.byte	0x3f
 504 02b7 E0000000 		.4byte	0xe0
 505 02bb 3402     		.2byte	0x234
 506 02bd 0B       		.uleb128 0xb
 507 02be 6D020000 		.4byte	.LASF50
 508 02c2 05       		.byte	0x5
 509 02c3 40       		.byte	0x40
 510 02c4 E0000000 		.4byte	0xe0
 511 02c8 3802     		.2byte	0x238
 512 02ca 0B       		.uleb128 0xb
 513 02cb 360C0000 		.4byte	.LASF51
 514 02cf 05       		.byte	0x5
 515 02d0 41       		.byte	0x41
 516 02d1 E5000000 		.4byte	0xe5
 517 02d5 3C02     		.2byte	0x23c
 518 02d7 0B       		.uleb128 0xb
 519 02d8 75030000 		.4byte	.LASF52
 520 02dc 05       		.byte	0x5
 521 02dd 42       		.byte	0x42
 522 02de E5000000 		.4byte	0xe5
 523 02e2 4002     		.2byte	0x240
 524 02e4 0B       		.uleb128 0xb
 525 02e5 A4080000 		.4byte	.LASF53
 526 02e9 05       		.byte	0x5
 527 02ea 43       		.byte	0x43
 528 02eb 22040000 		.4byte	0x422
 529 02ef 4402     		.2byte	0x244
 530 02f1 0B       		.uleb128 0xb
 531 02f2 1F000000 		.4byte	.LASF54
 532 02f6 05       		.byte	0x5
 533 02f7 44       		.byte	0x44
 534 02f8 E0000000 		.4byte	0xe0
 535 02fc 8002     		.2byte	0x280
 536 02fe 0B       		.uleb128 0xb
 537 02ff AE080000 		.4byte	.LASF55
 538 0303 05       		.byte	0x5
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 40


 539 0304 45       		.byte	0x45
 540 0305 2C040000 		.4byte	0x42c
 541 0309 8402     		.2byte	0x284
 542 030b 0B       		.uleb128 0xb
 543 030c 8E030000 		.4byte	.LASF56
 544 0310 05       		.byte	0x5
 545 0311 46       		.byte	0x46
 546 0312 E5000000 		.4byte	0xe5
 547 0316 9002     		.2byte	0x290
 548 0318 0B       		.uleb128 0xb
 549 0319 B8080000 		.4byte	.LASF57
 550 031d 05       		.byte	0x5
 551 031e 47       		.byte	0x47
 552 031f 36040000 		.4byte	0x436
 553 0323 9402     		.2byte	0x294
 554 0325 0B       		.uleb128 0xb
 555 0326 290B0000 		.4byte	.LASF58
 556 032a 05       		.byte	0x5
 557 032b 48       		.byte	0x48
 558 032c E5000000 		.4byte	0xe5
 559 0330 A002     		.2byte	0x2a0
 560 0332 0B       		.uleb128 0xb
 561 0333 16000000 		.4byte	.LASF59
 562 0337 05       		.byte	0x5
 563 0338 49       		.byte	0x49
 564 0339 E5000000 		.4byte	0xe5
 565 033d A402     		.2byte	0x2a4
 566 033f 0B       		.uleb128 0xb
 567 0340 C2080000 		.4byte	.LASF60
 568 0344 05       		.byte	0x5
 569 0345 4A       		.byte	0x4a
 570 0346 40040000 		.4byte	0x440
 571 034a A802     		.2byte	0x2a8
 572 034c 0B       		.uleb128 0xb
 573 034d 98000000 		.4byte	.LASF61
 574 0351 05       		.byte	0x5
 575 0352 4B       		.byte	0x4b
 576 0353 E0000000 		.4byte	0xe0
 577 0357 0003     		.2byte	0x300
 578 0359 0B       		.uleb128 0xb
 579 035a F2030000 		.4byte	.LASF62
 580 035e 05       		.byte	0x5
 581 035f 4C       		.byte	0x4c
 582 0360 E0000000 		.4byte	0xe0
 583 0364 0403     		.2byte	0x304
 584 0366 0B       		.uleb128 0xb
 585 0367 CC080000 		.4byte	.LASF63
 586 036b 05       		.byte	0x5
 587 036c 4D       		.byte	0x4d
 588 036d 5A040000 		.4byte	0x45a
 589 0371 0803     		.2byte	0x308
 590 0373 0B       		.uleb128 0xb
 591 0374 52050000 		.4byte	.LASF64
 592 0378 05       		.byte	0x5
 593 0379 4E       		.byte	0x4e
 594 037a E0000000 		.4byte	0xe0
 595 037e 4003     		.2byte	0x340
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 41


 596 0380 0B       		.uleb128 0xb
 597 0381 EC0A0000 		.4byte	.LASF65
 598 0385 05       		.byte	0x5
 599 0386 4F       		.byte	0x4f
 600 0387 E0000000 		.4byte	0xe0
 601 038b 4403     		.2byte	0x344
 602 038d 0B       		.uleb128 0xb
 603 038e 63030000 		.4byte	.LASF66
 604 0392 05       		.byte	0x5
 605 0393 50       		.byte	0x50
 606 0394 E5000000 		.4byte	0xe5
 607 0398 4803     		.2byte	0x348
 608 039a 0B       		.uleb128 0xb
 609 039b 1F030000 		.4byte	.LASF67
 610 039f 05       		.byte	0x5
 611 03a0 51       		.byte	0x51
 612 03a1 75040000 		.4byte	0x475
 613 03a5 4C03     		.2byte	0x34c
 614 03a7 0B       		.uleb128 0xb
 615 03a8 59020000 		.4byte	.LASF68
 616 03ac 05       		.byte	0x5
 617 03ad 52       		.byte	0x52
 618 03ae E0000000 		.4byte	0xe0
 619 03b2 000F     		.2byte	0xf00
 620 03b4 0B       		.uleb128 0xb
 621 03b5 63020000 		.4byte	.LASF69
 622 03b9 05       		.byte	0x5
 623 03ba 53       		.byte	0x53
 624 03bb E0000000 		.4byte	0xe0
 625 03bf 040F     		.2byte	0xf04
 626 03c1 00       		.byte	0
 627 03c2 05       		.uleb128 0x5
 628 03c3 EA000000 		.4byte	0xea
 629 03c7 06       		.uleb128 0x6
 630 03c8 C2030000 		.4byte	0x3c2
 631 03cc 07       		.uleb128 0x7
 632 03cd E5000000 		.4byte	0xe5
 633 03d1 DC030000 		.4byte	0x3dc
 634 03d5 08       		.uleb128 0x8
 635 03d6 D9000000 		.4byte	0xd9
 636 03da 15       		.byte	0x15
 637 03db 00       		.byte	0
 638 03dc 05       		.uleb128 0x5
 639 03dd CC030000 		.4byte	0x3cc
 640 03e1 06       		.uleb128 0x6
 641 03e2 DC030000 		.4byte	0x3dc
 642 03e6 05       		.uleb128 0x5
 643 03e7 FA000000 		.4byte	0xfa
 644 03eb 05       		.uleb128 0x5
 645 03ec 0A010000 		.4byte	0x10a
 646 03f0 06       		.uleb128 0x6
 647 03f1 EB030000 		.4byte	0x3eb
 648 03f5 05       		.uleb128 0x5
 649 03f6 0A010000 		.4byte	0x10a
 650 03fa 06       		.uleb128 0x6
 651 03fb F5030000 		.4byte	0x3f5
 652 03ff 05       		.uleb128 0x5
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 42


 653 0400 0A010000 		.4byte	0x10a
 654 0404 06       		.uleb128 0x6
 655 0405 FF030000 		.4byte	0x3ff
 656 0409 05       		.uleb128 0x5
 657 040a 0A010000 		.4byte	0x10a
 658 040e 06       		.uleb128 0x6
 659 040f 09040000 		.4byte	0x409
 660 0413 05       		.uleb128 0x5
 661 0414 0A010000 		.4byte	0x10a
 662 0418 06       		.uleb128 0x6
 663 0419 13040000 		.4byte	0x413
 664 041d 05       		.uleb128 0x5
 665 041e 2A010000 		.4byte	0x12a
 666 0422 06       		.uleb128 0x6
 667 0423 1D040000 		.4byte	0x41d
 668 0427 05       		.uleb128 0x5
 669 0428 1A010000 		.4byte	0x11a
 670 042c 06       		.uleb128 0x6
 671 042d 27040000 		.4byte	0x427
 672 0431 05       		.uleb128 0x5
 673 0432 1A010000 		.4byte	0x11a
 674 0436 06       		.uleb128 0x6
 675 0437 31040000 		.4byte	0x431
 676 043b 05       		.uleb128 0x5
 677 043c CC030000 		.4byte	0x3cc
 678 0440 06       		.uleb128 0x6
 679 0441 3B040000 		.4byte	0x43b
 680 0445 07       		.uleb128 0x7
 681 0446 E5000000 		.4byte	0xe5
 682 044a 55040000 		.4byte	0x455
 683 044e 08       		.uleb128 0x8
 684 044f D9000000 		.4byte	0xd9
 685 0453 0D       		.byte	0xd
 686 0454 00       		.byte	0
 687 0455 05       		.uleb128 0x5
 688 0456 45040000 		.4byte	0x445
 689 045a 06       		.uleb128 0x6
 690 045b 55040000 		.4byte	0x455
 691 045f 07       		.uleb128 0x7
 692 0460 E5000000 		.4byte	0xe5
 693 0464 70040000 		.4byte	0x470
 694 0468 0C       		.uleb128 0xc
 695 0469 D9000000 		.4byte	0xd9
 696 046d EC02     		.2byte	0x2ec
 697 046f 00       		.byte	0
 698 0470 05       		.uleb128 0x5
 699 0471 5F040000 		.4byte	0x45f
 700 0475 06       		.uleb128 0x6
 701 0476 70040000 		.4byte	0x470
 702 047a 03       		.uleb128 0x3
 703 047b 6E090000 		.4byte	.LASF70
 704 047f 05       		.byte	0x5
 705 0480 54       		.byte	0x54
 706 0481 3A010000 		.4byte	0x13a
 707 0485 0D       		.uleb128 0xd
 708 0486 78050000 		.4byte	.LASF71
 709 048a 06       		.byte	0x6
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 43


 710 048b 5206     		.2byte	0x652
 711 048d 7A040000 		.4byte	0x47a
 712 0491 02       		.uleb128 0x2
 713 0492 08       		.byte	0x8
 714 0493 04       		.byte	0x4
 715 0494 0E0A0000 		.4byte	.LASF72
 716 0498 0E       		.uleb128 0xe
 717 0499 B8       		.byte	0xb8
 718 049a 07       		.byte	0x7
 719 049b 34       		.byte	0x34
 720 049c A9080000 		.4byte	0x8a9
 721 04a0 0A       		.uleb128 0xa
 722 04a1 B2010000 		.4byte	.LASF73
 723 04a5 07       		.byte	0x7
 724 04a6 37       		.byte	0x37
 725 04a7 CE000000 		.4byte	0xce
 726 04ab 00       		.byte	0
 727 04ac 0A       		.uleb128 0xa
 728 04ad 8D000000 		.4byte	.LASF74
 729 04b1 07       		.byte	0x7
 730 04b2 38       		.byte	0x38
 731 04b3 CE000000 		.4byte	0xce
 732 04b7 04       		.byte	0x4
 733 04b8 0A       		.uleb128 0xa
 734 04b9 99030000 		.4byte	.LASF75
 735 04bd 07       		.byte	0x7
 736 04be 39       		.byte	0x39
 737 04bf CE000000 		.4byte	0xce
 738 04c3 08       		.byte	0x8
 739 04c4 0A       		.uleb128 0xa
 740 04c5 DD080000 		.4byte	.LASF76
 741 04c9 07       		.byte	0x7
 742 04ca 3A       		.byte	0x3a
 743 04cb CE000000 		.4byte	0xce
 744 04cf 0C       		.byte	0xc
 745 04d0 0A       		.uleb128 0xa
 746 04d1 F6020000 		.4byte	.LASF77
 747 04d5 07       		.byte	0x7
 748 04d6 3B       		.byte	0x3b
 749 04d7 CE000000 		.4byte	0xce
 750 04db 10       		.byte	0x10
 751 04dc 0A       		.uleb128 0xa
 752 04dd 2A030000 		.4byte	.LASF78
 753 04e1 07       		.byte	0x7
 754 04e2 3C       		.byte	0x3c
 755 04e3 CE000000 		.4byte	0xce
 756 04e7 14       		.byte	0x14
 757 04e8 0A       		.uleb128 0xa
 758 04e9 6F050000 		.4byte	.LASF79
 759 04ed 07       		.byte	0x7
 760 04ee 3D       		.byte	0x3d
 761 04ef CE000000 		.4byte	0xce
 762 04f3 18       		.byte	0x18
 763 04f4 0A       		.uleb128 0xa
 764 04f5 84000000 		.4byte	.LASF80
 765 04f9 07       		.byte	0x7
 766 04fa 3E       		.byte	0x3e
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 44


 767 04fb CE000000 		.4byte	0xce
 768 04ff 1C       		.byte	0x1c
 769 0500 0A       		.uleb128 0xa
 770 0501 2E0C0000 		.4byte	.LASF81
 771 0505 07       		.byte	0x7
 772 0506 3F       		.byte	0x3f
 773 0507 CE000000 		.4byte	0xce
 774 050b 20       		.byte	0x20
 775 050c 0A       		.uleb128 0xa
 776 050d E4070000 		.4byte	.LASF82
 777 0511 07       		.byte	0x7
 778 0512 40       		.byte	0x40
 779 0513 CE000000 		.4byte	0xce
 780 0517 24       		.byte	0x24
 781 0518 0A       		.uleb128 0xa
 782 0519 B2060000 		.4byte	.LASF83
 783 051d 07       		.byte	0x7
 784 051e 43       		.byte	0x43
 785 051f A2000000 		.4byte	0xa2
 786 0523 28       		.byte	0x28
 787 0524 0A       		.uleb128 0xa
 788 0525 6A000000 		.4byte	.LASF84
 789 0529 07       		.byte	0x7
 790 052a 44       		.byte	0x44
 791 052b A2000000 		.4byte	0xa2
 792 052f 29       		.byte	0x29
 793 0530 0A       		.uleb128 0xa
 794 0531 240C0000 		.4byte	.LASF85
 795 0535 07       		.byte	0x7
 796 0536 45       		.byte	0x45
 797 0537 A2000000 		.4byte	0xa2
 798 053b 2A       		.byte	0x2a
 799 053c 0A       		.uleb128 0xa
 800 053d D6070000 		.4byte	.LASF86
 801 0541 07       		.byte	0x7
 802 0542 46       		.byte	0x46
 803 0543 A2000000 		.4byte	0xa2
 804 0547 2B       		.byte	0x2b
 805 0548 0A       		.uleb128 0xa
 806 0549 E7050000 		.4byte	.LASF87
 807 054d 07       		.byte	0x7
 808 054e 47       		.byte	0x47
 809 054f A2000000 		.4byte	0xa2
 810 0553 2C       		.byte	0x2c
 811 0554 0A       		.uleb128 0xa
 812 0555 750A0000 		.4byte	.LASF88
 813 0559 07       		.byte	0x7
 814 055a 48       		.byte	0x48
 815 055b A2000000 		.4byte	0xa2
 816 055f 2D       		.byte	0x2d
 817 0560 0A       		.uleb128 0xa
 818 0561 FF020000 		.4byte	.LASF89
 819 0565 07       		.byte	0x7
 820 0566 49       		.byte	0x49
 821 0567 A2000000 		.4byte	0xa2
 822 056b 2E       		.byte	0x2e
 823 056c 0A       		.uleb128 0xa
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 45


 824 056d C4060000 		.4byte	.LASF90
 825 0571 07       		.byte	0x7
 826 0572 4A       		.byte	0x4a
 827 0573 A2000000 		.4byte	0xa2
 828 0577 2F       		.byte	0x2f
 829 0578 0A       		.uleb128 0xa
 830 0579 1F0A0000 		.4byte	.LASF91
 831 057d 07       		.byte	0x7
 832 057e 4B       		.byte	0x4b
 833 057f A2000000 		.4byte	0xa2
 834 0583 30       		.byte	0x30
 835 0584 0A       		.uleb128 0xa
 836 0585 47050000 		.4byte	.LASF92
 837 0589 07       		.byte	0x7
 838 058a 4E       		.byte	0x4e
 839 058b A2000000 		.4byte	0xa2
 840 058f 31       		.byte	0x31
 841 0590 0A       		.uleb128 0xa
 842 0591 A4000000 		.4byte	.LASF93
 843 0595 07       		.byte	0x7
 844 0596 4F       		.byte	0x4f
 845 0597 A2000000 		.4byte	0xa2
 846 059b 32       		.byte	0x32
 847 059c 0A       		.uleb128 0xa
 848 059d E7040000 		.4byte	.LASF94
 849 05a1 07       		.byte	0x7
 850 05a2 50       		.byte	0x50
 851 05a3 A2000000 		.4byte	0xa2
 852 05a7 33       		.byte	0x33
 853 05a8 0A       		.uleb128 0xa
 854 05a9 12070000 		.4byte	.LASF95
 855 05ad 07       		.byte	0x7
 856 05ae 51       		.byte	0x51
 857 05af A2000000 		.4byte	0xa2
 858 05b3 34       		.byte	0x34
 859 05b4 0A       		.uleb128 0xa
 860 05b5 DF0A0000 		.4byte	.LASF96
 861 05b9 07       		.byte	0x7
 862 05ba 52       		.byte	0x52
 863 05bb AD000000 		.4byte	0xad
 864 05bf 36       		.byte	0x36
 865 05c0 0A       		.uleb128 0xa
 866 05c1 CB030000 		.4byte	.LASF97
 867 05c5 07       		.byte	0x7
 868 05c6 53       		.byte	0x53
 869 05c7 AD000000 		.4byte	0xad
 870 05cb 38       		.byte	0x38
 871 05cc 0A       		.uleb128 0xa
 872 05cd 3A0B0000 		.4byte	.LASF98
 873 05d1 07       		.byte	0x7
 874 05d2 54       		.byte	0x54
 875 05d3 AD000000 		.4byte	0xad
 876 05d7 3A       		.byte	0x3a
 877 05d8 0A       		.uleb128 0xa
 878 05d9 050C0000 		.4byte	.LASF99
 879 05dd 07       		.byte	0x7
 880 05de 55       		.byte	0x55
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 46


 881 05df A2000000 		.4byte	0xa2
 882 05e3 3C       		.byte	0x3c
 883 05e4 0A       		.uleb128 0xa
 884 05e5 04040000 		.4byte	.LASF100
 885 05e9 07       		.byte	0x7
 886 05ea 56       		.byte	0x56
 887 05eb A2000000 		.4byte	0xa2
 888 05ef 3D       		.byte	0x3d
 889 05f0 0A       		.uleb128 0xa
 890 05f1 AD090000 		.4byte	.LASF101
 891 05f5 07       		.byte	0x7
 892 05f6 57       		.byte	0x57
 893 05f7 A2000000 		.4byte	0xa2
 894 05fb 3E       		.byte	0x3e
 895 05fc 0A       		.uleb128 0xa
 896 05fd 78000000 		.4byte	.LASF102
 897 0601 07       		.byte	0x7
 898 0602 58       		.byte	0x58
 899 0603 A2000000 		.4byte	0xa2
 900 0607 3F       		.byte	0x3f
 901 0608 0A       		.uleb128 0xa
 902 0609 EF070000 		.4byte	.LASF103
 903 060d 07       		.byte	0x7
 904 060e 59       		.byte	0x59
 905 060f A2000000 		.4byte	0xa2
 906 0613 40       		.byte	0x40
 907 0614 0A       		.uleb128 0xa
 908 0615 70040000 		.4byte	.LASF104
 909 0619 07       		.byte	0x7
 910 061a 5A       		.byte	0x5a
 911 061b A2000000 		.4byte	0xa2
 912 061f 41       		.byte	0x41
 913 0620 0A       		.uleb128 0xa
 914 0621 50060000 		.4byte	.LASF105
 915 0625 07       		.byte	0x7
 916 0626 5B       		.byte	0x5b
 917 0627 A2000000 		.4byte	0xa2
 918 062b 42       		.byte	0x42
 919 062c 0A       		.uleb128 0xa
 920 062d CB070000 		.4byte	.LASF106
 921 0631 07       		.byte	0x7
 922 0632 5C       		.byte	0x5c
 923 0633 A2000000 		.4byte	0xa2
 924 0637 43       		.byte	0x43
 925 0638 0A       		.uleb128 0xa
 926 0639 A2030000 		.4byte	.LASF107
 927 063d 07       		.byte	0x7
 928 063e 5D       		.byte	0x5d
 929 063f A2000000 		.4byte	0xa2
 930 0643 44       		.byte	0x44
 931 0644 0A       		.uleb128 0xa
 932 0645 F0090000 		.4byte	.LASF108
 933 0649 07       		.byte	0x7
 934 064a 5E       		.byte	0x5e
 935 064b CE000000 		.4byte	0xce
 936 064f 48       		.byte	0x48
 937 0650 0A       		.uleb128 0xa
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 47


 938 0651 80030000 		.4byte	.LASF109
 939 0655 07       		.byte	0x7
 940 0656 5F       		.byte	0x5f
 941 0657 CE000000 		.4byte	0xce
 942 065b 4C       		.byte	0x4c
 943 065c 0A       		.uleb128 0xa
 944 065d BA0C0000 		.4byte	.LASF110
 945 0661 07       		.byte	0x7
 946 0662 60       		.byte	0x60
 947 0663 A2000000 		.4byte	0xa2
 948 0667 50       		.byte	0x50
 949 0668 0A       		.uleb128 0xa
 950 0669 47020000 		.4byte	.LASF111
 951 066d 07       		.byte	0x7
 952 066e 61       		.byte	0x61
 953 066f A2000000 		.4byte	0xa2
 954 0673 51       		.byte	0x51
 955 0674 0A       		.uleb128 0xa
 956 0675 4F0B0000 		.4byte	.LASF112
 957 0679 07       		.byte	0x7
 958 067a 62       		.byte	0x62
 959 067b A2000000 		.4byte	0xa2
 960 067f 52       		.byte	0x52
 961 0680 0A       		.uleb128 0xa
 962 0681 730C0000 		.4byte	.LASF113
 963 0685 07       		.byte	0x7
 964 0686 63       		.byte	0x63
 965 0687 A2000000 		.4byte	0xa2
 966 068b 53       		.byte	0x53
 967 068c 0A       		.uleb128 0xa
 968 068d C5090000 		.4byte	.LASF114
 969 0691 07       		.byte	0x7
 970 0692 64       		.byte	0x64
 971 0693 A2000000 		.4byte	0xa2
 972 0697 54       		.byte	0x54
 973 0698 0A       		.uleb128 0xa
 974 0699 150B0000 		.4byte	.LASF115
 975 069d 07       		.byte	0x7
 976 069e 65       		.byte	0x65
 977 069f A2000000 		.4byte	0xa2
 978 06a3 55       		.byte	0x55
 979 06a4 0A       		.uleb128 0xa
 980 06a5 9F0A0000 		.4byte	.LASF116
 981 06a9 07       		.byte	0x7
 982 06aa 66       		.byte	0x66
 983 06ab A2000000 		.4byte	0xa2
 984 06af 56       		.byte	0x56
 985 06b0 0A       		.uleb128 0xa
 986 06b1 81050000 		.4byte	.LASF117
 987 06b5 07       		.byte	0x7
 988 06b6 67       		.byte	0x67
 989 06b7 A2000000 		.4byte	0xa2
 990 06bb 57       		.byte	0x57
 991 06bc 0A       		.uleb128 0xa
 992 06bd 2F000000 		.4byte	.LASF118
 993 06c1 07       		.byte	0x7
 994 06c2 68       		.byte	0x68
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 48


 995 06c3 A2000000 		.4byte	0xa2
 996 06c7 58       		.byte	0x58
 997 06c8 0A       		.uleb128 0xa
 998 06c9 34090000 		.4byte	.LASF119
 999 06cd 07       		.byte	0x7
 1000 06ce 69       		.byte	0x69
 1001 06cf A2000000 		.4byte	0xa2
 1002 06d3 59       		.byte	0x59
 1003 06d4 0A       		.uleb128 0xa
 1004 06d5 FB060000 		.4byte	.LASF120
 1005 06d9 07       		.byte	0x7
 1006 06da 6E       		.byte	0x6e
 1007 06db B8000000 		.4byte	0xb8
 1008 06df 5A       		.byte	0x5a
 1009 06e0 0A       		.uleb128 0xa
 1010 06e1 BE0A0000 		.4byte	.LASF121
 1011 06e5 07       		.byte	0x7
 1012 06e6 6F       		.byte	0x6f
 1013 06e7 B8000000 		.4byte	0xb8
 1014 06eb 5C       		.byte	0x5c
 1015 06ec 0A       		.uleb128 0xa
 1016 06ed BC010000 		.4byte	.LASF122
 1017 06f1 07       		.byte	0x7
 1018 06f2 70       		.byte	0x70
 1019 06f3 A2000000 		.4byte	0xa2
 1020 06f7 5E       		.byte	0x5e
 1021 06f8 0A       		.uleb128 0xa
 1022 06f9 4F040000 		.4byte	.LASF123
 1023 06fd 07       		.byte	0x7
 1024 06fe 71       		.byte	0x71
 1025 06ff A2000000 		.4byte	0xa2
 1026 0703 5F       		.byte	0x5f
 1027 0704 0A       		.uleb128 0xa
 1028 0705 84070000 		.4byte	.LASF124
 1029 0709 07       		.byte	0x7
 1030 070a 72       		.byte	0x72
 1031 070b A2000000 		.4byte	0xa2
 1032 070f 60       		.byte	0x60
 1033 0710 0A       		.uleb128 0xa
 1034 0711 4F080000 		.4byte	.LASF125
 1035 0715 07       		.byte	0x7
 1036 0716 73       		.byte	0x73
 1037 0717 CE000000 		.4byte	0xce
 1038 071b 64       		.byte	0x64
 1039 071c 0A       		.uleb128 0xa
 1040 071d F7010000 		.4byte	.LASF126
 1041 0721 07       		.byte	0x7
 1042 0722 76       		.byte	0x76
 1043 0723 B8000000 		.4byte	0xb8
 1044 0727 68       		.byte	0x68
 1045 0728 0A       		.uleb128 0xa
 1046 0729 10050000 		.4byte	.LASF127
 1047 072d 07       		.byte	0x7
 1048 072e 77       		.byte	0x77
 1049 072f B8000000 		.4byte	0xb8
 1050 0733 6A       		.byte	0x6a
 1051 0734 0A       		.uleb128 0xa
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 49


 1052 0735 95050000 		.4byte	.LASF128
 1053 0739 07       		.byte	0x7
 1054 073a 78       		.byte	0x78
 1055 073b B8000000 		.4byte	0xb8
 1056 073f 6C       		.byte	0x6c
 1057 0740 0A       		.uleb128 0xa
 1058 0741 DA050000 		.4byte	.LASF129
 1059 0745 07       		.byte	0x7
 1060 0746 79       		.byte	0x79
 1061 0747 B8000000 		.4byte	0xb8
 1062 074b 6E       		.byte	0x6e
 1063 074c 0A       		.uleb128 0xa
 1064 074d 7A090000 		.4byte	.LASF130
 1065 0751 07       		.byte	0x7
 1066 0752 7B       		.byte	0x7b
 1067 0753 A2000000 		.4byte	0xa2
 1068 0757 70       		.byte	0x70
 1069 0758 0A       		.uleb128 0xa
 1070 0759 B3020000 		.4byte	.LASF131
 1071 075d 07       		.byte	0x7
 1072 075e 7C       		.byte	0x7c
 1073 075f A2000000 		.4byte	0xa2
 1074 0763 71       		.byte	0x71
 1075 0764 0A       		.uleb128 0xa
 1076 0765 480C0000 		.4byte	.LASF132
 1077 0769 07       		.byte	0x7
 1078 076a 7D       		.byte	0x7d
 1079 076b A2000000 		.4byte	0xa2
 1080 076f 72       		.byte	0x72
 1081 0770 0A       		.uleb128 0xa
 1082 0771 30070000 		.4byte	.LASF133
 1083 0775 07       		.byte	0x7
 1084 0776 7E       		.byte	0x7e
 1085 0777 A2000000 		.4byte	0xa2
 1086 077b 73       		.byte	0x73
 1087 077c 0A       		.uleb128 0xa
 1088 077d D5090000 		.4byte	.LASF134
 1089 0781 07       		.byte	0x7
 1090 0782 80       		.byte	0x80
 1091 0783 B8000000 		.4byte	0xb8
 1092 0787 74       		.byte	0x74
 1093 0788 0A       		.uleb128 0xa
 1094 0789 5A0A0000 		.4byte	.LASF135
 1095 078d 07       		.byte	0x7
 1096 078e 81       		.byte	0x81
 1097 078f B8000000 		.4byte	0xb8
 1098 0793 76       		.byte	0x76
 1099 0794 0A       		.uleb128 0xa
 1100 0795 DD030000 		.4byte	.LASF136
 1101 0799 07       		.byte	0x7
 1102 079a 82       		.byte	0x82
 1103 079b B8000000 		.4byte	0xb8
 1104 079f 78       		.byte	0x78
 1105 07a0 0A       		.uleb128 0xa
 1106 07a1 C8000000 		.4byte	.LASF137
 1107 07a5 07       		.byte	0x7
 1108 07a6 83       		.byte	0x83
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 50


 1109 07a7 B8000000 		.4byte	0xb8
 1110 07ab 7A       		.byte	0x7a
 1111 07ac 0A       		.uleb128 0xa
 1112 07ad B10B0000 		.4byte	.LASF138
 1113 07b1 07       		.byte	0x7
 1114 07b2 86       		.byte	0x86
 1115 07b3 A2000000 		.4byte	0xa2
 1116 07b7 7C       		.byte	0x7c
 1117 07b8 0A       		.uleb128 0xa
 1118 07b9 040B0000 		.4byte	.LASF139
 1119 07bd 07       		.byte	0x7
 1120 07be 87       		.byte	0x87
 1121 07bf A2000000 		.4byte	0xa2
 1122 07c3 7D       		.byte	0x7d
 1123 07c4 0A       		.uleb128 0xa
 1124 07c5 43000000 		.4byte	.LASF140
 1125 07c9 07       		.byte	0x7
 1126 07ca 88       		.byte	0x88
 1127 07cb A2000000 		.4byte	0xa2
 1128 07cf 7E       		.byte	0x7e
 1129 07d0 0A       		.uleb128 0xa
 1130 07d1 3B040000 		.4byte	.LASF141
 1131 07d5 07       		.byte	0x7
 1132 07d6 89       		.byte	0x89
 1133 07d7 A2000000 		.4byte	0xa2
 1134 07db 7F       		.byte	0x7f
 1135 07dc 0A       		.uleb128 0xa
 1136 07dd D3040000 		.4byte	.LASF142
 1137 07e1 07       		.byte	0x7
 1138 07e2 8A       		.byte	0x8a
 1139 07e3 A2000000 		.4byte	0xa2
 1140 07e7 80       		.byte	0x80
 1141 07e8 0A       		.uleb128 0xa
 1142 07e9 87060000 		.4byte	.LASF143
 1143 07ed 07       		.byte	0x7
 1144 07ee 8D       		.byte	0x8d
 1145 07ef CE000000 		.4byte	0xce
 1146 07f3 84       		.byte	0x84
 1147 07f4 0A       		.uleb128 0xa
 1148 07f5 90010000 		.4byte	.LASF144
 1149 07f9 07       		.byte	0x7
 1150 07fa 8E       		.byte	0x8e
 1151 07fb CE000000 		.4byte	0xce
 1152 07ff 88       		.byte	0x88
 1153 0800 0A       		.uleb128 0xa
 1154 0801 9C0B0000 		.4byte	.LASF145
 1155 0805 07       		.byte	0x7
 1156 0806 8F       		.byte	0x8f
 1157 0807 CE000000 		.4byte	0xce
 1158 080b 8C       		.byte	0x8c
 1159 080c 0A       		.uleb128 0xa
 1160 080d D0060000 		.4byte	.LASF146
 1161 0811 07       		.byte	0x7
 1162 0812 90       		.byte	0x90
 1163 0813 CE000000 		.4byte	0xce
 1164 0817 90       		.byte	0x90
 1165 0818 0A       		.uleb128 0xa
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 51


 1166 0819 BE040000 		.4byte	.LASF147
 1167 081d 07       		.byte	0x7
 1168 081e 91       		.byte	0x91
 1169 081f CE000000 		.4byte	0xce
 1170 0823 94       		.byte	0x94
 1171 0824 0A       		.uleb128 0xa
 1172 0825 71060000 		.4byte	.LASF148
 1173 0829 07       		.byte	0x7
 1174 082a 92       		.byte	0x92
 1175 082b CE000000 		.4byte	0xce
 1176 082f 98       		.byte	0x98
 1177 0830 0A       		.uleb128 0xa
 1178 0831 E00B0000 		.4byte	.LASF149
 1179 0835 07       		.byte	0x7
 1180 0836 93       		.byte	0x93
 1181 0837 CE000000 		.4byte	0xce
 1182 083b 9C       		.byte	0x9c
 1183 083c 0A       		.uleb128 0xa
 1184 083d 07020000 		.4byte	.LASF150
 1185 0841 07       		.byte	0x7
 1186 0842 94       		.byte	0x94
 1187 0843 CE000000 		.4byte	0xce
 1188 0847 A0       		.byte	0xa0
 1189 0848 0A       		.uleb128 0xa
 1190 0849 0A030000 		.4byte	.LASF151
 1191 084d 07       		.byte	0x7
 1192 084e 95       		.byte	0x95
 1193 084f B8000000 		.4byte	0xb8
 1194 0853 A4       		.byte	0xa4
 1195 0854 0A       		.uleb128 0xa
 1196 0855 5C060000 		.4byte	.LASF152
 1197 0859 07       		.byte	0x7
 1198 085a 96       		.byte	0x96
 1199 085b B8000000 		.4byte	0xb8
 1200 085f A6       		.byte	0xa6
 1201 0860 0A       		.uleb128 0xa
 1202 0861 98080000 		.4byte	.LASF153
 1203 0865 07       		.byte	0x7
 1204 0866 97       		.byte	0x97
 1205 0867 B8000000 		.4byte	0xb8
 1206 086b A8       		.byte	0xa8
 1207 086c 0A       		.uleb128 0xa
 1208 086d 2B0A0000 		.4byte	.LASF154
 1209 0871 07       		.byte	0x7
 1210 0872 98       		.byte	0x98
 1211 0873 B8000000 		.4byte	0xb8
 1212 0877 AA       		.byte	0xaa
 1213 0878 0A       		.uleb128 0xa
 1214 0879 A4050000 		.4byte	.LASF155
 1215 087d 07       		.byte	0x7
 1216 087e 99       		.byte	0x99
 1217 087f B8000000 		.4byte	0xb8
 1218 0883 AC       		.byte	0xac
 1219 0884 0A       		.uleb128 0xa
 1220 0885 50070000 		.4byte	.LASF156
 1221 0889 07       		.byte	0x7
 1222 088a 9A       		.byte	0x9a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 52


 1223 088b B8000000 		.4byte	0xb8
 1224 088f AE       		.byte	0xae
 1225 0890 0A       		.uleb128 0xa
 1226 0891 C70A0000 		.4byte	.LASF157
 1227 0895 07       		.byte	0x7
 1228 0896 9D       		.byte	0x9d
 1229 0897 B8000000 		.4byte	0xb8
 1230 089b B0       		.byte	0xb0
 1231 089c 0A       		.uleb128 0xa
 1232 089d 56000000 		.4byte	.LASF158
 1233 08a1 07       		.byte	0x7
 1234 08a2 9E       		.byte	0x9e
 1235 08a3 CE000000 		.4byte	0xce
 1236 08a7 B4       		.byte	0xb4
 1237 08a8 00       		.byte	0
 1238 08a9 03       		.uleb128 0x3
 1239 08aa 1F060000 		.4byte	.LASF159
 1240 08ae 07       		.byte	0x7
 1241 08af 9F       		.byte	0x9f
 1242 08b0 98040000 		.4byte	0x498
 1243 08b4 0D       		.uleb128 0xd
 1244 08b5 09050000 		.4byte	.LASF160
 1245 08b9 08       		.byte	0x8
 1246 08ba F601     		.2byte	0x1f6
 1247 08bc C0080000 		.4byte	0x8c0
 1248 08c0 02       		.uleb128 0x2
 1249 08c1 01       		.byte	0x1
 1250 08c2 08       		.byte	0x8
 1251 08c3 1A0A0000 		.4byte	.LASF161
 1252 08c7 02       		.uleb128 0x2
 1253 08c8 04       		.byte	0x4
 1254 08c9 04       		.byte	0x4
 1255 08ca 1A080000 		.4byte	.LASF162
 1256 08ce 02       		.uleb128 0x2
 1257 08cf 08       		.byte	0x8
 1258 08d0 04       		.byte	0x4
 1259 08d1 D6030000 		.4byte	.LASF163
 1260 08d5 0F       		.uleb128 0xf
 1261 08d6 01       		.byte	0x1
 1262 08d7 3E000000 		.4byte	0x3e
 1263 08db 01       		.byte	0x1
 1264 08dc 1304     		.2byte	0x413
 1265 08de FB080000 		.4byte	0x8fb
 1266 08e2 10       		.uleb128 0x10
 1267 08e3 42030000 		.4byte	.LASF164
 1268 08e7 00       		.byte	0
 1269 08e8 10       		.uleb128 0x10
 1270 08e9 E5080000 		.4byte	.LASF165
 1271 08ed 01       		.byte	0x1
 1272 08ee 10       		.uleb128 0x10
 1273 08ef B3030000 		.4byte	.LASF166
 1274 08f3 02       		.byte	0x2
 1275 08f4 10       		.uleb128 0x10
 1276 08f5 C60B0000 		.4byte	.LASF167
 1277 08f9 03       		.byte	0x3
 1278 08fa 00       		.byte	0
 1279 08fb 0D       		.uleb128 0xd
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 53


 1280 08fc C8020000 		.4byte	.LASF168
 1281 0900 01       		.byte	0x1
 1282 0901 1804     		.2byte	0x418
 1283 0903 D5080000 		.4byte	0x8d5
 1284 0907 0F       		.uleb128 0xf
 1285 0908 01       		.byte	0x1
 1286 0909 3E000000 		.4byte	0x3e
 1287 090d 01       		.byte	0x1
 1288 090e 9404     		.2byte	0x494
 1289 0910 2D090000 		.4byte	0x92d
 1290 0914 10       		.uleb128 0x10
 1291 0915 E5060000 		.4byte	.LASF169
 1292 0919 00       		.byte	0
 1293 091a 10       		.uleb128 0x10
 1294 091b E2010000 		.4byte	.LASF170
 1295 091f 01       		.byte	0x1
 1296 0920 10       		.uleb128 0x10
 1297 0921 1A090000 		.4byte	.LASF171
 1298 0925 02       		.byte	0x2
 1299 0926 10       		.uleb128 0x10
 1300 0927 7E0B0000 		.4byte	.LASF172
 1301 092b 04       		.byte	0x4
 1302 092c 00       		.byte	0
 1303 092d 11       		.uleb128 0x11
 1304 092e 78       		.byte	0x78
 1305 092f 01       		.byte	0x1
 1306 0930 0205     		.2byte	0x502
 1307 0932 FA090000 		.4byte	0x9fa
 1308 0936 12       		.uleb128 0x12
 1309 0937 9A0A0000 		.4byte	.LASF173
 1310 093b 01       		.byte	0x1
 1311 093c 0405     		.2byte	0x504
 1312 093e CE000000 		.4byte	0xce
 1313 0942 00       		.byte	0
 1314 0943 12       		.uleb128 0x12
 1315 0944 5F0B0000 		.4byte	.LASF174
 1316 0948 01       		.byte	0x1
 1317 0949 0505     		.2byte	0x505
 1318 094b CE000000 		.4byte	0xce
 1319 094f 04       		.byte	0x4
 1320 0950 12       		.uleb128 0x12
 1321 0951 1B040000 		.4byte	.LASF175
 1322 0955 01       		.byte	0x1
 1323 0956 0605     		.2byte	0x506
 1324 0958 CE000000 		.4byte	0xce
 1325 095c 08       		.byte	0x8
 1326 095d 12       		.uleb128 0x12
 1327 095e 23070000 		.4byte	.LASF176
 1328 0962 01       		.byte	0x1
 1329 0963 0705     		.2byte	0x507
 1330 0965 CE000000 		.4byte	0xce
 1331 0969 0C       		.byte	0xc
 1332 096a 12       		.uleb128 0x12
 1333 096b B2050000 		.4byte	.LASF177
 1334 096f 01       		.byte	0x1
 1335 0970 0805     		.2byte	0x508
 1336 0972 CE000000 		.4byte	0xce
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 54


 1337 0976 10       		.byte	0x10
 1338 0977 12       		.uleb128 0x12
 1339 0978 300B0000 		.4byte	.LASF178
 1340 097c 01       		.byte	0x1
 1341 097d 0905     		.2byte	0x509
 1342 097f FB080000 		.4byte	0x8fb
 1343 0983 14       		.byte	0x14
 1344 0984 12       		.uleb128 0x12
 1345 0985 D6080000 		.4byte	.LASF179
 1346 0989 01       		.byte	0x1
 1347 098a 0A05     		.2byte	0x50a
 1348 098c CE000000 		.4byte	0xce
 1349 0990 18       		.byte	0x18
 1350 0991 12       		.uleb128 0x12
 1351 0992 2F060000 		.4byte	.LASF180
 1352 0996 01       		.byte	0x1
 1353 0997 0B05     		.2byte	0x50b
 1354 0999 FA090000 		.4byte	0x9fa
 1355 099d 1C       		.byte	0x1c
 1356 099e 12       		.uleb128 0x12
 1357 099f 5C090000 		.4byte	.LASF181
 1358 09a3 01       		.byte	0x1
 1359 09a4 0C05     		.2byte	0x50c
 1360 09a6 CE000000 		.4byte	0xce
 1361 09aa 5C       		.byte	0x5c
 1362 09ab 12       		.uleb128 0x12
 1363 09ac BC000000 		.4byte	.LASF182
 1364 09b0 01       		.byte	0x1
 1365 09b1 0D05     		.2byte	0x50d
 1366 09b3 CE000000 		.4byte	0xce
 1367 09b7 60       		.byte	0x60
 1368 09b8 12       		.uleb128 0x12
 1369 09b9 34030000 		.4byte	.LASF183
 1370 09bd 01       		.byte	0x1
 1371 09be 0E05     		.2byte	0x50e
 1372 09c0 CE000000 		.4byte	0xce
 1373 09c4 64       		.byte	0x64
 1374 09c5 12       		.uleb128 0x12
 1375 09c6 52090000 		.4byte	.LASF184
 1376 09ca 01       		.byte	0x1
 1377 09cb 0F05     		.2byte	0x50f
 1378 09cd CE000000 		.4byte	0xce
 1379 09d1 68       		.byte	0x68
 1380 09d2 12       		.uleb128 0x12
 1381 09d3 140C0000 		.4byte	.LASF185
 1382 09d7 01       		.byte	0x1
 1383 09d8 1005     		.2byte	0x510
 1384 09da CE000000 		.4byte	0xce
 1385 09de 6C       		.byte	0x6c
 1386 09df 12       		.uleb128 0x12
 1387 09e0 5E070000 		.4byte	.LASF186
 1388 09e4 01       		.byte	0x1
 1389 09e5 1105     		.2byte	0x511
 1390 09e7 0A0A0000 		.4byte	0xa0a
 1391 09eb 70       		.byte	0x70
 1392 09ec 12       		.uleb128 0x12
 1393 09ed 020A0000 		.4byte	.LASF187
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 55


 1394 09f1 01       		.byte	0x1
 1395 09f2 1205     		.2byte	0x512
 1396 09f4 CE000000 		.4byte	0xce
 1397 09f8 74       		.byte	0x74
 1398 09f9 00       		.byte	0
 1399 09fa 07       		.uleb128 0x7
 1400 09fb CE000000 		.4byte	0xce
 1401 09ff 0A0A0000 		.4byte	0xa0a
 1402 0a03 08       		.uleb128 0x8
 1403 0a04 D9000000 		.4byte	0xd9
 1404 0a08 0F       		.byte	0xf
 1405 0a09 00       		.byte	0
 1406 0a0a 02       		.uleb128 0x2
 1407 0a0b 01       		.byte	0x1
 1408 0a0c 02       		.byte	0x2
 1409 0a0d FE080000 		.4byte	.LASF188
 1410 0a11 0D       		.uleb128 0xd
 1411 0a12 85020000 		.4byte	.LASF189
 1412 0a16 01       		.byte	0x1
 1413 0a17 1305     		.2byte	0x513
 1414 0a19 2D090000 		.4byte	0x92d
 1415 0a1d 0E       		.uleb128 0xe
 1416 0a1e 14       		.byte	0x14
 1417 0a1f 09       		.byte	0x9
 1418 0a20 3B       		.byte	0x3b
 1419 0a21 620A0000 		.4byte	0xa62
 1420 0a25 0A       		.uleb128 0xa
 1421 0a26 3A060000 		.4byte	.LASF190
 1422 0a2a 09       		.byte	0x9
 1423 0a2b 3D       		.byte	0x3d
 1424 0a2c CE000000 		.4byte	0xce
 1425 0a30 00       		.byte	0
 1426 0a31 0A       		.uleb128 0xa
 1427 0a32 13060000 		.4byte	.LASF191
 1428 0a36 09       		.byte	0x9
 1429 0a37 3E       		.byte	0x3e
 1430 0a38 CE000000 		.4byte	0xce
 1431 0a3c 04       		.byte	0x4
 1432 0a3d 0A       		.uleb128 0xa
 1433 0a3e 80040000 		.4byte	.LASF192
 1434 0a42 09       		.byte	0x9
 1435 0a43 3F       		.byte	0x3f
 1436 0a44 620A0000 		.4byte	0xa62
 1437 0a48 08       		.byte	0x8
 1438 0a49 0A       		.uleb128 0xa
 1439 0a4a B30A0000 		.4byte	.LASF193
 1440 0a4e 09       		.byte	0x9
 1441 0a4f 40       		.byte	0x40
 1442 0a50 CE000000 		.4byte	0xce
 1443 0a54 0C       		.byte	0xc
 1444 0a55 0A       		.uleb128 0xa
 1445 0a56 EB020000 		.4byte	.LASF194
 1446 0a5a 09       		.byte	0x9
 1447 0a5b 45       		.byte	0x45
 1448 0a5c CE000000 		.4byte	0xce
 1449 0a60 10       		.byte	0x10
 1450 0a61 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 56


 1451 0a62 13       		.uleb128 0x13
 1452 0a63 04       		.byte	0x4
 1453 0a64 680A0000 		.4byte	0xa68
 1454 0a68 06       		.uleb128 0x6
 1455 0a69 110A0000 		.4byte	0xa11
 1456 0a6d 03       		.uleb128 0x3
 1457 0a6e 95070000 		.4byte	.LASF195
 1458 0a72 09       		.byte	0x9
 1459 0a73 48       		.byte	0x48
 1460 0a74 1D0A0000 		.4byte	0xa1d
 1461 0a78 14       		.uleb128 0x14
 1462 0a79 60080000 		.4byte	.LASF204
 1463 0a7d 01       		.byte	0x1
 1464 0a7e 1206     		.2byte	0x612
 1465 0a80 CE000000 		.4byte	0xce
 1466 0a84 00000000 		.4byte	.LFB170
 1467 0a88 1A000000 		.4byte	.LFE170-.LFB170
 1468 0a8c 01       		.uleb128 0x1
 1469 0a8d 9C       		.byte	0x9c
 1470 0a8e A20A0000 		.4byte	0xaa2
 1471 0a92 15       		.uleb128 0x15
 1472 0a93 BF060000 		.4byte	.LASF196
 1473 0a97 01       		.byte	0x1
 1474 0a98 1206     		.2byte	0x612
 1475 0a9a A20A0000 		.4byte	0xaa2
 1476 0a9e 02       		.uleb128 0x2
 1477 0a9f 91       		.byte	0x91
 1478 0aa0 74       		.sleb128 -12
 1479 0aa1 00       		.byte	0
 1480 0aa2 13       		.uleb128 0x13
 1481 0aa3 04       		.byte	0x4
 1482 0aa4 A80A0000 		.4byte	0xaa8
 1483 0aa8 06       		.uleb128 0x6
 1484 0aa9 85040000 		.4byte	0x485
 1485 0aad 16       		.uleb128 0x16
 1486 0aae 00000000 		.4byte	.LASF205
 1487 0ab2 01       		.byte	0x1
 1488 0ab3 2F06     		.2byte	0x62f
 1489 0ab5 00000000 		.4byte	.LFB171
 1490 0ab9 34000000 		.4byte	.LFE171-.LFB171
 1491 0abd 01       		.uleb128 0x1
 1492 0abe 9C       		.byte	0x9c
 1493 0abf E20A0000 		.4byte	0xae2
 1494 0ac3 15       		.uleb128 0x15
 1495 0ac4 BF060000 		.4byte	.LASF196
 1496 0ac8 01       		.byte	0x1
 1497 0ac9 2F06     		.2byte	0x62f
 1498 0acb E20A0000 		.4byte	0xae2
 1499 0acf 02       		.uleb128 0x2
 1500 0ad0 91       		.byte	0x91
 1501 0ad1 74       		.sleb128 -12
 1502 0ad2 15       		.uleb128 0x15
 1503 0ad3 5C090000 		.4byte	.LASF181
 1504 0ad7 01       		.byte	0x1
 1505 0ad8 2F06     		.2byte	0x62f
 1506 0ada CE000000 		.4byte	0xce
 1507 0ade 02       		.uleb128 0x2
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 57


 1508 0adf 91       		.byte	0x91
 1509 0ae0 70       		.sleb128 -16
 1510 0ae1 00       		.byte	0
 1511 0ae2 13       		.uleb128 0x13
 1512 0ae3 04       		.byte	0x4
 1513 0ae4 85040000 		.4byte	0x485
 1514 0ae8 17       		.uleb128 0x17
 1515 0ae9 390A0000 		.4byte	.LASF206
 1516 0aed 02       		.byte	0x2
 1517 0aee 40       		.byte	0x40
 1518 0aef 00000000 		.4byte	.LFB271
 1519 0af3 2C000000 		.4byte	.LFE271-.LFB271
 1520 0af7 01       		.uleb128 0x1
 1521 0af8 9C       		.byte	0x9c
 1522 0af9 0C0B0000 		.4byte	0xb0c
 1523 0afd 18       		.uleb128 0x18
 1524 0afe 0F040000 		.4byte	.LASF207
 1525 0b02 02       		.byte	0x2
 1526 0b03 42       		.byte	0x42
 1527 0b04 CE000000 		.4byte	0xce
 1528 0b08 02       		.uleb128 0x2
 1529 0b09 91       		.byte	0x91
 1530 0b0a 74       		.sleb128 -12
 1531 0b0b 00       		.byte	0
 1532 0b0c 19       		.uleb128 0x19
 1533 0b0d 3A020000 		.4byte	.LASF197
 1534 0b11 0A       		.byte	0xa
 1535 0b12 F907     		.2byte	0x7f9
 1536 0b14 180B0000 		.4byte	0xb18
 1537 0b18 05       		.uleb128 0x5
 1538 0b19 C3000000 		.4byte	0xc3
 1539 0b1d 1A       		.uleb128 0x1a
 1540 0b1e 84080000 		.4byte	.LASF198
 1541 0b22 07       		.byte	0x7
 1542 0b23 A7       		.byte	0xa7
 1543 0b24 280B0000 		.4byte	0xb28
 1544 0b28 13       		.uleb128 0x13
 1545 0b29 04       		.byte	0x4
 1546 0b2a 2E0B0000 		.4byte	0xb2e
 1547 0b2e 06       		.uleb128 0x6
 1548 0b2f A9080000 		.4byte	0x8a9
 1549 0b33 19       		.uleb128 0x19
 1550 0b34 F3050000 		.4byte	.LASF199
 1551 0b38 09       		.byte	0x9
 1552 0b39 6001     		.2byte	0x160
 1553 0b3b CE000000 		.4byte	0xce
 1554 0b3f 07       		.uleb128 0x7
 1555 0b40 4F0B0000 		.4byte	0xb4f
 1556 0b44 4F0B0000 		.4byte	0xb4f
 1557 0b48 08       		.uleb128 0x8
 1558 0b49 D9000000 		.4byte	0xd9
 1559 0b4d 00       		.byte	0
 1560 0b4e 00       		.byte	0
 1561 0b4f 06       		.uleb128 0x6
 1562 0b50 6D0A0000 		.4byte	0xa6d
 1563 0b54 19       		.uleb128 0x19
 1564 0b55 1D020000 		.4byte	.LASF200
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 58


 1565 0b59 09       		.byte	0x9
 1566 0b5a 6401     		.2byte	0x164
 1567 0b5c 600B0000 		.4byte	0xb60
 1568 0b60 06       		.uleb128 0x6
 1569 0b61 3F0B0000 		.4byte	0xb3f
 1570 0b65 00       		.byte	0
 1571              		.section	.debug_abbrev,"",%progbits
 1572              	.Ldebug_abbrev0:
 1573 0000 01       		.uleb128 0x1
 1574 0001 11       		.uleb128 0x11
 1575 0002 01       		.byte	0x1
 1576 0003 25       		.uleb128 0x25
 1577 0004 0E       		.uleb128 0xe
 1578 0005 13       		.uleb128 0x13
 1579 0006 0B       		.uleb128 0xb
 1580 0007 03       		.uleb128 0x3
 1581 0008 0E       		.uleb128 0xe
 1582 0009 1B       		.uleb128 0x1b
 1583 000a 0E       		.uleb128 0xe
 1584 000b 55       		.uleb128 0x55
 1585 000c 17       		.uleb128 0x17
 1586 000d 11       		.uleb128 0x11
 1587 000e 01       		.uleb128 0x1
 1588 000f 10       		.uleb128 0x10
 1589 0010 17       		.uleb128 0x17
 1590 0011 00       		.byte	0
 1591 0012 00       		.byte	0
 1592 0013 02       		.uleb128 0x2
 1593 0014 24       		.uleb128 0x24
 1594 0015 00       		.byte	0
 1595 0016 0B       		.uleb128 0xb
 1596 0017 0B       		.uleb128 0xb
 1597 0018 3E       		.uleb128 0x3e
 1598 0019 0B       		.uleb128 0xb
 1599 001a 03       		.uleb128 0x3
 1600 001b 0E       		.uleb128 0xe
 1601 001c 00       		.byte	0
 1602 001d 00       		.byte	0
 1603 001e 03       		.uleb128 0x3
 1604 001f 16       		.uleb128 0x16
 1605 0020 00       		.byte	0
 1606 0021 03       		.uleb128 0x3
 1607 0022 0E       		.uleb128 0xe
 1608 0023 3A       		.uleb128 0x3a
 1609 0024 0B       		.uleb128 0xb
 1610 0025 3B       		.uleb128 0x3b
 1611 0026 0B       		.uleb128 0xb
 1612 0027 49       		.uleb128 0x49
 1613 0028 13       		.uleb128 0x13
 1614 0029 00       		.byte	0
 1615 002a 00       		.byte	0
 1616 002b 04       		.uleb128 0x4
 1617 002c 24       		.uleb128 0x24
 1618 002d 00       		.byte	0
 1619 002e 0B       		.uleb128 0xb
 1620 002f 0B       		.uleb128 0xb
 1621 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 59


 1622 0031 0B       		.uleb128 0xb
 1623 0032 03       		.uleb128 0x3
 1624 0033 08       		.uleb128 0x8
 1625 0034 00       		.byte	0
 1626 0035 00       		.byte	0
 1627 0036 05       		.uleb128 0x5
 1628 0037 35       		.uleb128 0x35
 1629 0038 00       		.byte	0
 1630 0039 49       		.uleb128 0x49
 1631 003a 13       		.uleb128 0x13
 1632 003b 00       		.byte	0
 1633 003c 00       		.byte	0
 1634 003d 06       		.uleb128 0x6
 1635 003e 26       		.uleb128 0x26
 1636 003f 00       		.byte	0
 1637 0040 49       		.uleb128 0x49
 1638 0041 13       		.uleb128 0x13
 1639 0042 00       		.byte	0
 1640 0043 00       		.byte	0
 1641 0044 07       		.uleb128 0x7
 1642 0045 01       		.uleb128 0x1
 1643 0046 01       		.byte	0x1
 1644 0047 49       		.uleb128 0x49
 1645 0048 13       		.uleb128 0x13
 1646 0049 01       		.uleb128 0x1
 1647 004a 13       		.uleb128 0x13
 1648 004b 00       		.byte	0
 1649 004c 00       		.byte	0
 1650 004d 08       		.uleb128 0x8
 1651 004e 21       		.uleb128 0x21
 1652 004f 00       		.byte	0
 1653 0050 49       		.uleb128 0x49
 1654 0051 13       		.uleb128 0x13
 1655 0052 2F       		.uleb128 0x2f
 1656 0053 0B       		.uleb128 0xb
 1657 0054 00       		.byte	0
 1658 0055 00       		.byte	0
 1659 0056 09       		.uleb128 0x9
 1660 0057 13       		.uleb128 0x13
 1661 0058 01       		.byte	0x1
 1662 0059 0B       		.uleb128 0xb
 1663 005a 05       		.uleb128 0x5
 1664 005b 3A       		.uleb128 0x3a
 1665 005c 0B       		.uleb128 0xb
 1666 005d 3B       		.uleb128 0x3b
 1667 005e 0B       		.uleb128 0xb
 1668 005f 01       		.uleb128 0x1
 1669 0060 13       		.uleb128 0x13
 1670 0061 00       		.byte	0
 1671 0062 00       		.byte	0
 1672 0063 0A       		.uleb128 0xa
 1673 0064 0D       		.uleb128 0xd
 1674 0065 00       		.byte	0
 1675 0066 03       		.uleb128 0x3
 1676 0067 0E       		.uleb128 0xe
 1677 0068 3A       		.uleb128 0x3a
 1678 0069 0B       		.uleb128 0xb
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 60


 1679 006a 3B       		.uleb128 0x3b
 1680 006b 0B       		.uleb128 0xb
 1681 006c 49       		.uleb128 0x49
 1682 006d 13       		.uleb128 0x13
 1683 006e 38       		.uleb128 0x38
 1684 006f 0B       		.uleb128 0xb
 1685 0070 00       		.byte	0
 1686 0071 00       		.byte	0
 1687 0072 0B       		.uleb128 0xb
 1688 0073 0D       		.uleb128 0xd
 1689 0074 00       		.byte	0
 1690 0075 03       		.uleb128 0x3
 1691 0076 0E       		.uleb128 0xe
 1692 0077 3A       		.uleb128 0x3a
 1693 0078 0B       		.uleb128 0xb
 1694 0079 3B       		.uleb128 0x3b
 1695 007a 0B       		.uleb128 0xb
 1696 007b 49       		.uleb128 0x49
 1697 007c 13       		.uleb128 0x13
 1698 007d 38       		.uleb128 0x38
 1699 007e 05       		.uleb128 0x5
 1700 007f 00       		.byte	0
 1701 0080 00       		.byte	0
 1702 0081 0C       		.uleb128 0xc
 1703 0082 21       		.uleb128 0x21
 1704 0083 00       		.byte	0
 1705 0084 49       		.uleb128 0x49
 1706 0085 13       		.uleb128 0x13
 1707 0086 2F       		.uleb128 0x2f
 1708 0087 05       		.uleb128 0x5
 1709 0088 00       		.byte	0
 1710 0089 00       		.byte	0
 1711 008a 0D       		.uleb128 0xd
 1712 008b 16       		.uleb128 0x16
 1713 008c 00       		.byte	0
 1714 008d 03       		.uleb128 0x3
 1715 008e 0E       		.uleb128 0xe
 1716 008f 3A       		.uleb128 0x3a
 1717 0090 0B       		.uleb128 0xb
 1718 0091 3B       		.uleb128 0x3b
 1719 0092 05       		.uleb128 0x5
 1720 0093 49       		.uleb128 0x49
 1721 0094 13       		.uleb128 0x13
 1722 0095 00       		.byte	0
 1723 0096 00       		.byte	0
 1724 0097 0E       		.uleb128 0xe
 1725 0098 13       		.uleb128 0x13
 1726 0099 01       		.byte	0x1
 1727 009a 0B       		.uleb128 0xb
 1728 009b 0B       		.uleb128 0xb
 1729 009c 3A       		.uleb128 0x3a
 1730 009d 0B       		.uleb128 0xb
 1731 009e 3B       		.uleb128 0x3b
 1732 009f 0B       		.uleb128 0xb
 1733 00a0 01       		.uleb128 0x1
 1734 00a1 13       		.uleb128 0x13
 1735 00a2 00       		.byte	0
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 61


 1736 00a3 00       		.byte	0
 1737 00a4 0F       		.uleb128 0xf
 1738 00a5 04       		.uleb128 0x4
 1739 00a6 01       		.byte	0x1
 1740 00a7 0B       		.uleb128 0xb
 1741 00a8 0B       		.uleb128 0xb
 1742 00a9 49       		.uleb128 0x49
 1743 00aa 13       		.uleb128 0x13
 1744 00ab 3A       		.uleb128 0x3a
 1745 00ac 0B       		.uleb128 0xb
 1746 00ad 3B       		.uleb128 0x3b
 1747 00ae 05       		.uleb128 0x5
 1748 00af 01       		.uleb128 0x1
 1749 00b0 13       		.uleb128 0x13
 1750 00b1 00       		.byte	0
 1751 00b2 00       		.byte	0
 1752 00b3 10       		.uleb128 0x10
 1753 00b4 28       		.uleb128 0x28
 1754 00b5 00       		.byte	0
 1755 00b6 03       		.uleb128 0x3
 1756 00b7 0E       		.uleb128 0xe
 1757 00b8 1C       		.uleb128 0x1c
 1758 00b9 0B       		.uleb128 0xb
 1759 00ba 00       		.byte	0
 1760 00bb 00       		.byte	0
 1761 00bc 11       		.uleb128 0x11
 1762 00bd 13       		.uleb128 0x13
 1763 00be 01       		.byte	0x1
 1764 00bf 0B       		.uleb128 0xb
 1765 00c0 0B       		.uleb128 0xb
 1766 00c1 3A       		.uleb128 0x3a
 1767 00c2 0B       		.uleb128 0xb
 1768 00c3 3B       		.uleb128 0x3b
 1769 00c4 05       		.uleb128 0x5
 1770 00c5 01       		.uleb128 0x1
 1771 00c6 13       		.uleb128 0x13
 1772 00c7 00       		.byte	0
 1773 00c8 00       		.byte	0
 1774 00c9 12       		.uleb128 0x12
 1775 00ca 0D       		.uleb128 0xd
 1776 00cb 00       		.byte	0
 1777 00cc 03       		.uleb128 0x3
 1778 00cd 0E       		.uleb128 0xe
 1779 00ce 3A       		.uleb128 0x3a
 1780 00cf 0B       		.uleb128 0xb
 1781 00d0 3B       		.uleb128 0x3b
 1782 00d1 05       		.uleb128 0x5
 1783 00d2 49       		.uleb128 0x49
 1784 00d3 13       		.uleb128 0x13
 1785 00d4 38       		.uleb128 0x38
 1786 00d5 0B       		.uleb128 0xb
 1787 00d6 00       		.byte	0
 1788 00d7 00       		.byte	0
 1789 00d8 13       		.uleb128 0x13
 1790 00d9 0F       		.uleb128 0xf
 1791 00da 00       		.byte	0
 1792 00db 0B       		.uleb128 0xb
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 62


 1793 00dc 0B       		.uleb128 0xb
 1794 00dd 49       		.uleb128 0x49
 1795 00de 13       		.uleb128 0x13
 1796 00df 00       		.byte	0
 1797 00e0 00       		.byte	0
 1798 00e1 14       		.uleb128 0x14
 1799 00e2 2E       		.uleb128 0x2e
 1800 00e3 01       		.byte	0x1
 1801 00e4 03       		.uleb128 0x3
 1802 00e5 0E       		.uleb128 0xe
 1803 00e6 3A       		.uleb128 0x3a
 1804 00e7 0B       		.uleb128 0xb
 1805 00e8 3B       		.uleb128 0x3b
 1806 00e9 05       		.uleb128 0x5
 1807 00ea 27       		.uleb128 0x27
 1808 00eb 19       		.uleb128 0x19
 1809 00ec 49       		.uleb128 0x49
 1810 00ed 13       		.uleb128 0x13
 1811 00ee 11       		.uleb128 0x11
 1812 00ef 01       		.uleb128 0x1
 1813 00f0 12       		.uleb128 0x12
 1814 00f1 06       		.uleb128 0x6
 1815 00f2 40       		.uleb128 0x40
 1816 00f3 18       		.uleb128 0x18
 1817 00f4 9742     		.uleb128 0x2117
 1818 00f6 19       		.uleb128 0x19
 1819 00f7 01       		.uleb128 0x1
 1820 00f8 13       		.uleb128 0x13
 1821 00f9 00       		.byte	0
 1822 00fa 00       		.byte	0
 1823 00fb 15       		.uleb128 0x15
 1824 00fc 05       		.uleb128 0x5
 1825 00fd 00       		.byte	0
 1826 00fe 03       		.uleb128 0x3
 1827 00ff 0E       		.uleb128 0xe
 1828 0100 3A       		.uleb128 0x3a
 1829 0101 0B       		.uleb128 0xb
 1830 0102 3B       		.uleb128 0x3b
 1831 0103 05       		.uleb128 0x5
 1832 0104 49       		.uleb128 0x49
 1833 0105 13       		.uleb128 0x13
 1834 0106 02       		.uleb128 0x2
 1835 0107 18       		.uleb128 0x18
 1836 0108 00       		.byte	0
 1837 0109 00       		.byte	0
 1838 010a 16       		.uleb128 0x16
 1839 010b 2E       		.uleb128 0x2e
 1840 010c 01       		.byte	0x1
 1841 010d 03       		.uleb128 0x3
 1842 010e 0E       		.uleb128 0xe
 1843 010f 3A       		.uleb128 0x3a
 1844 0110 0B       		.uleb128 0xb
 1845 0111 3B       		.uleb128 0x3b
 1846 0112 05       		.uleb128 0x5
 1847 0113 27       		.uleb128 0x27
 1848 0114 19       		.uleb128 0x19
 1849 0115 11       		.uleb128 0x11
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 63


 1850 0116 01       		.uleb128 0x1
 1851 0117 12       		.uleb128 0x12
 1852 0118 06       		.uleb128 0x6
 1853 0119 40       		.uleb128 0x40
 1854 011a 18       		.uleb128 0x18
 1855 011b 9642     		.uleb128 0x2116
 1856 011d 19       		.uleb128 0x19
 1857 011e 01       		.uleb128 0x1
 1858 011f 13       		.uleb128 0x13
 1859 0120 00       		.byte	0
 1860 0121 00       		.byte	0
 1861 0122 17       		.uleb128 0x17
 1862 0123 2E       		.uleb128 0x2e
 1863 0124 01       		.byte	0x1
 1864 0125 3F       		.uleb128 0x3f
 1865 0126 19       		.uleb128 0x19
 1866 0127 03       		.uleb128 0x3
 1867 0128 0E       		.uleb128 0xe
 1868 0129 3A       		.uleb128 0x3a
 1869 012a 0B       		.uleb128 0xb
 1870 012b 3B       		.uleb128 0x3b
 1871 012c 0B       		.uleb128 0xb
 1872 012d 27       		.uleb128 0x27
 1873 012e 19       		.uleb128 0x19
 1874 012f 11       		.uleb128 0x11
 1875 0130 01       		.uleb128 0x1
 1876 0131 12       		.uleb128 0x12
 1877 0132 06       		.uleb128 0x6
 1878 0133 40       		.uleb128 0x40
 1879 0134 18       		.uleb128 0x18
 1880 0135 9642     		.uleb128 0x2116
 1881 0137 19       		.uleb128 0x19
 1882 0138 01       		.uleb128 0x1
 1883 0139 13       		.uleb128 0x13
 1884 013a 00       		.byte	0
 1885 013b 00       		.byte	0
 1886 013c 18       		.uleb128 0x18
 1887 013d 34       		.uleb128 0x34
 1888 013e 00       		.byte	0
 1889 013f 03       		.uleb128 0x3
 1890 0140 0E       		.uleb128 0xe
 1891 0141 3A       		.uleb128 0x3a
 1892 0142 0B       		.uleb128 0xb
 1893 0143 3B       		.uleb128 0x3b
 1894 0144 0B       		.uleb128 0xb
 1895 0145 49       		.uleb128 0x49
 1896 0146 13       		.uleb128 0x13
 1897 0147 02       		.uleb128 0x2
 1898 0148 18       		.uleb128 0x18
 1899 0149 00       		.byte	0
 1900 014a 00       		.byte	0
 1901 014b 19       		.uleb128 0x19
 1902 014c 34       		.uleb128 0x34
 1903 014d 00       		.byte	0
 1904 014e 03       		.uleb128 0x3
 1905 014f 0E       		.uleb128 0xe
 1906 0150 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 64


 1907 0151 0B       		.uleb128 0xb
 1908 0152 3B       		.uleb128 0x3b
 1909 0153 05       		.uleb128 0x5
 1910 0154 49       		.uleb128 0x49
 1911 0155 13       		.uleb128 0x13
 1912 0156 3F       		.uleb128 0x3f
 1913 0157 19       		.uleb128 0x19
 1914 0158 3C       		.uleb128 0x3c
 1915 0159 19       		.uleb128 0x19
 1916 015a 00       		.byte	0
 1917 015b 00       		.byte	0
 1918 015c 1A       		.uleb128 0x1a
 1919 015d 34       		.uleb128 0x34
 1920 015e 00       		.byte	0
 1921 015f 03       		.uleb128 0x3
 1922 0160 0E       		.uleb128 0xe
 1923 0161 3A       		.uleb128 0x3a
 1924 0162 0B       		.uleb128 0xb
 1925 0163 3B       		.uleb128 0x3b
 1926 0164 0B       		.uleb128 0xb
 1927 0165 49       		.uleb128 0x49
 1928 0166 13       		.uleb128 0x13
 1929 0167 3F       		.uleb128 0x3f
 1930 0168 19       		.uleb128 0x19
 1931 0169 3C       		.uleb128 0x3c
 1932 016a 19       		.uleb128 0x19
 1933 016b 00       		.byte	0
 1934 016c 00       		.byte	0
 1935 016d 00       		.byte	0
 1936              		.section	.debug_aranges,"",%progbits
 1937 0000 2C000000 		.4byte	0x2c
 1938 0004 0200     		.2byte	0x2
 1939 0006 00000000 		.4byte	.Ldebug_info0
 1940 000a 04       		.byte	0x4
 1941 000b 00       		.byte	0
 1942 000c 0000     		.2byte	0
 1943 000e 0000     		.2byte	0
 1944 0010 00000000 		.4byte	.LFB170
 1945 0014 1A000000 		.4byte	.LFE170-.LFB170
 1946 0018 00000000 		.4byte	.LFB171
 1947 001c 34000000 		.4byte	.LFE171-.LFB171
 1948 0020 00000000 		.4byte	.LFB271
 1949 0024 2C000000 		.4byte	.LFE271-.LFB271
 1950 0028 00000000 		.4byte	0
 1951 002c 00000000 		.4byte	0
 1952              		.section	.debug_ranges,"",%progbits
 1953              	.Ldebug_ranges0:
 1954 0000 00000000 		.4byte	.LFB170
 1955 0004 1A000000 		.4byte	.LFE170
 1956 0008 00000000 		.4byte	.LFB171
 1957 000c 34000000 		.4byte	.LFE171
 1958 0010 00000000 		.4byte	.LFB271
 1959 0014 2C000000 		.4byte	.LFE271
 1960 0018 00000000 		.4byte	0
 1961 001c 00000000 		.4byte	0
 1962              		.section	.debug_line,"",%progbits
 1963              	.Ldebug_line0:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 65


 1964 0000 2A030000 		.section	.debug_str,"MS",%progbits,1
 1964      0200DE02 
 1964      00000201 
 1964      FB0E0D00 
 1964      01010101 
 1965              	.LASF205:
 1966 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1966      41525F43 
 1966      6C656172 
 1966      496E7465 
 1966      72727570 
 1967              	.LASF59:
 1968 0016 4156475F 		.ascii	"AVG_STAT\000"
 1968      53544154 
 1968      00
 1969              	.LASF54:
 1970 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1970      4348414E 
 1970      5F434F4E 
 1970      46494700 
 1971              	.LASF118:
 1972 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1972      6843746C 
 1972      4D61696E 
 1972      57733346 
 1972      72657100 
 1973              	.LASF140:
 1974 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1974      50727443 
 1974      6667496E 
 1974      4F666673 
 1974      657400
 1975              	.LASF158:
 1976 0056 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1976      6F636B53 
 1976      74617475 
 1976      734F6666 
 1976      73657400 
 1977              	.LASF84:
 1978 006a 63727970 		.ascii	"cryptoVersion\000"
 1978      746F5665 
 1978      7273696F 
 1978      6E00
 1979              	.LASF102:
 1980 0078 70657269 		.ascii	"periClockNr\000"
 1980      436C6F63 
 1980      6B4E7200 
 1981              	.LASF80:
 1982 0084 70617373 		.ascii	"passBase\000"
 1982      42617365 
 1982      00
 1983              	.LASF74:
 1984 008d 666C6173 		.ascii	"flashcBase\000"
 1984      68634261 
 1984      736500
 1985              	.LASF61:
 1986 0098 4D55585F 		.ascii	"MUX_SWITCH0\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 66


 1986      53574954 
 1986      43483000 
 1987              	.LASF93:
 1988 00a4 63707573 		.ascii	"cpussIpcIrqNr\000"
 1988      73497063 
 1988      4972714E 
 1988      7200
 1989              	.LASF3:
 1990 00b2 5F5F7569 		.ascii	"__uint8_t\000"
 1990      6E74385F 
 1990      7400
 1991              	.LASF182:
 1992 00bc 73617449 		.ascii	"satIntrMask\000"
 1992      6E74724D 
 1992      61736B00 
 1993              	.LASF137:
 1994 00c8 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1994      44697632 
 1994      345F3543 
 1994      746C4F66 
 1994      66736574 
 1995              	.LASF201:
 1996 00dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1996      43313120 
 1996      352E342E 
 1996      31203230 
 1996      31363036 
 1997 0110 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1997      20726576 
 1997      6973696F 
 1997      6E203233 
 1997      37373135 
 1998 0143 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 1998      70202D6D 
 1998      6670753D 
 1998      66707634 
 1998      2D73702D 
 1999 0176 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1999      6F6E7320 
 1999      2D666661 
 1999      742D6C74 
 1999      6F2D6F62 
 2000              	.LASF144:
 2001 0190 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2001      73436D34 
 2001      436C6F63 
 2001      6B43746C 
 2001      4F666673 
 2002              	.LASF26:
 2003 01a7 52414E47 		.ascii	"RANGE_COND\000"
 2003      455F434F 
 2003      4E4400
 2004              	.LASF73:
 2005 01b2 63707573 		.ascii	"cpussBase\000"
 2005      73426173 
 2005      6500
 2006              	.LASF122:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 67


 2007 01bc 64774368 		.ascii	"dwChCtlPrioPos\000"
 2007      43746C50 
 2007      72696F50 
 2007      6F7300
 2008              	.LASF12:
 2009 01cb 6C6F6E67 		.ascii	"long long unsigned int\000"
 2009      206C6F6E 
 2009      6720756E 
 2009      7369676E 
 2009      65642069 
 2010              	.LASF170:
 2011 01e2 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 2011      41525F49 
 2011      4E54525F 
 2011      454F535F 
 2011      4D41534B 
 2012              	.LASF126:
 2013 01f7 70657269 		.ascii	"periTrCmdOffset\000"
 2013      5472436D 
 2013      644F6666 
 2013      73657400 
 2014              	.LASF150:
 2015 0207 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2015      73537973 
 2015      5469636B 
 2015      43746C4F 
 2015      66667365 
 2016              	.LASF200:
 2017 021d 4144435F 		.ascii	"ADC_INVERTING_AMP_allConfigs\000"
 2017      494E5645 
 2017      5254494E 
 2017      475F414D 
 2017      505F616C 
 2018              	.LASF197:
 2019 023a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2019      52784275 
 2019      66666572 
 2019      00
 2020              	.LASF111:
 2021 0247 666C6173 		.ascii	"flashPipeRequired\000"
 2021      68506970 
 2021      65526571 
 2021      75697265 
 2021      6400
 2022              	.LASF68:
 2023 0259 414E415F 		.ascii	"ANA_TRIM0\000"
 2023      5452494D 
 2023      3000
 2024              	.LASF69:
 2025 0263 414E415F 		.ascii	"ANA_TRIM1\000"
 2025      5452494D 
 2025      3100
 2026              	.LASF50:
 2027 026d 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 2027      455F494E 
 2027      54525F4D 
 2027      41534B00 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 68


 2028              	.LASF15:
 2029 027d 696E7431 		.ascii	"int16_t\000"
 2029      365F7400 
 2030              	.LASF189:
 2031 0285 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 2031      74635F73 
 2031      61725F63 
 2031      6F6E6669 
 2031      675F7400 
 2032              	.LASF11:
 2033 0299 6C6F6E67 		.ascii	"long long int\000"
 2033      206C6F6E 
 2033      6720696E 
 2033      7400
 2034              	.LASF1:
 2035 02a7 7369676E 		.ascii	"signed char\000"
 2035      65642063 
 2035      68617200 
 2036              	.LASF131:
 2037 02b3 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2037      44697643 
 2037      6D645479 
 2037      70655365 
 2037      6C506F73 
 2038              	.LASF168:
 2039 02c8 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 2039      6E5F7361 
 2039      725F7261 
 2039      6E67655F 
 2039      64657465 
 2040              	.LASF194:
 2041 02eb 636C6B44 		.ascii	"clkDivider\000"
 2041      69766964 
 2041      657200
 2042              	.LASF77:
 2043 02f6 70726F74 		.ascii	"protBase\000"
 2043      42617365 
 2043      00
 2044              	.LASF89:
 2045 02ff 69706356 		.ascii	"ipcVersion\000"
 2045      65727369 
 2045      6F6E00
 2046              	.LASF151:
 2047 030a 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2047      73436D30 
 2047      4E6D6943 
 2047      746C4F66 
 2047      66736574 
 2048              	.LASF67:
 2049 031f 52455345 		.ascii	"RESERVED10\000"
 2049      52564544 
 2049      313000
 2050              	.LASF78:
 2051 032a 6873696F 		.ascii	"hsiomBase\000"
 2051      6D426173 
 2051      6500
 2052              	.LASF183:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 69


 2053 0334 72616E67 		.ascii	"rangeIntrMask\000"
 2053      65496E74 
 2053      724D6173 
 2053      6B00
 2054              	.LASF164:
 2055 0342 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 2055      41525F52 
 2055      414E4745 
 2055      5F434F4E 
 2055      445F4245 
 2056              	.LASF8:
 2057 035a 6C6F6E67 		.ascii	"long int\000"
 2057      20696E74 
 2057      00
 2058              	.LASF66:
 2059 0363 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 2059      53574954 
 2059      43485F53 
 2059      54415455 
 2059      5300
 2060              	.LASF52:
 2061 0375 494E5452 		.ascii	"INTR_CAUSE\000"
 2061      5F434155 
 2061      534500
 2062              	.LASF109:
 2063 0380 63727970 		.ascii	"cryptoMemSize\000"
 2063      746F4D65 
 2063      6D53697A 
 2063      6500
 2064              	.LASF56:
 2065 038e 494E4A5F 		.ascii	"INJ_RESULT\000"
 2065      52455355 
 2065      4C5400
 2066              	.LASF75:
 2067 0399 70657269 		.ascii	"periBase\000"
 2067      42617365 
 2067      00
 2068              	.LASF107:
 2069 03a2 73797350 		.ascii	"sysPmSimoPresent\000"
 2069      6D53696D 
 2069      6F507265 
 2069      73656E74 
 2069      00
 2070              	.LASF166:
 2071 03b3 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 2071      41525F52 
 2071      414E4745 
 2071      5F434F4E 
 2071      445F4142 
 2072              	.LASF97:
 2073 03cb 63707573 		.ascii	"cpussFmIrq\000"
 2073      73466D49 
 2073      727100
 2074              	.LASF163:
 2075 03d6 646F7562 		.ascii	"double\000"
 2075      6C6500
 2076              	.LASF136:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 70


 2077 03dd 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2077      44697631 
 2077      365F3543 
 2077      746C4F66 
 2077      66736574 
 2078              	.LASF62:
 2079 03f2 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 2079      53574954 
 2079      43485F43 
 2079      4C454152 
 2079      3000
 2080              	.LASF100:
 2081 0404 73727373 		.ascii	"srssNumPll\000"
 2081      4E756D50 
 2081      6C6C00
 2082              	.LASF207:
 2083 040f 696E7472 		.ascii	"intr_status\000"
 2083      5F737461 
 2083      74757300 
 2084              	.LASF175:
 2085 041b 73616D70 		.ascii	"sampleTime01\000"
 2085      6C655469 
 2085      6D653031 
 2085      00
 2086              	.LASF6:
 2087 0428 73686F72 		.ascii	"short unsigned int\000"
 2087      7420756E 
 2087      7369676E 
 2087      65642069 
 2087      6E7400
 2088              	.LASF141:
 2089 043b 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2089      50727443 
 2089      66674F75 
 2089      744F6666 
 2089      73657400 
 2090              	.LASF123:
 2091 044f 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2091      43746C50 
 2091      7265656D 
 2091      70746162 
 2091      6C65506F 
 2092              	.LASF9:
 2093 0465 5F5F7569 		.ascii	"__uint32_t\000"
 2093      6E743332 
 2093      5F7400
 2094              	.LASF104:
 2095 0470 70617373 		.ascii	"passSarChannels\000"
 2095      53617243 
 2095      68616E6E 
 2095      656C7300 
 2096              	.LASF192:
 2097 0480 6877436F 		.ascii	"hwConfigStc\000"
 2097      6E666967 
 2097      53746300 
 2098              	.LASF23:
 2099 048c 53414D50 		.ascii	"SAMPLE_TIME01\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 71


 2099      4C455F54 
 2099      494D4530 
 2099      3100
 2100              	.LASF4:
 2101 049a 5F5F696E 		.ascii	"__int16_t\000"
 2101      7431365F 
 2101      7400
 2102              	.LASF44:
 2103 04a4 53415455 		.ascii	"SATURATE_INTR\000"
 2103      52415445 
 2103      5F494E54 
 2103      5200
 2104              	.LASF30:
 2105 04b2 4348414E 		.ascii	"CHAN_CONFIG\000"
 2105      5F434F4E 
 2105      46494700 
 2106              	.LASF147:
 2107 04be 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2107      73436D34 
 2107      50777243 
 2107      746C4F66 
 2107      66736574 
 2108              	.LASF142:
 2109 04d3 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2109      50727443 
 2109      66675369 
 2109      6F4F6666 
 2109      73657400 
 2110              	.LASF94:
 2111 04e7 63707573 		.ascii	"cpussDwChNr\000"
 2111      73447743 
 2111      684E7200 
 2112              	.LASF13:
 2113 04f3 756E7369 		.ascii	"unsigned int\000"
 2113      676E6564 
 2113      20696E74 
 2113      00
 2114              	.LASF19:
 2115 0500 73697A65 		.ascii	"sizetype\000"
 2115      74797065 
 2115      00
 2116              	.LASF160:
 2117 0509 63686172 		.ascii	"char_t\000"
 2117      5F7400
 2118              	.LASF127:
 2119 0510 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2119      5472436D 
 2119      64477253 
 2119      656C4D73 
 2119      6B00
 2120              	.LASF10:
 2121 0522 6C6F6E67 		.ascii	"long unsigned int\000"
 2121      20756E73 
 2121      69676E65 
 2121      6420696E 
 2121      7400
 2122              	.LASF38:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 72


 2123 0534 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 2123      5F574F52 
 2123      4B5F4E45 
 2123      5756414C 
 2123      554500
 2124              	.LASF92:
 2125 0547 63707573 		.ascii	"cpussIpcNr\000"
 2125      73497063 
 2125      4E7200
 2126              	.LASF64:
 2127 0552 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 2127      53574954 
 2127      43485F44 
 2127      535F4354 
 2127      524C00
 2128              	.LASF42:
 2129 0565 494E5452 		.ascii	"INTR_MASK\000"
 2129      5F4D4153 
 2129      4B00
 2130              	.LASF79:
 2131 056f 6770696F 		.ascii	"gpioBase\000"
 2131      42617365 
 2131      00
 2132              	.LASF71:
 2133 0578 5341525F 		.ascii	"SAR_Type\000"
 2133      54797065 
 2133      00
 2134              	.LASF117:
 2135 0581 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2135      6843746C 
 2135      4D61696E 
 2135      57733246 
 2135      72657100 
 2136              	.LASF128:
 2137 0595 70657269 		.ascii	"periTrGrOffset\000"
 2137      54724772 
 2137      4F666673 
 2137      657400
 2138              	.LASF155:
 2139 05a4 63707573 		.ascii	"cpussRam1Ctl0\000"
 2139      7352616D 
 2139      3143746C 
 2139      3000
 2140              	.LASF177:
 2141 05b2 72616E67 		.ascii	"rangeThres\000"
 2141      65546872 
 2141      657300
 2142              	.LASF48:
 2143 05bd 52414E47 		.ascii	"RANGE_INTR\000"
 2143      455F494E 
 2143      545200
 2144              	.LASF36:
 2145 05c8 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 2145      5F574F52 
 2145      4B5F5550 
 2145      44415445 
 2145      4400
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 73


 2146              	.LASF129:
 2147 05da 70657269 		.ascii	"periTrGrSize\000"
 2147      54724772 
 2147      53697A65 
 2147      00
 2148              	.LASF87:
 2149 05e7 6770696F 		.ascii	"gpioVersion\000"
 2149      56657273 
 2149      696F6E00 
 2150              	.LASF199:
 2151 05f3 4144435F 		.ascii	"ADC_INVERTING_AMP_currentConfig\000"
 2151      494E5645 
 2151      5254494E 
 2151      475F414D 
 2151      505F6375 
 2152              	.LASF191:
 2153 0613 6E756D43 		.ascii	"numChannels\000"
 2153      68616E6E 
 2153      656C7300 
 2154              	.LASF159:
 2155 061f 63795F73 		.ascii	"cy_stc_device_t\000"
 2155      74635F64 
 2155      65766963 
 2155      655F7400 
 2156              	.LASF180:
 2157 062f 6368616E 		.ascii	"chanConfig\000"
 2157      436F6E66 
 2157      696700
 2158              	.LASF190:
 2159 063a 6368616E 		.ascii	"channelBase\000"
 2159      6E656C42 
 2159      61736500 
 2160              	.LASF7:
 2161 0646 5F5F696E 		.ascii	"__int32_t\000"
 2161      7433325F 
 2161      7400
 2162              	.LASF105:
 2163 0650 65704D6F 		.ascii	"epMonitorNr\000"
 2163      6E69746F 
 2163      724E7200 
 2164              	.LASF152:
 2165 065c 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2165      73436D34 
 2165      4E6D6943 
 2165      746C4F66 
 2165      66736574 
 2166              	.LASF148:
 2167 0671 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2167      73547269 
 2167      6D52616D 
 2167      43746C4F 
 2167      66667365 
 2168              	.LASF143:
 2169 0687 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2169      73436D30 
 2169      436C6F63 
 2169      6B43746C 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 74


 2169      4F666673 
 2170              	.LASF28:
 2171 069e 53544152 		.ascii	"START_CTRL\000"
 2171      545F4354 
 2171      524C00
 2172              	.LASF41:
 2173 06a9 494E5452 		.ascii	"INTR_SET\000"
 2173      5F534554 
 2173      00
 2174              	.LASF83:
 2175 06b2 63707573 		.ascii	"cpussVersion\000"
 2175      73566572 
 2175      73696F6E 
 2175      00
 2176              	.LASF196:
 2177 06bf 62617365 		.ascii	"base\000"
 2177      00
 2178              	.LASF90:
 2179 06c4 70657269 		.ascii	"periVersion\000"
 2179      56657273 
 2179      696F6E00 
 2180              	.LASF146:
 2181 06d0 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2181      73436D30 
 2181      53746174 
 2181      75734F66 
 2181      66736574 
 2182              	.LASF169:
 2183 06e5 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 2183      41525F49 
 2183      4E54525F 
 2183      4D41534B 
 2183      5F4E4F4E 
 2184              	.LASF120:
 2185 06fb 64774368 		.ascii	"dwChOffset\000"
 2185      4F666673 
 2185      657400
 2186              	.LASF34:
 2187 0706 4348414E 		.ascii	"CHAN_RESULT\000"
 2187      5F524553 
 2187      554C5400 
 2188              	.LASF95:
 2189 0712 63707573 		.ascii	"cpussFlashPaSize\000"
 2189      73466C61 
 2189      73685061 
 2189      53697A65 
 2189      00
 2190              	.LASF176:
 2191 0723 73616D70 		.ascii	"sampleTime23\000"
 2191      6C655469 
 2191      6D653233 
 2191      00
 2192              	.LASF133:
 2193 0730 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2193      44697643 
 2193      6D645061 
 2193      54797065 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 75


 2193      53656C50 
 2194              	.LASF16:
 2195 0747 75696E74 		.ascii	"uint16_t\000"
 2195      31365F74 
 2195      00
 2196              	.LASF156:
 2197 0750 63707573 		.ascii	"cpussRam2Ctl0\000"
 2197      7352616D 
 2197      3243746C 
 2197      3000
 2198              	.LASF186:
 2199 075e 636F6E66 		.ascii	"configRouting\000"
 2199      6967526F 
 2199      7574696E 
 2199      6700
 2200              	.LASF21:
 2201 076c 53414D50 		.ascii	"SAMPLE_CTRL\000"
 2201      4C455F43 
 2201      54524C00 
 2202              	.LASF25:
 2203 0778 52414E47 		.ascii	"RANGE_THRES\000"
 2203      455F5448 
 2203      52455300 
 2204              	.LASF124:
 2205 0784 64775374 		.ascii	"dwStatusChIdxPos\000"
 2205      61747573 
 2205      43684964 
 2205      78506F73 
 2205      00
 2206              	.LASF195:
 2207 0795 4144435F 		.ascii	"ADC_INVERTING_AMP_CONFIG_STRUCT\000"
 2207      494E5645 
 2207      5254494E 
 2207      475F414D 
 2207      505F434F 
 2208              	.LASF27:
 2209 07b5 4348414E 		.ascii	"CHAN_EN\000"
 2209      5F454E00 
 2210              	.LASF24:
 2211 07bd 53414D50 		.ascii	"SAMPLE_TIME23\000"
 2211      4C455F54 
 2211      494D4532 
 2211      3300
 2212              	.LASF106:
 2213 07cb 75646250 		.ascii	"udbPresent\000"
 2213      72657365 
 2213      6E7400
 2214              	.LASF86:
 2215 07d6 666C6173 		.ascii	"flashcVersion\000"
 2215      68635665 
 2215      7273696F 
 2215      6E00
 2216              	.LASF82:
 2217 07e4 63727970 		.ascii	"cryptoBase\000"
 2217      746F4261 
 2217      736500
 2218              	.LASF103:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 76


 2219 07ef 736D6966 		.ascii	"smifDeviceNr\000"
 2219      44657669 
 2219      63654E72 
 2219      00
 2220              	.LASF45:
 2221 07fc 53415455 		.ascii	"SATURATE_INTR_SET\000"
 2221      52415445 
 2221      5F494E54 
 2221      525F5345 
 2221      5400
 2222              	.LASF43:
 2223 080e 494E5452 		.ascii	"INTR_MASKED\000"
 2223      5F4D4153 
 2223      4B454400 
 2224              	.LASF162:
 2225 081a 666C6F61 		.ascii	"float\000"
 2225      7400
 2226              	.LASF202:
 2227 0820 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_INVERTING_AMP_INT.c\000"
 2227      72617465 
 2227      645F536F 
 2227      75726365 
 2227      5C50536F 
 2228              	.LASF125:
 2229 084f 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2229      61747573 
 2229      43684964 
 2229      784D736B 
 2229      00
 2230              	.LASF204:
 2231 0860 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 2231      41525F47 
 2231      6574496E 
 2231      74657272 
 2231      75707453 
 2232              	.LASF29:
 2233 087a 52455345 		.ascii	"RESERVED1\000"
 2233      52564544 
 2233      3100
 2234              	.LASF198:
 2235 0884 63795F64 		.ascii	"cy_device\000"
 2235      65766963 
 2235      6500
 2236              	.LASF33:
 2237 088e 52455345 		.ascii	"RESERVED3\000"
 2237      52564544 
 2237      3300
 2238              	.LASF153:
 2239 0898 63707573 		.ascii	"cpussRomCtl\000"
 2239      73526F6D 
 2239      43746C00 
 2240              	.LASF53:
 2241 08a4 52455345 		.ascii	"RESERVED5\000"
 2241      52564544 
 2241      3500
 2242              	.LASF55:
 2243 08ae 52455345 		.ascii	"RESERVED6\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 77


 2243      52564544 
 2243      3600
 2244              	.LASF57:
 2245 08b8 52455345 		.ascii	"RESERVED7\000"
 2245      52564544 
 2245      3700
 2246              	.LASF60:
 2247 08c2 52455345 		.ascii	"RESERVED8\000"
 2247      52564544 
 2247      3800
 2248              	.LASF63:
 2249 08cc 52455345 		.ascii	"RESERVED9\000"
 2249      52564544 
 2249      3900
 2250              	.LASF179:
 2251 08d6 6368616E 		.ascii	"chanEn\000"
 2251      456E00
 2252              	.LASF76:
 2253 08dd 75646242 		.ascii	"udbBase\000"
 2253      61736500 
 2254              	.LASF165:
 2255 08e5 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 2255      41525F52 
 2255      414E4745 
 2255      5F434F4E 
 2255      445F494E 
 2256              	.LASF188:
 2257 08fe 5F426F6F 		.ascii	"_Bool\000"
 2257      6C00
 2258              	.LASF17:
 2259 0904 696E7433 		.ascii	"int32_t\000"
 2259      325F7400 
 2260              	.LASF2:
 2261 090c 756E7369 		.ascii	"unsigned char\000"
 2261      676E6564 
 2261      20636861 
 2261      7200
 2262              	.LASF171:
 2263 091a 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 2263      41525F49 
 2263      4E54525F 
 2263      4F564552 
 2263      464C4F57 
 2264              	.LASF119:
 2265 0934 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2265      6843746C 
 2265      4D61696E 
 2265      57733446 
 2265      72657100 
 2266              	.LASF0:
 2267 0948 73686F72 		.ascii	"short int\000"
 2267      7420696E 
 2267      7400
 2268              	.LASF184:
 2269 0952 6D757853 		.ascii	"muxSwitch\000"
 2269      77697463 
 2269      6800
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 78


 2270              	.LASF181:
 2271 095c 696E7472 		.ascii	"intrMask\000"
 2271      4D61736B 
 2271      00
 2272              	.LASF22:
 2273 0965 52455345 		.ascii	"RESERVED\000"
 2273      52564544 
 2273      00
 2274              	.LASF70:
 2275 096e 5341525F 		.ascii	"SAR_V1_Type\000"
 2275      56315F54 
 2275      79706500 
 2276              	.LASF130:
 2277 097a 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2277      44697643 
 2277      6D644469 
 2277      7653656C 
 2277      4D736B00 
 2278              	.LASF39:
 2279 098e 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 2279      5F524553 
 2279      554C545F 
 2279      4E455756 
 2279      414C5545 
 2280              	.LASF31:
 2281 09a3 52455345 		.ascii	"RESERVED2\000"
 2281      52564544 
 2281      3200
 2282              	.LASF101:
 2283 09ad 73727373 		.ascii	"srssNumHfroot\000"
 2283      4E756D48 
 2283      66726F6F 
 2283      7400
 2284              	.LASF35:
 2285 09bb 52455345 		.ascii	"RESERVED4\000"
 2285      52564544 
 2285      3400
 2286              	.LASF114:
 2287 09c5 666C6173 		.ascii	"flashEraseDelay\000"
 2287      68457261 
 2287      73654465 
 2287      6C617900 
 2288              	.LASF134:
 2289 09d5 70657269 		.ascii	"periDiv8CtlOffset\000"
 2289      44697638 
 2289      43746C4F 
 2289      66667365 
 2289      7400
 2290              	.LASF18:
 2291 09e7 75696E74 		.ascii	"uint32_t\000"
 2291      33325F74 
 2291      00
 2292              	.LASF108:
 2293 09f0 70726F74 		.ascii	"protBusMasterMask\000"
 2293      4275734D 
 2293      61737465 
 2293      724D6173 
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 79


 2293      6B00
 2294              	.LASF187:
 2295 0a02 76726566 		.ascii	"vrefMvValue\000"
 2295      4D765661 
 2295      6C756500 
 2296              	.LASF72:
 2297 0a0e 6C6F6E67 		.ascii	"long double\000"
 2297      20646F75 
 2297      626C6500 
 2298              	.LASF161:
 2299 0a1a 63686172 		.ascii	"char\000"
 2299      00
 2300              	.LASF91:
 2301 0a1f 70726F74 		.ascii	"protVersion\000"
 2301      56657273 
 2301      696F6E00 
 2302              	.LASF154:
 2303 0a2b 63707573 		.ascii	"cpussRam0Ctl0\000"
 2303      7352616D 
 2303      3043746C 
 2303      3000
 2304              	.LASF206:
 2305 0a39 4144435F 		.ascii	"ADC_INVERTING_AMP_ISR\000"
 2305      494E5645 
 2305      5254494E 
 2305      475F414D 
 2305      505F4953 
 2306              	.LASF5:
 2307 0a4f 5F5F7569 		.ascii	"__uint16_t\000"
 2307      6E743136 
 2307      5F7400
 2308              	.LASF135:
 2309 0a5a 70657269 		.ascii	"periDiv16CtlOffset\000"
 2309      44697631 
 2309      3643746C 
 2309      4F666673 
 2309      657400
 2310              	.LASF14:
 2311 0a6d 75696E74 		.ascii	"uint8_t\000"
 2311      385F7400 
 2312              	.LASF88:
 2313 0a75 6873696F 		.ascii	"hsiomVersion\000"
 2313      6D566572 
 2313      73696F6E 
 2313      00
 2314              	.LASF46:
 2315 0a82 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 2315      52415445 
 2315      5F494E54 
 2315      525F4D41 
 2315      534B00
 2316              	.LASF40:
 2317 0a95 494E5452 		.ascii	"INTR\000"
 2317      00
 2318              	.LASF173:
 2319 0a9a 6374726C 		.ascii	"ctrl\000"
 2319      00
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 80


 2320              	.LASF116:
 2321 0a9f 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2321      6843746C 
 2321      4D61696E 
 2321      57733146 
 2321      72657100 
 2322              	.LASF193:
 2323 0ab3 6D697363 		.ascii	"miscConfig\000"
 2323      436F6E66 
 2323      696700
 2324              	.LASF121:
 2325 0abe 64774368 		.ascii	"dwChSize\000"
 2325      53697A65 
 2325      00
 2326              	.LASF157:
 2327 0ac7 69706353 		.ascii	"ipcStructSize\000"
 2327      74727563 
 2327      7453697A 
 2327      6500
 2328              	.LASF32:
 2329 0ad5 4348414E 		.ascii	"CHAN_WORK\000"
 2329      5F574F52 
 2329      4B00
 2330              	.LASF96:
 2331 0adf 63707573 		.ascii	"cpussIpc0Irq\000"
 2331      73497063 
 2331      30497271 
 2331      00
 2332              	.LASF65:
 2333 0aec 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 2333      53574954 
 2333      43485F53 
 2333      515F4354 
 2333      524C00
 2334              	.LASF20:
 2335 0aff 4354524C 		.ascii	"CTRL\000"
 2335      00
 2336              	.LASF139:
 2337 0b04 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2337      50727443 
 2337      66674F66 
 2337      66736574 
 2337      00
 2338              	.LASF115:
 2339 0b15 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2339      6843746C 
 2339      4D61696E 
 2339      57733046 
 2339      72657100 
 2340              	.LASF58:
 2341 0b29 53544154 		.ascii	"STATUS\000"
 2341      555300
 2342              	.LASF178:
 2343 0b30 72616E67 		.ascii	"rangeCond\000"
 2343      65436F6E 
 2343      6400
 2344              	.LASF98:
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 81


 2345 0b3a 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2345      734E6F74 
 2345      436F6E6E 
 2345      65637465 
 2345      64497271 
 2346              	.LASF112:
 2347 0b4f 666C6173 		.ascii	"flashWriteDelay\000"
 2347      68577269 
 2347      74654465 
 2347      6C617900 
 2348              	.LASF174:
 2349 0b5f 73616D70 		.ascii	"sampleCtrl\000"
 2349      6C654374 
 2349      726C00
 2350              	.LASF37:
 2351 0b6a 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 2351      5F524553 
 2351      554C545F 
 2351      55504441 
 2351      54454400 
 2352              	.LASF172:
 2353 0b7e 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 2353      41525F49 
 2353      4E54525F 
 2353      46575F43 
 2353      4F4C4C49 
 2354              	.LASF145:
 2355 0b9c 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2355      73436D34 
 2355      53746174 
 2355      75734F66 
 2355      66736574 
 2356              	.LASF138:
 2357 0bb1 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2357      50727449 
 2357      6E747243 
 2357      66674F66 
 2357      66736574 
 2358              	.LASF167:
 2359 0bc6 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 2359      41525F52 
 2359      414E4745 
 2359      5F434F4E 
 2359      445F4F55 
 2360              	.LASF149:
 2361 0be0 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2361      73547269 
 2361      6D526F6D 
 2361      43746C4F 
 2361      66667365 
 2362              	.LASF49:
 2363 0bf6 52414E47 		.ascii	"RANGE_INTR_SET\000"
 2363      455F494E 
 2363      54525F53 
 2363      455400
 2364              	.LASF99:
 2365 0c05 73727373 		.ascii	"srssNumClkpath\000"
ARM GAS  C:\Users\LOCALA~1\AppData\Local\Temp\ccVbQh82.s 			page 82


 2365      4E756D43 
 2365      6C6B7061 
 2365      746800
 2366              	.LASF185:
 2367 0c14 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 2367      77697463 
 2367      68537143 
 2367      74726C00 
 2368              	.LASF85:
 2369 0c24 64775665 		.ascii	"dwVersion\000"
 2369      7273696F 
 2369      6E00
 2370              	.LASF81:
 2371 0c2e 69706342 		.ascii	"ipcBase\000"
 2371      61736500 
 2372              	.LASF51:
 2373 0c36 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 2373      455F494E 
 2373      54525F4D 
 2373      41534B45 
 2373      4400
 2374              	.LASF132:
 2375 0c48 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2375      44697643 
 2375      6D645061 
 2375      44697653 
 2375      656C506F 
 2376              	.LASF47:
 2377 0c5e 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 2377      52415445 
 2377      5F494E54 
 2377      525F4D41 
 2377      534B4544 
 2378              	.LASF113:
 2379 0c73 666C6173 		.ascii	"flashProgramDelay\000"
 2379      6850726F 
 2379      6772616D 
 2379      44656C61 
 2379      7900
 2380              	.LASF203:
 2381 0c85 443A5C56 		.ascii	"D:\\Vlad\\[2]_PSOC_Porting\\PSOC_Project\\PSOC_PPG."
 2381      6C61645C 
 2381      5B325D5F 
 2381      50534F43 
 2381      5F506F72 
 2382 0cb4 63796473 		.ascii	"cydsn\000"
 2382      6E00
 2383              	.LASF110:
 2384 0cba 666C6173 		.ascii	"flashRwwRequired\000"
 2384      68527777 
 2384      52657175 
 2384      69726564 
 2384      00
 2385              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
